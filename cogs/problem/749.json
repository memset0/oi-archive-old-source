{"title":"电子书狂热者","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pQmixSWqP","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n【问题描述】\n</p>\n<p>\n最低价值协会（ ACM ）是一个非营利性的组织，旨在帮助人们节省资源和金钱。现在， ACM 正在发展一种软件，帮助号称是电子书狂热者省钱。 <br/>\n电子书狂热者热衷于在线读书，有时他一天读的书超过 10 本，没人知道他一天休息多长时间，电子书不是免费的，事实上，他们并不便宜。通过下图（ 2.5.1 ）， ACM 能了解到狂热者读了多少本书。\n</p>\n<div>\n<table border=\"1\">\n<tbody>\n<tr>\n<td>\n第 1 天\n</td>\n<td>\n第 2 天\n</td>\n<td>\n第 3 天\n</td>\n<td>\n第 4 天\n</td>\n<td>\n第 5 天\n</td>\n</tr>\n<tr>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>\n图 2.5.1 所读的书\n</p>\n<p>\n狂热者在第一天读了 1 本书，第三天读了 5 本书，通过图 2.5.2 ， ACM 能知道读一本电子书的价格，不幸的是，价格并不是一成不变的。\n</p>\n<div>\n<table border=\"2\">\n<tbody>\n<tr>\n<td>\n第 1 天\n</td>\n<td>\n第 3 天\n</td>\n<td>\n第 5 天\n</td>\n</tr>\n<tr>\n<td>\n5\n</td>\n<td>\n1\n</td>\n<td>\n2\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>\n图 2.5.2 每天的价格\n</p>\n<p>\n在第 1 天和第 2 天每本电子书的价格为 5 ，到第三天每本书的价格变为 1 ，在第 5 天每本书价格又变为 2 ，因此狂热者需要为他读过的 9 本书付给电子书经营者的钱数为： 5×(1+1)+1×(5+1)+2×1=18 。 <br/>\n为了吸引更多的人来在线读书，电子书经营者推出了一些套餐，见下图 (2.5.3) 。\n</p>\n<div>\n<table border=\"3\">\n<tbody>\n<tr>\n<td>\n套餐\n</td>\n<td>\nA1\n</td>\n<td>\nA2\n</td>\n</tr>\n<tr>\n<td>\n连续读的书本数\n</td>\n<td>\n2\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<td>\n花费\n</td>\n<td>\n6\n</td>\n<td>\n7\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>\n图 2.5.3 菜单 A\n</p>\n<p>\n这意味着如果狂热者选择套餐 A1 ，他连读两本书需付钱数为 6 ，如果选择套餐 A2 ，连读 4 本书需付钱数为 7 ，举例说明：如果他使用套餐 A1 为前两本书付费、用套餐 A2 为接下来的 4 本书付费，而剩下的 3 本书不使用任何套餐，那么所付总费用为： 6+7+1+1+2=17 。实际上，如果他使用套餐 A2 为前 4 本书付费，剩下的 5 本书不使用任何套餐，他将付的费用为： 7+1×3+1+2=13 。当然了，如果需要的话套餐可以多次使用，而且，如果需要，可以使用 “w 本书套餐 ” 为连续的 q 本书付费，其中 q(0 &lt; q &lt; w)<q<w ，举个例子：狂热者可以使用套餐=\"\" a2=\"\" 为他连续的=\"\" 3=\"\" 本书付=\"\" 7=\"\" 块钱，（因为=\"\" 3<4=\"\" ）。=\"\" <br=\"\"> 此外，电子书经营者还推出了另一类套餐，在这些套餐中，经营者关心的重点不在狂热者读了多少本书，而在于狂热者读了多少天书。请看下图 (2.5.4) ：</q<w>\n</p>\n<div>\n<table border=\"4\">\n<tbody>\n<tr>\n<td>\n套餐\n</td>\n<td>\nB1\n</td>\n<td>\nB2\n</td>\n</tr>\n<tr>\n<td>\n连续读的天数\n</td>\n<td>\n3\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<td>\n花费\n</td>\n<td>\n9\n</td>\n<td>\n12\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>\n图 2.5.4 菜单 B\n</p>\n<p>\n这意味着，如果狂热者选择套餐 B1 ，他将为连续三天的读书（不管读了多少本）付费用为 9 ，如果选择套餐 B2 ，连续读 4 天要付的费用为 12 。举例说明：如果他用套餐 B2 为前 4 天付费，剩下的一天不使用任何套餐，他所需付的费用为： 12+2=14 ，同样的，套餐不限使用次数，并且可以使用 “w 天套餐 ” 为连续的 q 天阅读付费，其中q (0 &lt; q &lt; w)<q<w 。现在你的任务是编程帮助狂热者，根据他所读的书本数、价格及套餐，使他所付的费用最少。<=\"\" p=\"\"></q<w>\n</p>\n<p>\n【输入格式】<br/>\n输入文件中有若干个测试数据，对于每一组测试数据，第一行只包含一个整数 n(0≤n≤1,000) ，表示狂热者所读的天数。\n</p>\n<p>\n第二行包含 n 个非负整数 d 1 ,d 2 ,...,d n （∑ d i ≤10,000)\n</p>\n<p>\n然后是一个整数n1表示有n1次价格变化 (0 &lt; n1 ≤ 1,000)\n</p>\n<p>\nc 1 p 1<br/>\nc 2 p 2<br/>\n...<br/>\nc n1 p n1<br/>\n(c 1 =1 ， c1 &lt; c2 &lt; … &lt; cn1 ≤ n, p1, p2… pn1 &gt; 0)<br/>\n这些数据表示在第 c i 天，读一本书的价格变为 pi (0 &lt; i ≤ n1)\n</p>\n<p>\n接着是一个整数n2,表示第一种套餐的数量 (0 ≤ n2 ≤ 1,000)\n</p>\n<p>\na 1 r 1<br/>\na 2 r 2<br/>\n...<br/>\na n2 r n2\n</p>\n<p>\n(0 &lt; a1 &lt; a2 &lt; … &lt; an2 ≤ 10,000, r1, r2… rn2 &gt; 0)<br/>\n这些数据表示狂热者可以为连续读的 a i （或小于 a i ）本书付费用 r i ，\n</p>\n<p>\n接着是一个整数n3,表示第二种套餐的数量 (0 ≤ n3 ≤ 1,000)\n</p>\n<p>\nb 1 s 1<br/>\nb 2 s 2<br/>\n...<br/>\nb n3 s n3<br/>\n(0 &lt; b1 &lt; b2 &lt; … &lt; bn3 ≤ 1,000, s1, s2… sn3 &gt; 0)<br/>\n这些数据表示狂热者可以为连续读的 b i （或小于 b i ）天付费用 s i ，\n</p>\n<p>\n 输入数据以单独的一行包含一个 0 表示结束。<br/>\n【输出格式】<br/>\n对于每一个测试数据，输出仅有一行，即狂热者所需付的最小费用。<br/>\n【输入样例】<br/>\n输入文件名： zealot .in<br/>\n5<br/>\n1 1 5 1 1<br/>\n3<br/>\n1 5<br/>\n3 1<br/>\n5 2<br/>\n2<br/>\n2 6<br/>\n4 7<br/>\n2<br/>\n3 9<br/>\n4 12<br/>\n0<br/>\n输出文件名： zealot .out<br/>\n12\n</p>\n\n"}]}