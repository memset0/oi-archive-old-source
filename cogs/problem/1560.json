{"title":"[UVa 101] 木块问题","time_limit":1000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vNNzJkgea","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n    在计算机科学的很多领域，人们都是用简单，抽象的“区域问题”来进行分析和实践研究。例如：初期的机器人人工智能的研究就从解决方块问题开始的。机器人使用手臂完成有关于方块的操作任务。\n</p>\n<p>\n    在此问题中。你需要构造一个受特定条件限制的简单的方块模型。编写程序让机器人手臂完成一下任务：\n</p>\n<p>\n    分析一下命令，让机器人手臂移动置于平摊桌子上的方块。桌子上有n个方块（记为0到n-1）.其中方块b(i)和方块b(i+1)(0&lt;=i&lt;n-1)相邻。图表如下：\n</p>\n<p>\n<img src=\"/upload/image/20140325/20140325164558_38927.gif\" alt=\"\"/> \n</p>\n<p>\n<br/>\n</p>\n<p>\n及其需要完成的有效命令：\n</p>\n<p>\n●move a onto b：\n</p>\n<p>\na,b分别是方块编号，移动方块a,b上的任何方块，将a置于b上。\n</p>\n<p>\n●move a over b：\n</p>\n<p>\na,b分别是方块编号，移动位于a上的任何方块，将a 置于b摞顶部。\n</p>\n<p>\n●pile a onto b：\n</p>\n<p>\na,b分别是方块编号，移动a摞（包括a上的任何方块）置于b方块上。移动时保持a上的所有方块顺序不变，且先移动b方块上的所有方块。\n</p>\n<p>\n●pile a over b：\n</p>\n<p>\na,b 分别是方块编号，将a 摞（包括a上的任何方块）置于b摞顶部。移动a<strong>摞</strong>时需保持a方块上的所有方块顺序不变。\n</p>\n<p>\n●quit\n</p>\n<p>\n(注：任何包含a=b或将a,b置于同一摞的命令属于错误命令。错误命令将视为无效命令。)\n</p>\n<br/>\n<p>\n<br/>\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n输入信息中以整数n开始（n代表方块的数量），0&lt;n&lt;25\n</p>\n<p>\n一系列命令应在方块的数量之后，每行一个命令。程序运行到退出终止。\n</p>\n<p>\n所有命令必须遵循以上格式。任何语法错误将视为错误命令。\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n输出信息应显示出方块的最后状态。\n</p>\n<p>\n每一个表示方块位置的I（0&lt;=I&lt;n）后都必须使用一个分号。如果方块的数量多于1，分号后需使用一个空格。列举此方块摞中各个方块时，各方块之间需以空格隔开。每行信息中不允许出现多余的空格。\n</p>\n<p>\n每个位置的方块用一行输出信息。（例如在输入信息中第一行输入n，则有n行输出信息）\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【样例输入】\n</h3>\n<pre><p>\n10\nmove 9 onto 1\nmove 8 over 1 \nmove 7 over 1 \nmove 6 over 1 \npile 8 over 6 \npile 8 over 5 \nmove 2 over 1 \nmove 4 over 9 \nquit\n</p>\n</pre>\n<h3>\n【样例输出】\n</h3>\n<pre><p>\n0: 0\n1: 1 9 2 4\n2:\n3: 3\n4:\n5: 5 8 7 6\n6:\n7:\n8:\n9:\n</p>\n</pre>\n<h3>\n【提示】\n</h3>\n<p>\n在此键入。\n</p>\n<h3>\n【来源】\n</h3>\n<p>\nuva101\n</p>\n\n"}]}