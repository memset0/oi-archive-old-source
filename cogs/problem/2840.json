{"title":"二叉查找树","time_limit":1000,"memory_limit":512,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vSQyNVUqa","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n二叉查找树是一种特殊的二叉树（每个节点最多只有两个儿子的树）。树的每个节点上存有一个唯一的值，并且满足：这个节点的左子树内所有点的值都比这个节点的值小，且右子树内所有点的值都比这个节点的值要大。\n</p>\n<p>\n对于一棵二叉查找树T，我们可以将一个值为 x的新点插入 T中，且保持树的性质。算法如下：\n</p>\n<p>\n<img src=\"/upload/image/20171007/20171007171902_51104.jpg\" alt=\"\"/> \n</p>\n<p>\n需要将 x 插入树 T时，执行 insert(x,T.root)。\n</p>\n<p>\n<br/>\n</p>\n<p>\n现在有 N 个数需要插入一棵空树中。给定插入序列，请在每个元素被插入之后，输出所有节点的深度总和（根的深度为 0）。\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n输入的第一行一个整数 n，表示序列长度。\n</p>\n<p>\n<br/>\n</p>\n<p>\n接下来一行n个数是序列中的数字，这些数字是各不相同的，在[1, n]区间。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<p>\n输出 n 行，第 i 行整数表示第 i个数插入树后，至这个节点的节点深度总和。\n</p>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【样例输入】\n</h3>\n<pre>8\n3 5 1 6 8 7 2 4\n</pre>\n<h3>\n【样例输出】\n</h3>\n<pre>0\n1\n2\n4\n7\n11\n13\n15\n</pre>\n<h3>\n【数据规模与约定】\n</h3>\n<p>\n<br/>\n</p>\n<p>\n对于 50%的数据，满足n ≤ 1000\n</p>\n<p>\n对于100%的数据，满足n ≤ 3 ∗ 1e5\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【来源】\n</h3>\n<p>\nqbxt 2017.10.7 t1\n</p>\n\n"}]}