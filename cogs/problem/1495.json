{"title":"[UVa 10828] 随机程序","time_limit":1000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vSzxikqPg","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n<br/>\n</p>\n<center>\n<img src=\"/upload/image/20140119/20140119215914_83767.gif\" alt=\"\"/>\n</center>\n<p>\n<br/>\n</p>\n<p>\n你一定听说过Kernighan和Ritchie，他们是《C程序设计语言》的作者。当在C语言中编程时，我们使用不同的控制语句和循环。例如,if-then-else（原文如此——译者注）,for,do-while等等。考虑如下伪代码：\n</p>\n<pre class=\"prettyprint lang-js\">//execution starts here\ndo {\n\tU;\n\tV;\n} while(condition);\nW;</pre>\n<p>\n在上述代码中，每个分支都有一定的执行条件。这一代码可以用流程图表示如下：\n</p>\n<center>\n<img src=\"/upload/image/20140119/20140119220254_26805.jpg\" alt=\"\"/>\n</center>\n<p>\n对每个节点，令其转到任意后继的概率相等。因此，在上面的代码中，U执行的期望次数是2.在这个问题中，给出这样的一个流程图，请你找出每个节点的期望执行次数。\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n输入包含至多100组数据。\n</p>\n<p>\n每组数据的第1行是一个正整数n(1&lt;=n&lt;=100)。n是流程图中的节点个数。节点被从1到n编号，并且总是从1开始执行。\n</p>\n<p>\n下面有若干行，每行2个正整数：start和end，意味着执行完start后可以转到end。以2个0结束。\n</p>\n<p>\n下面一行有一个正整数q(1&lt;=q&lt;=100)，描述询问个数。\n</p>\n<p>\n接下来的q行，每行一个正整数x，意味着询问节点x的期望执行次数。\n</p>\n<p>\n输入文件以n=0结束。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n对第i组数据：\n</p>\n<p>\n先输出一行&#34;Case #i:&#34;。\n</p>\n<p>\n接下来输出q行，每行1个实数，表示该查询对应的期望次数。保留三位小数。某个节点有可能被永远执行（例如，一个无穷的for循环）。对于这种情况，输出&#34;infinity&#34;。\n</p>\n<p>\n具体格式见样例。\n</p>\n<h3>\n【样例输入】\n</h3>\n<pre>3\n1 2\n2 3\n2 1\n0 0\n3\n1\n2\n3\n3\n1 2\n2 3\n3 1\n0 0\n3\n3\n2\n1\n0\n</pre>\n<h3>\n【样例输出】\n</h3>\n<pre>Case #1:\n2.000\n2.000\n1.000\nCase #2:\ninfinity\ninfinity\ninfinity\n</pre>\n<h3>\n【提示】\n</h3>\n<p>\n使用计算机中的“保留3位小数”指令。假设你的计算机能正确进行舍入。\n</p>\n<h3>\n【来源】\n</h3>\n<p>\nUVa10828 Back to Kernighan-Ritchie\n</p>\n<p>\n刘汝佳，《算法竞赛入门经典训练指南》表2-12\n</p>\n<p>\nProblem setter: Mohammad Sajjad Hossain\n</p>\n<p>\nSpecial Thanks: Shahriar Manzoor\n</p>\n\n"}]}