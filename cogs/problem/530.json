{"title":"[IOI2008] 岛屿","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pxQzxxgja","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p align=\"left\">\n<b>[问题描述]</b> \n</p>\n<p align=\"left\">\n    你将要游览一个有 <strong><em>N </em></strong>个岛屿的公园。从每一个岛 <em>i </em>出发 ，只建造一座 桥。桥的长度以 <strong><em>Li </em></strong>表示。公园内总共有 <strong><em>N </em></strong>座桥。 尽管每座桥由一个岛连到另一个岛，但每座桥均可以双向行走。同时，每一对这样的岛屿，都有一艘专用的往来两岛之间的渡船。\n</p>\n<p>\n相对于乘船而言，你更喜欢步行。 你希望所经过的桥的总长度尽可能的长，但受到以下的限制。\n</p>\n<p>\n可以自行挑选一个岛开始游览。\n</p>\n<ul>\n<li>\n任何一个岛都不能游览一次以上。\n</li>\n<li>\n无论任何时间你都可以由你现在所在的岛<em>S </em>去另一个你<strong>从未</strong>到过的岛 <em>D </em>。由 <em>S </em>到 <em>D </em>可以有以下方法：\n<ul>\n<li>\n步行：仅当两个岛之间有一座桥时才有可能。对于这种情况，桥的长度会累加到你步行的总距离；或者\n</li>\n<li>\n渡船：你可以选择这种方法，仅当没有任何桥 和/或 以前使用过的渡船的组合可以由 <em>S </em>走到 <em>D </em>（当检查是否可到达时 ，你应该考虑所有的路径，包括经过你曾游览过的那些岛）。\n</li>\n</ul>\n</li>\n</ul>\n<p>\n注意，你不必游览所有的岛，也可能无法走完所有的桥。\n</p>\n<p align=\"left\">\n<br/>\n<strong>任务 </strong> \n</p>\n<p>\n编写一个程序，给定 <strong><em>N </em></strong>座桥以及它们的长度，按照上述的规则，计算你可以走过的桥的最大长度。\n</p>\n<p>\n<strong>限制 </strong> \n</p>\n<p>\n2 &lt;= <strong><em>N </em></strong>&lt;= 1,000,000 公园内的岛屿数目。\n</p>\n<p>\n1&lt;= <strong><em>Li </em></strong>&lt;= 100,000,000 桥 <strong><em>i </em></strong>的长度。\n</p>\n<p>\n<strong>输入 </strong> \n</p>\n<p>\n你的程序要从输入文件读入以下数据：\n</p>\n<ul>\n<li>\n第一行包含 <strong><em>N </em></strong>个整数，即公园内岛屿的数目。岛屿由 1 到 <strong><em>N </em></strong>编号。\n</li>\n<li>\n随后的 <strong><em>N </em></strong>行每一行用来表示一个岛。第 <strong><em>i </em></strong>行由两个以单空格分隔的整数，表示由岛 <strong><em>i </em></strong>筑的桥。第一个整数表示桥另一端的岛，第二个整数表示该桥的长度 <strong><em>Li </em></strong>。你可以假设对於每座桥，其端点总是位于不同的岛上 。\n</li>\n</ul>\n<p>\n<strong>输出 </strong> \n</p>\n<p>\n你的程序必须向输出文件写出包含一个整数的单一行，即可能的最大步行距离。\n</p>\n<p>\n<strong>注</strong>：对某些测试，答案可能无法放进 32-bit 整数，你要取得这道题的满分，可能需要用 Pascal 的 int64 或 C/C++ 的 long long 类型。\n</p>\n<p>\n<strong>评分 </strong> \n</p>\n<p>\n有总计 40 分的测试数据，其中 <strong><em>N </em></strong>不会超过 4,000 。\n</p>\n<p>\n<strong>样例输入</strong> \n</p>\n<pre>7\n3 8\n7 2\n4 2\n1 4\n1 9\n3 4\n2 3\n</pre>\n<p>\n<strong>样例输出</strong> \n</p>\n<pre>24\n</pre>\n<p>\n<strong>提示</strong> \n</p>\n<img src=\"http://www.lydsy.com/JudgeOnline/images/1791.jpg\" border=\"0\"/>\n\n"}]}