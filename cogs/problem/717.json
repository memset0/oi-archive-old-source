{"title":"[SDOI2007] 小组队列","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=piQXmJWkW","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n【问题描述】<br/>\n队列和优先队列（用堆实现）是常用的数据结构，但是有一种小组队列却很少有人知道，<br/>\n尽管在生活中经常使用。在人们素质不是很高的地方排队其实不是使用队列，而是小组队列。<br/>\n在人们索质不是很高的地方，排队往往是这样的：每个人都属于一个小组，并且该小组<br/>\n的人非常团结。每当一个人来排队的时候，他会先看一下前边有没有自己小组的成员，如果<br/>\n有的话，他会站到自己小组最后一个成员的后边，如果没有的话，是他最倒霉的时候，他必<br/>\n须站到整个队列的最后。<br/>\n现在，要求写一种数据结构来模拟小组队列。<br/>\n具体问题：有m个小组， n 个元素(编号 0..n-1 ) ，每个元素属于一个小组，当元素 k<br/>\n进入队列时，如果前边有 k 所属小组的元素，k 会排到自己小组最后一个元素的下一个位<br/>\n置，否则 k 排到整个队列最后的位置。出队的方式和普通的队列相同，即排在前边的元素<br/>\n先出队。<br/>\n注：每个元素可能进出队列多次。进出队列的命令最多 100 000 个。<br/>\n【输入】(team.in)<br/>\n第一行m (m&lt;= 300)<br/>\n以下 m 行，每行表示一个小组。每行开始有一个 k 表示该组的元素个数(1 &lt;= k &lt;=总<br/>\n元素个数)，接下来 k 个数，每个数表示该组的一个元素的编号。<br/>\n以下若干行（以&#34;STOP&#34;结束），每行有“ENQUEUE k” 或“DEQUEUE”,前者表示元<br/>\n素 k 进队,后者表示队头的元素出队。<br/>\n【输出】(team.out)<br/>\n对应每个出队命令，按出队顺序依次输出出队的元素，每个一行。<br/>\n【样例输入】<br/>\n4<br/>\n4 0 1 2 3<br/>\n4 4 5 6 7<br/>\n4 8 9 10 11<br/>\n4 12 13 14 15<br/>\nENQUEUE 6<br/>\nENQUEUE 14<br/>\nENQUEUE 1<br/>\nENQUEUE 11<br/>\nENQUEUE 2<br/>\nENQUEUE 4<br/>\nENQUEUE 13<br/>\nENQUEUE 15<br/>\nENQUEUE 12<br/>\nENQUEUE 7<br/>\nENQUEUE 9<br/>\nENQUEUE 10<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nENQUEUE 8<br/>\nENQUEUE 12<br/>\nENQUEUE 6<br/>\nENQUEUE 3<br/>\nENQUEUE 5<br/>\nENQUEUE 1<br/>\nENQUEUE 4<br/>\nENQUEUE 15<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nDEQUEUE<br/>\nSTOP<br/>\n【样例输出】<br/>\n6<br/>\n4<br/>\n7<br/>\n14<br/>\n13<br/>\n15<br/>\n12<br/>\n1<br/>\n2<br/>\n3<br/>\n1<br/>\n11<br/>\n9<br/>\n10<br/>\n8<br/>\n12<br/>\n15<br/>\n6<br/>\n5<br/>\n4<br/>\n范围说明：前30% 1&lt;=n&lt;=100 1&lt;=m&lt;=10 进出队命令&lt;=50<br/>\n全部 1&lt;=n&lt;=100 000 1&lt;=m&lt;=300 命令&lt;=100 000\n\n"}]}