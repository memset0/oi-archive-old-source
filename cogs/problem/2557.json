{"title":"[NOIP 2016] 天天爱跑步","time_limit":2000,"memory_limit":512,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vQNJxVggW","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n小C同学认为跑步非常有趣，于是决定制作一款叫做《天天爱跑步》的游戏。《天天爱跑步》是一个养成类游戏，需要玩家每天按时上线，完成打卡任务。\n</p>\n<p>\n  这个游戏的地图可以看作一棵包含n个结点和n-1条边的树，每条边连接两个结点，且任意两个结点存在一条路径互相可达。树上结点编号为从1到n的连续正整数。\n</p>\n<p>\n  现在有m个玩家，第i个玩家的起点为Si，终点为Ti。每天打卡任务开始时，所有玩家在第0秒同时从自己的起点出发，以每秒跑一条边的速度，不间断地沿着最短路径向着自己的终点跑去，跑到终点后该玩家就算完成了打卡任务。（由于地图是一棵树，所以每个人的路径是唯一的）\n</p>\n<p>\n  小C想知道游戏的活跃度, 所以在每个结点上都放置了一个观察员。在结点的观察员会选择在第Wj秒观察玩家, 一个玩家能被这个观察员观察到当且仅当该玩家在第Wj秒也理到达了结点j。 小C想知道每个观察员会观察到多少人?\n</p>\n<p>\n  注意: 我们认为一个玩家到达自己的终点后该玩家就会结束游戏, 他不能等待一段时间后再被观察员观察到。 即对于把结点J作为终点的玩家: 若他在第Wj秒前到达终点,则在结点J的观察员不能观察到该玩家;若他正好在第Wj秒到达终点,则在结点的观察员可以观察到这个玩家。\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n第一行有两个整数n和m。其中n代表树的结点数量，同时也是观察员的数量，m代表玩家的数量。\n</p>\n<p>\n接下来n-1行每行两个整数u和v，表示结点u到结点v有一条边。\n</p>\n<p>\n接下来一行n个整数，其中第j个整数为Wj，表示结点j出现观察员的时间。\n</p>\n<p>\n接下来m行,每行两个整数Si和Ti，表示一个玩家的起点和终点。\n</p>\n<p>\n对于所有的数据，保证1≤Si,Ti≤n，0≤ Wj ≤n。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n输出1行n个整数,第j个整数表示结点j的观察员可以观察到多少人。\n</p>\n<h3>\n【样例1输入】\n</h3>\n<pre>6 3\n2 3\n1 2\n1 4\n4 5\n4 6\n0 2 5 1 2 3\n1 5\n1 3\n2 6\n</pre>\n<h3>\n【样例1输出】\n</h3>\n<pre>2 0 0 1 1 1</pre>\n<h3>\n【样例2输入】\n</h3>\n<pre>5 3\n1 2\n2 3\n2 4\n1 5\n0 1 0 3 0\n3 1\n1 4\n5 5\n</pre>\n<h3>\n【样例2输出】\n</h3>\n<pre>1 2 1 0 1</pre>\n<h3>\n【提示】\n</h3>\n<p>\n对于1号点，W1=0，故只有起点为1号点的玩家才会被观察到，所以玩家1和玩家2被观察到，共2人被观察到。\n</p>\n<p>\n对于2号点，没有玩家在第2秒时在此结点，共0人被观察到。\n</p>\n<p>\n对于3号点，没有玩家在第5秒时在此结点，共0人被观察到。\n</p>\n<p>\n对于4号点，玩家1被观察到，共1人被观察到。\n</p>\n<p>\n对于5号点，玩家2被观察到，共1人被观察到。\n</p>\n<p>\n对于6号点，玩家3被观察到，共1人被观察到。\n</p>\n<p>\n<img src=\"/upload/image/20161121/20161121150719_28318.jpg\" alt=\"\"/> \n</p>\n<p>\n如果你的程序需要用到较大的栈空间(这通常意味着需要较深层数的递归)，请务必仔细阅读选手目录下的文档running/stack.pdf，以了解在最终评测时栈空间的限制与在当前工作环境下调整栈空间限制的方法。\n</p>\n<h3>\n【来源】\n</h3>\n<p>\nNOIP2016 官方数据\n</p>\n\n"}]}