{"title":"迈克和捷径们","time_limit":3000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vSXJmVjUk","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n最近迈克忙着考前复习，他希望通过出门浮躁来冷静一下。\n</p>\n<p>\n迈克所在的城市包含N个可以浮躁的地方，分别编号为1..N。通常迈克在家也很浮躁，所以\n</p>\n<p>\n说他家属于可以浮躁的地方并且编号为1.迈克从家出发，去一些可以浮躁的地方。迈克从第i个可以浮躁的地方到第j个可以浮躁的地方需要消耗abs（i-j）点精力。迈克花费的精力点数是这样算的，比如他去一组地方p1=1，p2,...,pk就需要<img src=\"/upload/image/20160709/20160709180136_20429.png\" alt=\"\"/>点精力。\n</p>\n<p>\n当然，如果木有捷径的话走路会很无聊。无论两个地方相隔多远，走捷径的话迈克都只需要消耗1点精力。迈克所在的城市里由N条捷径。第i条捷径表示这条捷径连接了第i处和第ai（i&lt;=ai&lt;=ai+1）处（这条捷径是单向的）。所以说其实每个可以浮躁的地方i都有一条捷径从这开始，到达api处。如果迈克选择了这样一组地方p1=1,p2,...,pk，其中1&lt;=i&lt;k满足api=pi+1，迈克就只需要花费1点精力而不是\n</p>\n<p>\nabs（p[i]-p[i+1]）就可以从pi走到pi+1了。再比如迈克选择了这样一个序列去浮躁\n</p>\n<p>\np1=1,p2=ap1,p3=ap2,...,pk=apk-1,那么只需要k-1点精力就可以从p1走到pk了。因为迈克忙着码代码，所以说他拜托你帮他求出来从家到每个可以浮躁的地方需要耗费的精力点数.\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n第1行：一个整数N(1&lt;=N&lt;=200 000)表示迈克所在的城市包含N个可以浮躁的地方(即N条捷径)\n</p>\n<p>\n第2行：N个整数a1,...,aN(i&lt;=ai&lt;=N,<img src=\"/upload/image/20160709/20160709180202_93115.png\" alt=\"\"/>用来表示第i个地方有到第ai个地方的捷径（捷径都是单向的）\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n第1行：N个整数m1,m2,...,mN表示迈克从家里到第i个地方所需要花费的精力点数。\n</p>\n<h3>\n【样例们】\n</h3>\n<pre><p>\n输入：\n</p>\n\n<p>\n3\n</p>\n\n<p>\n2 2 3\n</p>\n\n<p>\n输出：\n</p>\n\n<p>\n0 1 2\n</p>\n\n<p>\n==============\n</p>\n\n<p>\n输入：\n</p>\n\n<p>\n5\n</p>\n\n<p>\n1 2 3 4 5\n</p>\n\n<p>\n输出：\n</p>\n\n<p>\n0 1 2 3 4\n</p>\n\n<p>\n==========\n</p>\n\n<p>\n输入：\n</p>\n\n<p>\n7\n</p>\n\n<p>\n4 4 4 4 7 7 7\n</p>\n\n<p>\n输出：\n</p>\n\n<p>\n0 1 2 1 2 3 3\n</p>\n</pre>\n<br/>\n<br/>\n<h3>\n【来源】\n</h3>\n<p>\nCodeforces Round #361 TB div2\n</p>\n\n"}]}