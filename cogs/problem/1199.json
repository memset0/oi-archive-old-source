{"title":"选课","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vQyiJkkPP","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<br/>\n<h3>\n【题目描述】\n</h3>\n<p>\n<span style=\"font-size:16px;\">大学里实行学分。每门课程都有一定的学分，学生只要选修了这门课并考核通过就能获得相应的学分。学生最后的学分是他选修的各门课的学分的总和。</span><br/>\n<span style=\"font-size:16px;\">每个学生都要选择规定数量的课程。其中有些课程可以直接选修，有些课程需要一定的基础知识，必须在选了其它的一些课程的基础上才能选修。例如，《数据结构》必须在选修了《高级语言程序设计》之后才能选修。我们称《高级语言程序设计》是《数据结构》的先修课。每门课的直接先修课最多只有一门。两门课也可能存在相同的先修课。为便于表述每门课都有一个课号，课号依次为1，2，3，……。下面举例说明</span> \n</p>\n<p style=\"text-align:center;\" align=\"center\">\n<span style=\"font-size:16px;\"><span></span><img src=\"/upload/image/20121022/20121022164607_70627.jpg\" alt=\"\" width=\"375\" height=\"227\"/></span> \n</p>\n<p>\n<span><span style=\"font-size:16px;\">上例中1是2的先修课，即如果要选修2，则1必定已被选过。同样，如果要选修3，那么1和2都一定已被选修过。</span><br/>\n<span style=\"font-size:16px;\">学生不可能学完大学所开设的所有课程，因此必须在入学时选定自己要学的课程。每个学生可选课程的总数是给定的。现在请你找出一种选课方案，使得你能得到学分最多，并且必须满足先修课优先的原则。假定课程之间不存在时间上的冲突。</span></span> \n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n<span style=\"font-size:16px;\">第一行包括两个正整数M、N（中间用一个空格隔开）其中M表示待选课程总数（1≤M≤500)，N表示学生可以选的课程总数（1≤N≤M)。</span><br/>\n<span style=\"font-size:16px;\">以下M行每行代表一门课，课号依次为1，2,…,M。每行有两个数（用一个空格隔开），第一个数为这门课的先修课的课号（若不存在先修课则该项为0），第二个数为这门课的学分。</span> \n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n<span style=\"font-size:16px;\">第一行只有一个数，即实际所选课程的学分总数。以下N行每行有一个数，表示学生所选课程的课号。</span> \n</p>\n<h3>\n【样例输入】\n</h3>\n<pre>7 4\n2 2\n0 1\n0 4\n2 1\n7 1\n7 6\n2 2\n</pre>\n<h3>\n【样例输出】\n</h3>\n<pre>13\n2\n3\n6\n7</pre>\n<h3>\n【提示】\n</h3>\n<p>\n<span style=\"font-size:16px;\">最后结果按学生所选课程课号的升序输出。</span> \n</p>\n<h3>\n【来源】\n</h3>\n<p>\n<br/>\n</p>\n\n"}]}