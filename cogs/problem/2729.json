{"title":"[郑州集训 2017]NOI模拟题5.1","time_limit":2000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vyQxmVWVP","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n<img alt=\"\" src=\"/upload/image/20170711/20170711213632_31593.png\"/> \n</p>\n<p>\n<img alt=\"\" src=\"/upload/image/20170711/20170711213717_70151.png\"/> \n</p>\n<p>\n<img alt=\"\" src=\"/upload/image/20170711/20170711213802_79179.png\"/> \n</p>\n<p>\n<img alt=\"\" src=\"/upload/image/20170711/20170711213843_54573.png\"/> \n</p>\n<p>\n以及，由于数据的问题，各位同学在提交的时候需要加上数据生成器，详情请参照以下模板\n</p>\n<p>\n<br/>\n</p>\n<pre class=\"prettyprint lang-cpp\">#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n// DATA_GEN --- BEGIN ---// 你可以直接将这个数据生成器嵌入到你的代码中\n// 或者，你也可以根据自己程序的需要，自己改写这个数据生成器\n// 使用方法：从输入文件读入 N 和随机数种子之后，调用 gen_data 方法，可以将获得的排列 {A}, {B}, {C} 分别存放在对应 3 个数组中\nconst int MAXN = 2e6 + 10;\nint lastInt, seed;\ninline int nextInt() {\n\tstatic const int mod = 1e9 + 7;\n\tlastInt = lastInt ^ (((long long) lastInt * lastInt + seed) % mod);\n\treturn lastInt;\n}\nvoid getPerm(int P[], int n, int x0, int c) {\n\tfor (int i = 1; i &lt;= n; ++i) P[i] = i;\n\tlastInt = x0;\n\tseed = c;\n\tfor (int i = n; i &gt;= 1; --i) std::swap(P[i], P[nextInt() % i + 1]);\n}\nint n, A[MAXN], B[MAXN], C[MAXN];  // 生成的排列将存储在这三个数组中\nvoid gen_data(int n, int a0, int seed_a, int b0, int seed_b, int c0, int seed_c) {\n\tgetPerm(A, n, a0, seed_a);\n\tgetPerm(B, n, b0, seed_b);\n\tgetPerm(C, n, c0, seed_c);\n}\n// DATA_GEN --- END ---\nint main()\n{\n\tint n;\n\tint a0, s_a;\n\tint b0, s_b;\n\tint c0, s_c;\n\tstd::cin &gt;&gt; n;\n\tstd::cin &gt;&gt; a0 &gt;&gt; s_a;\n\tstd::cin &gt;&gt; b0 &gt;&gt; s_b;\n\tstd::cin &gt;&gt; c0 &gt;&gt; s_c;\n\tgen_data(n, a0, s_a, b0, s_b, c0, s_c);\n\t/*\n\t在这里填写你的程序\n\t*/\n\treturn 0;\n}</pre>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n\n"}]}