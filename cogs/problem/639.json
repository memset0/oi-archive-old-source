{"title":"[IPSC2001] 笑脸","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pmNJmiejP","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<div>\n<b>问题描述</b> \n</div>\n<div>\n    Ace 女王最近颁布了一条新法律，禁止在 Wondernet 上发送笑脸。但是女王担心人们还是会冒着被砍头的危险对这条法律置之不理，尤其是 Alice 。女王派警察秘密截获了 Alice 的所有 E-mail 后，叫他们帮忙数数这些 E-mail 里有多少个笑脸，即 Alice 应该被砍头多少次。\n</div>\n<div>\n    一张脸包含一些元素（ Face Element, FE ）：两只眼睛，一个鼻子，一张嘴巴和一些诸如眉毛等的其他东西。一个 FE 是一片八连的 “1” 。每张脸至少包含一个封闭的脸边界，两只眼睛和一张嘴，其他 FE 都是可以省略的。\n</div>\n<div>\n    脸边界把其他 FE 包围在里面，而两只眼睛各包围一个由 0 组成的四连区域（这个区域可以包含其他 FE ）。嘴可以包围一个由 0 组成的四连区域，也可以不包围，但是其他 FE 都不能包围这样的区域。嘴总在眼睛的下面（即：嘴最下方的 1 在眼睛最下方的 1 的下面），而在所有 FE 中，嘴是除了边界之外左 - 右跨度最大的一个。\n</div>\n<p>\n    如果一张嘴最上方的 1 同时也是嘴的最左边或者最右边的 1 ，我们就说这是张笑脸。给出 Alice 那封包含很多脸的 E- mail ，请数一数里面包含了多少笑脸。如图所示，左边是笑脸，右边是非笑脸。\n</p>\n\n\n<table>\n<tbody><tr>\n<td align=\"center\"><img src=\"https://ipsc.ksp.sk/2001/real/problems/e2.gif\" alt=\"A smiling face\" title=\"A smiling face\"/></td>\n<td align=\"center\" width=\"10%\"> </td>\n<td align=\"center\"><img src=\"https://ipsc.ksp.sk/2001/real/problems/e1.gif\" alt=\"A non-smiling face\" title=\"A non-smiling face\"/></td>\n</tr>\n<tr>\n<td align=\"center\"> A smiling face</td>\n<td align=\"center\"> </td>\n<td align=\"center\"> A non-smiling face</td>\n</tr>\n</tbody></table>\n\n<div>\n【输入格式】\n</div>\n<div>\n<span>  输入文件第一行有一个整数n,下面</span>有n行,每行有n个字符&#34;0&#34;或&#34;1&#34;,表示Alice 那封包含很多脸的 E- mail.\n</div>\n<div>\n【输出格式】\n</div>\n<div>\n输出文件也只有一行,有一个整数m,表示笑脸的个数.\n</div>\n<div>\n【输入输出样例】\n</div>\n<div>\n输入文件名： xl.in\n</div>\n<div>\n25<br/>\n0000000001111111000000000<br/>\n0000000110000000110000000<br/>\n0000011000000110001100000<br/>\n0000100011100000000010000<br/>\n0001001000010011100001000<br/>\n0010000011000100010000100<br/>\n0010000100101000010000100<br/>\n0100001000101011010000010<br/>\n0100000011101011010000010<br/>\n1000001011101000010000001<br/>\n1000000100101000100000001<br/>\n1000000011000111000000001<br/>\n1000110000010000001100001<br/>\n1001000000101100000010001<br/>\n1001010001000010001001001<br/>\n1000001001000100010000001<br/>\n0100001100111000110000010<br/>\n0100000110000001100000010<br/>\n0010000101111110100000100<br/>\n0010000010000001000000100<br/>\n0001000001011010000001000<br/>\n0000100000111100000010000<br/>\n0000011000000000001100000<br/>\n0000000110000000110000000<br/>\n0000000001111111000000000\n</div>\n<div>\n输出文件名： xl.out\n</div>\n<div>\n1<br/>\n \n</div>\n\n"}]}