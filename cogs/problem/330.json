{"title":"[NOI2003] 文本编辑器","time_limit":2000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pQmzQQjja","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n【问题描述】\n</p>\n<p>\n很久很久以前，DOS3.x的程序员们开始对EDLIN感到厌倦。于是，人们开始纷纷改用自己写的文本编辑器……\n</p>\n<p>\n多年之后，出于偶然的机会，小明找到了当时的一个编辑软件。进行了一些简单的测试后，小明惊奇地发现：那个软件每秒能够进行上万次编辑操作（当然，你不能手工进行这样的测试）！于是，小明废寝忘食地想做一个同样的东西出来。你能帮助他吗？   为了明确任务目标，小明对“文本编辑器”做了一个抽象的定义：\n</p>\n<p>\n文本：由0个或多个字符构成的序列。这些字符的ASCII码在闭区间[32, 126]内，也就是说，这些字符均为可见字符或空格。\n</p>\n<p>\n光标：在一段文本中用于指示位置的标记，可以位于文本的第一个字符之前，文本的最后一个字符之后或文本的某两个相邻字符之间。\n</p>\n<p>\n文本编辑器：为一个可以对一段文本和该文本中的一个光标进行如下六条操作的程序。如果这段文本为空，我们就说这个文本编辑器是空的。\n</p>\n<table border=\"1\">\n<tbody>\n<tr>\n<td>\n<p>\n操作名称\n</p>\n</td>\n<td>\n<p>\n输入文件中的格式\n</p>\n</td>\n<td>\n<p>\n功能\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nMOVE(k)\n</p>\n</td>\n<td>\n<p>\nMove \t\t\tk\n</p>\n</td>\n<td>\n<p>\n将光标移动到第k个字符之后，如果k=0，将光标移到文本第一个字符之前\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nINSERT(n, \t\t\ts)\n</p>\n</td>\n<td>\n<p>\nInsert \t\t\tn↵\n</p>\n<p>\nS\n</p>\n</td>\n<td>\n<p>\n在光标后插入长度为n的字符串s，光标位置不变，n ≥ 1\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nDELETE(n)\n</p>\n</td>\n<td>\n<p>\nDelete \t\t\tn\n</p>\n</td>\n<td>\n<p>\n删除光标后的n个字符，光标位置不变，n ≥ 1\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nGET(n)\n</p>\n</td>\n<td>\n<p>\nGet \t\t\tn\n</p>\n</td>\n<td>\n<p>\n输出光标后的n个字符，光标位置不变，n ≥ 1\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nPREV()\n</p>\n</td>\n<td>\n<p>\nPrev\n</p>\n</td>\n<td>\n<p>\n光标前移一个字符\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nNEXT()\n</p>\n</td>\n<td>\n<p>\nNext\n</p>\n</td>\n<td>\n<p>\n光标后移一个字符\n</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n比如从一个空的文本编辑器开始，依次执行操作INSERT(13, “Balanced□tree”)，MOVE(2)，DELETE(5)，NEXT()，INSERT(7, “□editor”)，MOVE(0)，GET(15)后，会输出“Bad□editor□tree”，如下表所示：\n</p>\n<table border=\"1\">\n<tbody>\n<tr>\n<td>\n<p>\n操作\n</p>\n</td>\n<td>\n<p>\n操作前的文本\n</p>\n</td>\n<td>\n<p>\n操作后的结果\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nINSERT(13, \t\t\t&#34;Balanced□tree&#34;)\n</p>\n</td>\n<td>\n<p>\n|\n</p>\n<p>\n（只有光标，文本为空）\n</p>\n</td>\n<td>\n<p>\n|Balanced□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nMOVE(2)\n</p>\n</td>\n<td>\n<p>\n|Balanced□tree\n</p>\n</td>\n<td>\n<p>\nBa|lanced□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nDELETE(5)\n</p>\n</td>\n<td>\n<p>\nBa|lanced□tree\n</p>\n</td>\n<td>\n<p>\nBa|d□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nNEXT()\n</p>\n</td>\n<td>\n<p>\nBa|d□tree\n</p>\n</td>\n<td>\n<p>\nBad|□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nINSERT(7, \t\t\t&#34;□editor&#34;)\n</p>\n</td>\n<td>\n<p>\nBad|□tree\n</p>\n</td>\n<td>\n<p>\nBad|□editor□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nMOVE(0)\n</p>\n</td>\n<td>\n<p>\nBad|□editor□tree\n</p>\n</td>\n<td>\n<p>\n|Bad□editor□tree\n</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>\nGET(15)\n</p>\n</td>\n<td>\n<p>\n|Bad□editor□tree\n</p>\n</td>\n<td>\n<p>\n输出“Bad□editor□tree”\n</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n上表中，“|”表示光标，“□”表示空格。   你的任务是：\n</p>\n<ul>\n<li>\n建立一个空的文本编辑器。\n</li>\n<li>\n从输入文件中读入一些操作指令并执行。\n</li>\n<li>\n对所有执行过的GET操作，将指定的内容写入输出文件。\n</li>\n</ul>\n<p>\n【输入文件】\n</p>\n<p>\n输入文件的第一行是指令条数t，以下是需要执行的t个操作。其中：\n</p>\n<p>\n为了使输入文件便于阅读，Insert操作的字符串中可能会插入一些回车符，请忽略掉它们（如果难以理解这句话，可以参考样例）。\n</p>\n<p>\n除了回车符之外，输入文件的所有字符的ASCII码都在闭区间[32, 126]内。且行尾没有空格。   这里我们有如下假定：\n</p>\n<ul>\n<li>\nMOVE操作不超过50000个，INSERT和DELETE操作的总个数不超过4000，PREV和NEXT操作的总个数不超过200000。\n</li>\n<li>\n所有INSERT插入的字符数之和不超过2M（1M=1024*1024），正确的输出文件长度不超过3M字节。\n</li>\n<li>\nDELETE操作和GET操作执行时光标后必然有足够的字符。MOVE、PREV、NEXT操作不会把光标移动到非法位置。\n</li>\n<li>\n输入文件没有错误。\n</li>\n</ul>\n<p>\n对C++选手的提示：经测试，对最大的测试数据使用fstream进行输入有可能会比使用stdio慢约1秒，因此建议在可以的情况下使用后者。\n</p>\n<p>\n【输出文件】\n</p>\n<p>\n输出文件的每行依次对应输入文件中每条GET指令的输出。\n</p>\n<p>\n<br/>\n</p>\n<p>\n【样例输入】\n</p>\n<pre>15\nInsert 26\nabcdefghijklmnop\nqrstuv wxy\nMove 15\nDelete 11\nMove 5\nInsert 1\n^\nNext\nInsert 1\n_\nNext\nNext\nInsert 4\n.\\/.\nGet 4\nPrev\nInsert 1\n^\nMove 0\nGet 22\n</pre>\n<p>\n【样例输出】\n</p>\n<pre>.\\/. </pre>\n<pre>abcde^_^f.\\/.ghijklmno</pre>\n<p>\n<br/>\n</p>\n\n"}]}