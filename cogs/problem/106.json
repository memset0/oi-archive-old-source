{"title":"[NOIP 2003] 加分二叉树","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pySyyykae","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【问题描述】\n</h3>\n<p>\n设 一个 $n$ 个节点的二叉树 tree 的中序遍历为 $(1,2,3,\\dots ,n)$，其中数字 $1,2,3,\\dots ,n$ 为节点编号。每个节点都有一个分数（均为正整数），记第 $i$ 个节点的分数为 $d_i$，tree 及它的每个子树都有一个加分，任一棵子树 subtree （也包含 tree 本身）的加分计算方法如下：\n</p>\n<p>\nsubtree 的左子树的加分 $\\times$ subtree 的右子树的加分 $+$ subtree 的根的分数。若某个子树为空，规定其加分为 $1$ ，叶子的加分就是叶节点本身的分数。不考虑它的空子树。\n</p>\n<p>\n试求一棵符合中序遍历为 $(1,2,3,\\dots ,n)$ 且加分最高的二叉树 tree。要求输出；\n</p>\n<p>\n1. tree 的最高加分\n</p>\n<p>\n2. tree 的前序遍历\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n第 $1$ 行：一个整数 $n(n\\lt 30)$，为节点个数。\n</p>\n<p>\n第 $2$ 行：$n$ 个用空格隔开的整数，为每个节点的分数（分数 $\\lt 100$）。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n第 $1$ 行：一个整数，为最高加分（结果不会超过 $4,000,000,000$）。\n</p>\n<p>\n第 $2$ 行：$n$ 个用空格隔开的整数，为该树的前序遍历。\n</p>\n<h3>\n【样例输入】\n</h3>\n<pre>5\n5 7 1 2 10\n</pre>\n<h3>\n【样例输出】\n</h3>\n<pre>145\n3 1 2 4 5\n</pre>\n\n"}]}