{"title":"后缀数组","time_limit":2000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vQzyNjkgV","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n后缀数组 (SA) 是一种重要的数据结构，通常使用<strong>倍增</strong>或者<strong>DC3</strong>算法实现，这超出了我们的讨论范围。在本题中，我们希望使用<strong>快排、Hash与二分</strong>实现一个简单的 $O(n log^2⁡n ) $的后缀数组求法。\n</p>\n<p>\n详细地说，给定一个长度为 n 的字符串S（下标 0~n-1），我们可以用整数 k(0≤k&lt;n) 表示字符串S的后缀 S(k~n-1)。把字符串S的所有后缀按照字典序排列，排名为 i 的后缀记为 SA[i]。\n</p>\n<p>\n额外地，我们考虑排名为 i 的后缀与排名为 i-1 的后缀，把二者的最长公共前缀的长度记为 Height[i]。我们的任务就是求出SA与Height这两个数组。\n</p>\n<h3>\n【输入格式】\n</h3>\n<p>\n一个字符串，长度不超过30万。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n第一行为数组SA，相邻两个整数用1个空格隔开。\n</p>\n<p>\n第二行为数组Height，相邻两个整数用1个空格隔开，特别地，假设Height[1]=0。\n</p>\n<h3>\n【样例输入】\n</h3>\n<pre>ponoiiipoi</pre>\n<h3>\n【样例输出】\n</h3>\n<pre>9 4 5 6 2 8 3 1 7 0\n0 1 2 1 0 0 2 1 0 2\n</pre>\n<h3>\n【提示】\n</h3>\n<p>\n排名第一（最小）的后缀是9（S[9~9]，即字符串 i），第二的是后缀4（S[4~9]，即字符串iiipoi），第三的是后缀5（S[5~9]，即字符串iipoi）以此类推。Height[2]表示排名第2与第1的后缀的最长公共前缀，长度为1，Height[3]表示排名第3与第2的后缀的最长公共前缀，长度为2，以此类推。\n</p>\n<h3>\n【来源】\n</h3>\n<p>\n《算法竞赛进阶指南》\n</p>\n\n"}]}