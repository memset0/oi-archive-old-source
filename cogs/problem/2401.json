{"title":"Time is Money","time_limit":2000,"memory_limit":64,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=viJQNVqak","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p>\ntimeismoney 100 points\n</p>\n<p>\nSource code: timeismoney.c, timeismoney.cpp, timeismoney.pas\n</p>\n<p>\nInput file: timeismoney.in\n</p>\n<p>\nOutput file: timeismoney.out\n</p>\n<p>\nTime limit: 2 seconds\n</p>\n<p>\nMemory limit: 64 MB\n</p>\n<p>\nThe NetLine company wants to offer broadband internet to N towns. For this, it suffices to construct\n</p>\n<p>\na network of N-1 broadband links between the towns, with the property that a message can travel\n</p>\n<p>\nfrom any town to any other town on this network. NetLine has already identified all pairs of towns\n</p>\n<p>\nbetween which a direct link can be constructed. For each such possible link, they know the cost and\n</p>\n<p>\nthe time it would take to construct the link.\n</p>\n<p>\nThe company is interested in minimizing both the total amount of time (links are built one at a time)\n</p>\n<p>\nand the total amount of money spent to build the entire network. Since they couldn’t decide among\n</p>\n<p>\nthe two criteria, they decided to use the following formula to evaluate the value of a network:\n</p>\n<p>\nSumTime = sum of times spent to construct the chosen links\n</p>\n<p>\nSumMoney = sum of the money spent to construct the chosen links\n</p>\n<p>\nV = SumTime * SumMoney\n</p>\n<p>\nTask\n</p>\n<p>\nFind a list of N-1 links to build, which minimizes the value V.\n</p>\n<p>\nDescription of input\n</p>\n<p>\nThe first line of input contains integers N – the number of towns and M – the number of pairs of\n</p>\n<p>\ntowns which can be connected. The towns are numbered starting from 0 to N-1. Each of the next M\n</p>\n<p>\nlines contain four integers x, y, t and c – meaning town x can be connected to town y in time t and\n</p>\n<p>\nwith cost c.\n</p>\n<p>\nDescription of output\n</p>\n<p>\nIn the first line of output print two numbers: the total time (SumTime) and total money (Sum-\n</p>\n<p>\nMoney) used in the optimal solution (the one with minimal value V), separated by one space. The\n</p>\n<p>\nnext N-1 lines describe the links to be constructed. Each line contains a pair of numbers (x,y) describing\n</p>\n<p>\na link to be build (which must be among the possible links described in the input file). The\n</p>\n<p>\npairs can be printed out in any order. When multiple solutions exist, you may print any of them.\n</p>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<p>\n· 1 ≤ N ≤ 200\n</p>\n<p>\n· 1 ≤ M ≤ 10 000\n</p>\n<p>\n· 0 ≤ x,y ≤ N-1\n</p>\n<p>\n· 1 ≤ t,c ≤ 255\n</p>\n<p>\n· One test has M = N - 1\n</p>\n<p>\n· 40% of the tests will have for each possible link t = c\n</p>\n<p>\nExample\n</p>\n<p>\ntimeismoney.in timeismoney.out\n</p>\n<p>\n5 7\n</p>\n<p>\n0 1 161 79\n</p>\n<p>\n0 2 161 15\n</p>\n<p>\n0 3 13 153\n</p>\n<p>\n1 4 142 183\n</p>\n<p>\n2 4 236 80\n</p>\n<p>\n3 4 40 241\n</p>\n<p>\n2 1 65 92\n</p>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<p>\n279 501\n</p>\n<p>\n2 1\n</p>\n<p>\n0 3\n</p>\n<p>\n0 2\n</p>\n<p>\n3 4\n</p>\n<p>\n    注意测试数据中不要求输出方案。\n</p>\n<p>\n<br/>\n</p>\n\n"}]}