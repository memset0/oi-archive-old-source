{"title":"[USACO Dec08] 跳棋获胜","time_limit":1000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vSSzmkgPW","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n奶牛们开始狂热地喜欢上了跳棋。不幸的是，尽管他们无限享受下棋过程，但他们讨厌思考如何终结棋局，希望得到你的帮助。\n</p>\n<p>\n给一个NxN (4 &lt;= N &lt;= 500)的棋盘，决定最佳的移动方案（例如：最小的移动步数）来结束游戏。传统的方式，跳棋只能在&#39;+&#39;位置移动，通过跳过对手棋子将对手棋子捕获。当跳的时候，位置也相应移动，如下是一个N=8的情况：\n</p>\n<p>\n- + - + - + - +\n</p>\n<p>\n+ - + - + - + -\n</p>\n<p>\n- + - K - + - +\n</p>\n<p>\n+ - + - + - + -\n</p>\n<p>\n- o - o - + - +\n</p>\n<p>\n+ - K - + - + -\n</p>\n<p>\n- o - + - + - +\n</p>\n<p>\n+ - K - + - K -\n</p>\n<p>\nK是贝茜的国王，o是对手的棋子。贝茜的国王可以成功的通过一些斜线的移动来捕获对手的棋子（跳跃的同时移动位置）\n</p>\n<p>\n对于这个对局，最好的结果是左下边的K通过三次跳跃结束游戏（移动的 K 标记为 &gt;K&lt;）\n</p>\n<p>\n   Original          After move 1       After move 2        After move 3\n</p>\n<p>\n- + - + - + - +     - + - + - + - +    - + - + - + - +     - + - + - + - +\n</p>\n<p>\n+ - + - + - + -     + - + - + - + -    + - + - + - + -     + - + - + - + -\n</p>\n<p>\n- + - K - + - +     - + - K - + - +    - + - K - + - +     - + - K - + - +\n</p>\n<p>\n+ - + - + - + -     + - + - + - + -    + -&gt;K&lt;- + - + -     + - + - + - + -\n</p>\n<p>\n- o - o - + - +     - o - o - + - +    - + - o - + - +     - + - + - + - +\n</p>\n<p>\n+ - K - + - + -    &gt;K&lt;- K - + - + -    + - K - + - + -     + - K -&gt;K&lt;- + -\n</p>\n<p>\n- o - + - + - +     - + - + - + - +    - + - + - + - +     - + - + - + - +\n</p>\n<p>\n+ -&gt;K&lt;- + - K -     + - + - + - K -    + - K - + - K -     + - K - + - K -\n</p>\n<p>\n移动穿越这些方格:\n</p>\n<p>\n 1 2 3 4 5 6 7 8           R C\n</p>\n<p>\n1 - + - + - + - +    start: 8 3\n</p>\n<p>\n2 + - + - + - + -    move:  6 1\n</p>\n<p>\n3 - + - K - + - +    move:  4 3\n</p>\n<p>\n4 + - * - + - + -    move:  6 5\n</p>\n<p>\n5 - o - o - + - +\n</p>\n<p>\n6 * - K - * - + -\n</p>\n<p>\n7 - o - + - + - +\n</p>\n<p>\n8 + - K - + - K -\n</p>\n<p>\n对于一个NxN的输入写一个程序决定如何结束游戏，当然如果方案存在原话。至少有一个国王和一个对手的棋子。最佳结论是国王通过每次跳跃进行移动。\n</p>\n<p>\n输入格式:\n</p>\n<p>\n* 第1行: 一个单独的整数: N\n</p>\n<p>\n* 第2..N+1行: 行i+1 包含N个字符 (each one of: &#39;-&#39;, &#39;+&#39;, &#39;K&#39;, or &#39;o&#39;) 表示一个完整棋盘的第i行. 行2总是由&#39;-&#39;开始.\n</p>\n<p>\nwinchk.in\n</p>\n<p>\n8\n</p>\n<p>\n-+-+-+-+\n</p>\n<p>\n+-+-+-+-\n</p>\n<p>\n-+-K-+-+\n</p>\n<p>\n+-+-+-+-\n</p>\n<p>\n-o-o-+-+\n</p>\n<p>\n+-K-+-+-\n</p>\n<p>\n-o-+-+-+\n</p>\n<p>\n+-K-+-K-\n</p>\n<p>\n输出格式:\n</p>\n<p>\n* 第1..?行: 如果没能获胜方案，输出&#34;impossible&#34;.如果方案存在，每行包括两个用空格隔开的整数表示国王的移动路线，这个方案必须是可行的获胜方案。\n</p>\n<p>\nwinchk.out\n</p>\n<p>\n8 3\n</p>\n<p>\n6 1\n</p>\n<p>\n4 3\n</p>\n<p>\n6 5\n</p>\n<p>\n<br/>\n</p>\n\n"}]}