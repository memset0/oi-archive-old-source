{"title":"[Ural 1568] 火车车厢排序","time_limit":1000,"memory_limit":256,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vJSyQkgjP","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<p>\n在叶卡捷琳堡，有一些塔在同时被建造。建筑需要许多高质量的五金件和材料，它们中的大部分通过铁路运来。铁路运输并不总像承包商希望的那样快。火车在中间站停了太久，它们在那里被排好序并且定向到通向不同地区的铁轨。\n</p>\n<p>\n正如你所知，货运列车车厢以如下方式被排序：火车被开到一个双向岔道，在那里每一节车厢都可以走左边或右边的岔道。之后，这些车厢重新连接起来。例如，如果车厢的顺序是“1 2 3 4 5 6 7”，它们可以被分成两部分：“1 3 5”（左岔道）和“2 4 6 7”（右岔道），然后重新连接：“1 3 5 2 4 6 7”。\n</p>\n<p>\n请你帮助铁路工人加速车厢的排序过程。写一个程序来将重新排列给定顺序的车厢，要求将两个岔道中的车厢重新连接的次数最小。\n</p>\n<p>\n<img src=\"/upload/image/20140302/20140302210400_79359.png\" alt=\"\"/> \n</p>\n<h3>\n<span style=\"background-color:#F0F8FF;font-family:sans-serif;font-size:20px;font-weight:bold;line-height:25px;\">【输入格式】</span> \n</h3>\n<p>\n输入文件的第一行有一个正整数N——车厢的数量（1&lt;=N&lt;=10000）。第二行有N个整数，即最初的车厢排列顺序。每个车厢都有一个1~N之间独特的编号。这些车厢必须被重新排列使得编号递增，从1开始。\n</p>\n<h3>\n【输出格式】\n</h3>\n<p>\n输出文件的第一行有一个正整数K，即重新连接操作的最小次数。接下来的K+1行每行有N个正整数。在第一行输出车厢最初的顺序，接下来的每一行都输出一次重新连接后车厢的顺序。\n</p>\n<h3>\n【样例输入】\n</h3>\n<p>\nsample 1:\n</p>\n<p>\n<br/>\n</p>\n<p>\n5\n</p>\n<p>\n5 1 3 2 4\n</p>\n<p>\n<br/>\n</p>\n<p>\n<br/>\n</p>\n<p>\nsample 2:\n</p>\n<p>\n<br/>\n</p>\n<p>\n6\n</p>\n<p>\n6 5 2 4 1 3\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【样例输出】\n</h3>\n<p>\nsample 1:\n</p>\n<p>\n<br/>\n</p>\n<p>\n2\n</p>\n<p>\n5 1 3 2 4\n</p>\n<p>\n1 2 5 3 4\n</p>\n<p>\n1 2 3 4 5\n</p>\n<p>\n<br/>\n</p>\n<p>\nsample 2:\n</p>\n<p>\n<br/>\n</p>\n<p>\n3\n</p>\n<p>\n6 5 2 4 1 3\n</p>\n<p>\n6 4 1 5 2 3\n</p>\n<p>\n6 1 2 3 4 5\n</p>\n<p>\n1 2 3 4 5 6\n</p>\n<p>\n<br/>\n</p>\n<h3>\n【提示】\n</h3>\n<p>\n对于40%的数据，1&lt;=N&lt;=10\n</p>\n<p>\n对于60%的数据，1&lt;=N&lt;=1000\n</p>\n<p>\n对于100%的数据，1&lt;=N&lt;=10000\n</p>\n<h3>\n【来源】\n</h3>\n<p>\nProblem Author: Sergey Pupyrev\n</p>\n<p>\nProblem Source: The XIIth USU Programing Championship, October 6, 2007\n</p>\n<p>\n<a href=\"http://acm.timus.ru/problem.aspx?space=1&amp;num=1568\" target=\"_blank\">URAL 1568</a> \n</p>\n\n"}]}