{"title":"[NOIP2000] 进制转换","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=liXmmSxUe","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n描述 Description\n</p>\n<!--[if gte mso 10]>\n<![endif]-->\n<p>\n我们可以用这样的方式来表示一个十进制数：将每个阿拉伯数字乘以一个以该数字所处位置的（值减1）为指数，以10为底数的幂之和的形式。例如，123可表示为1*10^2+2*10^1+3*10^0这样的形式。 <br/>\n与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值-1）为指数，以2为底数的幂之和的形式。一般说来，任何一个正整 数R或一个负整数-R都可以被选来作为一个数制系统的基数。如果是以R或-R为基数，则需要用到的数码为0，1,....R-1。例如，当R=7时，所需 用到的数码是0，1，2, 3，4，5和6，这与其是R或-R无关。如果作为基数的数绝对值超过10，则为了表示这些数码，通常使用英文字母来表示那些大于9的数码。例如对16进制 数来说，用A表示10，用B表示11，用C表示12，用D表示13，用E表示14，用F表示15。在负进制数中是用-R作为基数，例如-15（＋进制）相 当于110001（-2进制）， <br/>\n并且它可以被表示为2的幂级数的和数： <br/>\n110001=1*(-2)^5+1*(-2)^4+0*(-2)^3+0*(-2)^2+0*(-2)^1+1*(-2)^0 <br/>\n问题求解: <br/>\n设计一个程序，读入一个十进制数和一个负进制数的基数，并将此十进制数转换为此负进制下的数：-R∈{-2，-3，-4,....-20}\n</p>\n<p>\n输入格式 Input Format\n</p>\n<p>\n输入文件有若干行，每行有两个输入数据。 <br/>\n第一个是十进制数N（-32768&lt;=N&lt;=32767）; 第二个是负进制数的基数-R。\n</p>\n<p>\n输出格式 Output Format\n</p>\n<p>\n输出此负进制数及其基数，若此基数超过10，则参照16进制的方式处理。【具体请参考样例】\n</p>\n<p>\n样例输入 Sample Input\n</p>\n<p>\n30000 -2<br/>\n-20000 -7<br/>\n28800 -16<br/>\n-25000 -16\n</p>\n<p>\n样例输出 Sample Output\n</p>\n<p>\n30000=11011010101110000(base -2)<br/>\n-20000=263526(base -7)<br/>\n28800=19180(base -16)<br/>\n-25000=7FB8(base -16)\n</p>\n<p>\nUPD: 最后一组数据已由 Rapiz 修复。20161014\n</p>\n\n"}]}