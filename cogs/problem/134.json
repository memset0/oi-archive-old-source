{"title":"[USACO Feb08] 晚餐队列安排","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pzQNXQkjq","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n为了避免餐厅过分拥挤，FJ要求奶牛们分2批就餐。每天晚饭前，奶牛们都会在餐厅前排队入内，按FJ的设想，所有第2批就餐的奶牛排在队尾，队伍的前半部分则由设定为第1批就餐的奶牛占据。由于奶牛们不理解FJ的安排，晚饭前的排队成了一个大麻烦。\n</p>\n<p>\n第i头奶牛有一张标明她用餐批次D_i(1 &lt;= D_i &lt;= 2)的卡片。虽然所有N(1 &lt;= N &lt;= 30,000)头奶牛排成了很整齐的队伍，但谁都看得出来，卡片上的号码是完全杂乱无章的。\n</p>\n<p>\n在若干次混乱的重新排队后，FJ找到了一种简单些的方法：奶牛们不动，他沿着队伍从头到尾走一遍，把那些他认为排错队的奶牛卡片上的编号改 掉，最终得到一个他想要的每个组中的奶牛都站在一起的队列，例如112222或111122。有的时候，FJ会把整个队列弄得只有1组奶牛（比方 说，1111或222）。\n</p>\n<p>\n你也晓得，FJ是个很懒的人。他想知道，如果他想达到目的，那么他最少得改多少头奶牛卡片上的编号。所有奶牛在FJ改卡片编号的时候，都不会挪位置。\n</p>\n<p>\n程序名: diningb\n</p>\n<p>\n输入格式:\n</p>\n<ul>\n<li>\n第1行: 1个整数：N\n</li>\n</ul>\n<ul>\n<li>\n第2..N+1行: 第i+1行是1个整数，为第i头奶牛的用餐批次D_i\n</li>\n</ul>\n<p>\n输入样例 (diningb.in):\n</p>\n<pre>7\n2\n1\n1\n1\n2\n2\n1\n</pre>\n<p>\n输入说明:\n</p>\n<p>\n一共有7头奶牛，其中有3头奶牛原来被设定为第二批用餐。\n</p>\n<p>\n输出格式:\n</p>\n<ul>\n<li>\n第1行: 输出1个整数，为FJ最少要改几头奶牛卡片上的编号，才能让编号变成他设想中的样子\n</li>\n</ul>\n<p>\n输出样例 (diningb.out):\n</p>\n<pre>2\n</pre>\n<p>\n输出说明:\n</p>\n<p>\nFJ选择改第1头和最后1头奶牛卡片上的编号。\n</p>\n\n"}]}