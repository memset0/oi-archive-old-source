{"title":"[SDOI2008]Cave 洞穴勘测","time_limit":4000,"memory_limit":259,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=vJNQxkUUP","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<h3>\n【题目描述】\n</h3>\n<div class=\"content\">\n<p>\n辉辉热衷于洞穴勘测。某天，他按照地图来到了一片被标记为JSZX的洞穴群地区。经过初步勘测，辉辉发现这片区域由n个洞穴（分别编号为1到n）以及若干通道组成，并且每条通道连接了恰好两个洞穴。假如两个洞穴可以通过一条或者多条通道按一定顺序连接起来，那么这两个洞穴就是连通的，按顺序连接在一起的这些通道则被称之为这两个洞穴之间的一条路径。洞穴都十分坚固无法破坏，然而通道不太稳定，时常因为外界影响而发生改变，比如，根据有关仪器的监测结果，123号洞穴和127号洞穴之间有时会出现一条通道，有时这条通道又会因为某种稀奇古怪的原因被毁。辉辉有一台监测仪器可以实时将通道的每一次改变状况在辉辉手边的终端机上显示：如果监测到洞穴u和洞穴v之间出现了一条通道，终端机上会显示一条指令 Connect u v 如果监测到洞穴u和洞穴v之间的通道被毁，终端机上会显示一条指令 Destroy u v 经过长期的艰苦卓绝的手工推算，辉辉发现一个奇怪的现象：无论通道怎么改变，任意时刻任意两个洞穴之间至多只有一条路径。因而，辉辉坚信这是由于某种本质规律的支配导致的。因而，辉辉更加夜以继日地坚守在终端机之前，试图通过通道的改变情况来研究这条本质规律。然而，终于有一天，辉辉在堆积成山的演算纸中崩溃了……他把终端机往地面一砸（终端机也足够坚固无法破坏），转而求助于你，说道：“你老兄把这程序写写吧”。辉辉希望能随时通过终端机发出指令 Query u v，向监测仪询问此时洞穴u和洞穴v是否连通。现在你要为他编写程序回答每一次询问。已知在第一条指令显示之前，JSZX洞穴群中没有任何通道存在。\n</p>\n</div>\n<h3>\n【输入格式】\n</h3>\n<div class=\"content\">\n<p>\n第一行为两个正整数n和m，分别表示洞穴的个数和终端机上出现过的指令的个数。以下m行，依次表示终端机上出现的各条指令。每行开头是一个表示指令种类的字符串s（&#34;Connect”、”Destroy”或者”Query”，区分大小写），之后有两个整数u和v (1≤u, v≤n且u≠v) 分别表示两个洞穴的编号。\n</p>\n</div>\n<h3>\n【输出格式】\n</h3>\n<div class=\"content\">\n<p>\n对每个Query指令，输出洞穴u和洞穴v是否互相连通：是输出”Yes”，否则输出”No”。（不含双引号）\n</p>\n</div>\n<h3>\n【样例输入】\n</h3>\n<pre>样例输入1 cave.in\n  200\t5\n  Query\t123\t127\n  Connect\t123\t127\n  Query\t123\t127\n  Destroy\t127\t123\n  Query\t123\t127\n  样例输入2 cave.in\n  \n  3 \t5\n  Connect\t1\t2\n  Connect\t3\t1\n  Query\t2\t3\n  Destroy\t1\t3\n  Query\t2\t3\n  \n  \n  \n  </pre>\n<h3>\n【样例输出】\n</h3>\n<pre>样例输出1 cave.out\n  No\n  Yes\n  No\n  \n  \n  样例输出2 cave.out\n  \n  Yes\n  No\n  \n  </pre>\n<h3>\n【提示】\n</h3>\n<p>\n数据说明 \n</p>\n<p>\n10%的数据满足n≤1000, m≤20000\n</p>\n<p>\n20%的数据满足n≤2000, m≤40000\n</p>\n<p>\n30%的数据满足n≤3000, m≤60000 \n</p>\n<p>\n40%的数据满足n≤4000, m≤80000 \n</p>\n<p>\n50%的数据满足n≤5000, m≤100000 \n</p>\n<p>\n60%的数据满足n≤6000, m≤120000 \n</p>\n<p>\n70%的数据满足n≤7000, m≤140000 \n</p>\n<p>\n80%的数据满足n≤8000, m≤160000 \n</p>\n<p>\n90%的数据满足n≤9000, m≤180000 \n</p>\n<p>\n100%的数据满足n≤10000, m≤200000 \n</p>\n<p>\n保证所有Destroy指令将摧毁的是一条存在的通道本题输入、输出规模比较大，建议c\\c++选手使用scanf和printf进行I\\O操作以免超时\n</p>\n<h3>\n【题目来源】\n</h3>\n<a href=\"http://www.lydsy.com/JudgeOnline/problem.php?id=2049\">耒阳大世界（衡阳八中） OJ 2049</a>\n\n"}]}