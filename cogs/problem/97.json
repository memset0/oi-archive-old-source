{"title":"[NOIP2007] 树网的核","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=lSSzmiNPW","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\n<p>\n<b>【问题描述】</b><br/>\n    设T=(V,E,W)是一个无圈且连通的无向图(也称为无根树)，每条边带有正整数的权，我们称T为树网(treenetwork)，其中v，E分别表示结点与边的集合，W表示各边长度的集合，并设T有n个结点。<br/>\n路径：树网中任何两结点a，b都存在唯一的一条简单路径，用d(a，b)表示以a，b为端点的路径的长度，它是该路径上各边长度之和。我们称d(a，b)为a，b两结点问的距离。<br/>\n一点v到一条路径p的距离为该点与p上的最近的结点的距离：<br/>\n    d(v,P)=min{d(v，u)，u为路径P上的结点)。<br/>\n    树网的直径：树网中最长的路径称为树网的直径。对于给定的树网T，直径不一定是唯一的，但可以证明：各直径的中点(不一定恰好是某个结点，可能在某条边的内部)是唯一的，我们称该点为树网的中心。<br/>\n    偏心距ECC(F)：树网T中距路径F最远的结点到路径F的距离，即 ECC(F)=max{d(v，F)，V∈V}。<br/>\n    任务：对于给定的树网T=（V，E，W）和非负整数s，求一个路径F，它是某直径上的一段路径(该路径两端均为树网中的结点)，其长度不超过s(可以等于s)，使偏心距ECC(F)最小。我们称这个路径为树网T=(V,E,W)的核(Core)。必要时，F可以退化为某个结点。一般来说，在上述定义下，核不一定只有一个，但最小偏心距是唯一的。<br/>\n    下面的图给出了树网的一个实例。图中，A-B与A-C是两条直径，长度均为20。点W是树网的中心，EF边的长度为5。如果指定s=11，则树网的核为路径DEFG(也可以取为路径DEF)，偏心距为8。如果指定s=O(或s=1、s=2)，则树网的核为结点F，偏心距为12。\n</p>\n<p align=\"center\">\n<img alt=\"\" src=\"/upload/image/20120925/20120925163741_52719.jpg\"/> \n</p>\n<p>\n【输入格式】 <br/>\n   输入文件core.in包含n行：<br/>\n第1行，两个正整数n和S，中间用一个空格隔开。其中n为树网结点的个数，s为树网的核的长度的上界。设结点编号依次为1，2，…，n。<br/>\n从第2行到第n行，每行给出3个用空格隔开的正整数，依次表示每一条边的两个端点编号和长度。例如，“2 4 7”表示连接结点2与4的边的长度为7。\n</p>\n<p>\n所给的数据都是正确的，不必检验。\n</p>\n<p>\n【输出格式】 <br/>\n    输出文件 core.out只有一个非负整数，为指定意义下的最小偏心距。\n</p>\n<p>\n<br/>\n【输入输出样例1】 <b><br/>\n</b>输入:<br/>\n5 2<br/>\n1 2 5<br/>\n2 3 2<br/>\n2 4 4<br/>\n2 5 3\n</p>\n<p>\n输出:<br/>\n5\n</p>\n<p>\n【输入输出样例2】 <b><br/>\n</b>输入:<br/>\n8 6 <br/>\n1 3 2<br/>\n2 3 2<br/>\n3 4 6<br/>\n4 5 3<br/>\n4 6 4<br/>\n4 7 2<br/>\n7 8 3\n</p>\n<p>\n输出:<br/>\n5\n</p>\n<p>\n【限制】<br/>\n40％的数据满足：5&lt;=n&lt;=15<br/>\n70％的数据满足：5&lt;=n&lt;=80<br/>\n100％的数据满足：5&lt;=n&lt;=300，0&lt;=s&lt;=1000。边长度为不超过1000的正整数。\n</p>\n\n"}]}