{"title":"美国血统","time_limit":1000,"memory_limit":128,"url":"http://cogs.pro:8080/cogs/problem/problem.php?pid=pXNNyzUWU","statement":[{"title":"题目描述","format":"html","require":["katex"],"content":"\n\nUSACO/heritage(<b>译 By TinyTony)\n</b><div id=\"bodyContent\"><b>\n\t</b><div dir=\"ltr\" lang=\"zh-cn\" class=\"mw-content-ltr\"><b>\n\t\t</b><p><b>\n\t\t\tAmerican Heritage</b>美国血统\n\t\t</p>\n\t\t<hr/>\n\t</div>\n</div>\n<p>\n\t<span id=\".E6.8F.8F.E8.BF.B0\" class=\"mw-headline\">描述</span> \n</p>\n<p>\n\t农夫约翰非常认真地对待他的奶牛们的血统。然而他不是一个真正优秀的记帐员。他把他的奶牛们的家谱作成二叉树，并且把二叉树以更线性的“树的中序遍历”和“树的前序遍历”的符号加以记录而不是用图形的方法。\n</p>\n<p>\n\t你的任务是在被给予奶牛家谱的“树中序遍历”和“树前序遍历”的符号后，创建奶牛家谱的“树的后序遍历”的符号。每一头奶牛的姓名被译为一个唯一的字母。（你可能已经知道你可以在知道树的两种遍历以后可以经常地重建这棵树。）显然，这里的树不会有多于26个的顶点。这是在样例输入和样例输出中的树的图形表达方式：\n</p>\n<pre>                C\n               / \n              /   \n             B     G\n            /    /\n           A   D H\n              / \n             E   F\n</pre>\n<p>\n\t树的中序遍历是按照左子树，根，右子树的顺序访问节点。\n</p>\n<p>\n\t树的前序遍历是按照根，左子树，右子树的顺序访问节点。\n</p>\n<p>\n\t树的后序遍历是按照左子树，右子树，根的顺序访问节点。\n</p>\n<p>\n\t<span id=\".E6.A0.BC.E5.BC.8F\" class=\"mw-headline\">格式</span> \n</p>\n<p>\n\t<b>PROGRAM NAME</b>: heritage\n</p>\n<p>\n\t<b>INPUT FORMAT</b>:\n</p>\n<p>\n\t(file heritage.in)\n</p>\n<p>\n\t第一行： 树的中序遍历\n</p>\n<p>\n\t第二行： 同样的树的前序遍历\n</p>\n<p>\n\t<b>OUTPUT FORMAT</b>:\n</p>\n<p>\n\t(file heritage.out)\n</p>\n<p>\n\t单独的一行表示该树的后序遍历。\n</p>\n<p>\n\t<span id=\"SAMPLE_INPUT\" class=\"mw-headline\">SAMPLE INPUT </span>\n</p>\n<pre>ABEDFCHG\nCBADEFGH <span id=\"SAMPLE_OUTPUT\" class=\"mw-headline\"></span></pre>\n<pre><span class=\"mw-headline\">SAMPLE OUTPUT </span> \n<pre>AEFDBHGC\n</pre>\n<!-- \nNewPP limit report\nPreprocessor node count: 15/1000000\nPost-expand include size: 0/2097152 bytes\nTemplate argument size: 0/2097152 bytes\nExpensive parser function count: 0/100\n--><!-- Saved in parser cache with key newnocow:pcache:idhash:857-0!*!*!!zh-cn!*!* and timestamp 20120711023614 --></pre>\n\n"}]}