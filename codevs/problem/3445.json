{"title":"Exponentiation","time_limit":1000,"memory_limit":62,"url":"http://www.joyoi.cn/problem/codevs-3445","statement":[{"title":"","format":"html_final","require":["katex"],"content":"\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n题目描述\n<small>Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<ul><li><p>描述</p></li><li><p>Problems involving the computation of exact values of very\nlarge magnitude and precision are common. For example, the computation\nof the national debt is a taxing experience for many computer systems. <br><br>This problem requires that you write a program to compute the exact value of R<sup>n</sup>where R is a real number ( 0.0 &lt; R &lt; 99.999 ) and n is an integer such that 0 &lt; n &lt;= 25.</p></li></ul>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输入描述\n<small>Input Description</small>\n</span></div>\n<div class=\"panel-body\">\n<ul><li><p>输入</p></li><li><p>The input will consist of a set of pairs of values for R and n.\nThe R value will occupy columns 1 through 6, and the n value will be in\ncolumns 8 and 9.</p></li></ul><p><br></p>\n\n</div>\n</div>\n<div  class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输出描述\n<small>Output Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<ul class=\"problem-content list-paddingleft-2\"><li><p>输出</p></li><li><p>The output will consist of one line for each line of input giving\nthe exact value of R^n. Leading zeros should be suppressed in the\noutput. Insignificant trailing zeros must not be printed. Don&#39;t print\nthe decimal point if the result is an integer.</p></li></ul><p><br/></p>\n\n</div>\n</div>\n\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输入\n<small>Sample Input</small>\n</span></div>\n<div class=\"panel-body\">\n<ul><li><p>样例输入</p></li><li><pre>95.123 12\n0.4321 20\n5.1234 15\n6.7592  9\n98.999 10\n1.0100 12</pre></li></ul><p><br></p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输出\n<small>Sample Output</small>\n</span></div>\n<div class=\"panel-body\">\n<ul><li><p>样例输出</p></li><li><pre>548815620517731830194541.899025343415715973535967221869852721\n.00000005148554641076956121994511276767154838481760200726351203835429763013462401\n43992025569.928573701266488041146654993318703707511666295476720493953024\n29448126.764121021618164430206909037173276672\n90429072743629540498.107596019456651774561044010001\n1.126825030131969720661201</pre></li></ul><p><br></p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n数据范围及提示\n<small>Data Size & Hint</small>\n</span></div>\n<div class=\"panel-body\">\n<ul><li><p>提示</p></li><li><p>If you don't know how to determine wheather encounted the end of input:<br><em>s</em> is a string and <em>n</em> is an integer<br></p><pre>while(cin&gt;&gt;s&gt;&gt;n)\n{\n...\n}\n\nwhile(scanf(\"%s%d\",s,&amp;n)==2) //to  see if the scanf read in as many items as you want\n/*while(scanf(%s%d\",s,&amp;n)!=EOF) //this also work    */\n{\n...\n}</pre></li></ul><p><br></p>\n</div>\n</div>\n"}]}