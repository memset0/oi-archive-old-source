{"title":"黑匣子","time_limit":1000,"memory_limit":62,"url":"http://www.joyoi.cn/problem/codevs-2573","statement":[{"title":"","format":"html_final","require":["katex"],"content":"\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n题目描述\n<small>Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<p>我们使用黑匣子的一个简单模型。它能存放一个整数序列和一个特别的变量i。在初始时刻，黑匣子为空且i等于0。这个黑匣子能执行一系列的命令。有两类命令：</p>\n<p>ADD(x)：把元素x放入黑匣子；GET：把i加1的同时，输出黑匣子内所有整数中第i小的数。牢记第i小的数是当黑匣子中的元素已非降序排序后位于第i位的元素。</p>\n<p>下面的表6_4是一个11个命令的例子：</p>\n<p>表6_4</p>\n<table border=\"1\" cellpadding=\"0\" cellspacing=\"0\">\n<tbody>\n<tr>\n<td width=\"76\">\n<p>编号</p>\n</td>\n<td width=\"132\">\n<p>命令</p>\n</td>\n<td width=\"66\">\n<p>i</p>\n</td>\n<td width=\"155\">\n<p>黑匣子内容</p>\n</td>\n<td width=\"78\">\n<p>输出</p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>1</p>\n</td>\n<td width=\"132\">\n<p>ADD(3)</p>\n</td>\n<td width=\"66\">\n<p>0</p>\n</td>\n<td width=\"155\">\n<p>3</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>2</p>\n</td>\n<td width=\"132\">\n<p>GET</p>\n</td>\n<td width=\"66\">\n<p>1</p>\n</td>\n<td width=\"155\">\n<p>3</p>\n</td>\n<td width=\"78\">\n<p>3</p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>3</p>\n</td>\n<td width=\"132\">\n<p>ADD(1)</p>\n</td>\n<td width=\"66\">\n<p>1</p>\n</td>\n<td width=\"155\">\n<p>1,3</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>4</p>\n</td>\n<td width=\"132\">\n<p>GET</p>\n</td>\n<td width=\"66\">\n<p>2</p>\n</td>\n<td width=\"155\">\n<p>1,3</p>\n</td>\n<td width=\"78\">\n<p>3</p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>5</p>\n</td>\n<td width=\"132\">\n<p>ADD(-4)</p>\n</td>\n<td width=\"66\">\n<p>2</p>\n</td>\n<td width=\"155\">\n<p>-4,1,3</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>6</p>\n</td>\n<td width=\"132\">\n<p>ADD(2)</p>\n</td>\n<td width=\"66\">\n<p>2</p>\n</td>\n<td width=\"155\">\n<p>-4,1,2,3</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>7</p>\n</td>\n<td width=\"132\">\n<p>ADD(8)</p>\n</td>\n<td width=\"66\">\n<p>2</p>\n</td>\n<td width=\"155\">\n<p>-4,1,2,3,8</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>8</p>\n</td>\n<td width=\"132\">\n<p>ADD(-1000)</p>\n</td>\n<td width=\"66\">\n<p>2</p>\n</td>\n<td width=\"155\">\n<p>-1000,-4,1,2,3,8</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>9</p>\n</td>\n<td width=\"132\">\n<p>GET</p>\n</td>\n<td width=\"66\">\n<p>3</p>\n</td>\n<td width=\"155\">\n<p>-1000,-4,1,2,3,8</p>\n</td>\n<td width=\"78\">\n<p>1</p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>10</p>\n</td>\n<td width=\"132\">\n<p>GET</p>\n</td>\n<td width=\"66\">\n<p>4</p>\n</td>\n<td width=\"155\">\n<p>-1000,-4,1,2,3,8</p>\n</td>\n<td width=\"78\">\n<p>2</p>\n</td>\n</tr>\n<tr>\n<td width=\"76\">\n<p>11</p>\n</td>\n<td width=\"132\">\n<p>ADD(2)</p>\n</td>\n<td width=\"66\">\n<p>4</p>\n</td>\n<td width=\"155\">\n<p>-1000,-4,1,2,2,3,8</p>\n</td>\n<td width=\"78\">\n<p> </p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>现需要一个有效的算法处理给定的一系列命令。ADD和GET命令的总数至多个有30000个。定义ADD命令的个数为M个，GET命令的个数为N个。我们用下面得两个整数序列描述命令序列：</p>\n<p>1．A(1),A(2),……,A(M)：加入黑匣子的元素序列。所有的数均为绝对值不超过2000000的整数。例如在上例中A=(3,1,-4,2,8,-1000,2)。</p>\n<p>2．u(1),u(2),……,u(N)：u(i)表示第i个GET命令在第u(i)个ADD命令之后，例如在上例中，u=(1,2,6,6)。</p>\n<p>你可以假定自然数序列u(1),u(2),……,u(N)以非降序排列，N≤M，且对于每一个p（1≤p≤N）有p≤u(p)≤M。</p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输入描述\n<small>Input Description</small>\n</span></div>\n<div class=\"panel-body\">\n<p>第一行存放M和N的值,第二行存放 A(1),A(2),……,A(M) ,第三行存放u(1),u(2),……,u(N)。</p>\n\n</div>\n</div>\n<div  class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输出描述\n<small>Output Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<p>输出黑匣子的处理结果。</p>\n\n</div>\n</div>\n\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输入\n<small>Sample Input</small>\n</span></div>\n<div class=\"panel-body\">\n<p>7 4</p>\n<p>3 1 -4 2 8 -1000 2</p>\n<p>1 2 6 6</p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输出\n<small>Sample Output</small>\n</span></div>\n<div class=\"panel-body\">\n<p>3</p>\n<p>3</p>\n<p>1</p>\n<p>2</p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n数据范围及提示\n<small>Data Size & Hint</small>\n</span></div>\n<div class=\"panel-body\">\n<p>无</p>\n</div>\n</div>\n"}]}