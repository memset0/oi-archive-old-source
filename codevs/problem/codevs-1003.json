{"title":"电话连线","time_limit":1000,"memory_limit":125,"url":"http://www.joyoi.cn/problem/codevs-1003","statement":[{"title":"","format":"html_final","require":["katex"],"content":"\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n题目描述\n<small>Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<p>一个国家有n个城市。若干个城市之间有电话线连接，现在要增加m条电话线（电话线当然是双向的了），使得任意两个城市之间都直接或间接经过其他城市有电话线连接，你的程序应该能够找出最小费用及其一种连接方案。</p>\n\n<img src=\"/source/codevs/codevs-1003/img/aHR0cDovL2NvZGV2cy5jbi9tZWRpYS9pbWFnZS9wcm9ibGVtLzEwMDMucG5n.png\" style=\"max-width:700px\">\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输入描述\n<small>Input Description</small>\n</span></div>\n<div class=\"panel-body\">\n<p>    输入文件的第一行是n的值（n&lt;=100）.</p>\n<p>    第二行至第n+1行是一个n*n的矩阵，第i行第j列的数如果为0表示城市i与城市j有电话线连接，否则为这两个城市之间的连接费用（范围不超过10000）。</p>\n\n</div>\n</div>\n<div  class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n输出描述\n<small>Output Description</small>\n</span></div>\n<div class=\"panel-body\">\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp;输出文件的第一行为你连接的电话线总数m，第二行至第m+1行为你连接的每条电话线，格式为i j，（i&lt;j）， i j是电话线连接的两个城市。输出请按照Prim算法发现每一条边的顺序输出，起始点为1.</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第m+2行是连接这些电话线的总费用。</p>\n\n</div>\n</div>\n\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输入\n<small>Sample Input</small>\n</span></div>\n<div class=\"panel-body\">\n<p><span style=\"\">5</span></p>\n<p>0 15 27 6 0</p>\n<p>15 0 33 19 11</p>\n<p>27 33 0 0 17</p>\n<p>6 19 0 0 9</p>\n<p>0 11 17 9 0</p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n样例输出\n<small>Sample Output</small>\n</span></div>\n<div class=\"panel-body\">\n<p>2</p>\n<p>1 4</p>\n<p>2 5</p>\n<p>17</p>\n\n</div>\n</div>\n\n<div class=\"panel panel-default\">\n<div class=\"area-title\">\n<span>\n数据范围及提示\n<small>Data Size & Hint</small>\n</span></div>\n<div class=\"panel-body\">\n<p>n&lt;=100</p>\n</div>\n</div>\n"}]}