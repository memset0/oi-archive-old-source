{"title":"落叶","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3056","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n在二叉搜索树中执行如下操作：\r<br>移除并输出所有叶子结点；\r<br>重复上述操作直到树为空。\r<br>如果在下图中执行上述操作，从左到右，过程如下： \r<br><img src=\"/source/joyoi/tyvj-3056/img/aHR0cDovL3d3dy5qb3lvaS5jbi9wcm9ibGVtL3R5dmotMzA1Ni9wcm9ibGVtc19pbWFnZXMvMzY3Ny8xLmpwZw==.jpg\"></img><br>\r<br>依次输出的叶子结点：\r<br>BDHPY\r<br>CM\r<br>GQ\r<br>K\r<br>按顺序给出上述游戏中输出的叶子结点，你能输出原BST中的先序序列吗？ </p> \n\n \n # 输入格式 \n<p>\n输入包含多组数据。每组数据包含一行或多行的大写字母。每一行描述的是上述游戏中某一轮被移除的叶子结点。同一行的字母按字母表升序排列。\r<br>不同组的数据间用“*”分隔。\r<br>最后一组数据后是一个“$”符号。\r<br>输入数据中没有多余的空格或空行。\r<br></p> \n\n \n # 输出格式 \n<p>\n对于每组数据，都对应唯一一颗BST，你要输出该BST的先序序列（字母间不需要空格分开）。</p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>BDHPY\r\nCM\r\nGQ\r\nK\r\n*\r\nAC\r\nB\r\n$\r\n</td><td>KGCBDHQMPY\r\nBAC\r</td></tr></table>\n\n"}]}