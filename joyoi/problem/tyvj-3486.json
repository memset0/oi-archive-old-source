{"title":"火星人prefix","time_limit":1000,"memory_limit":161,"url":"http://www.joyoi.cn/problem/tyvj-3486","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n火星人最近研究了一种操作：求一个字串两个后缀的公共前缀。比方说，有这样一个字符串：madamimadam，我们将这个字符串的各个字符予以标号：\r<br>序号：\t1\t2\t3\t4\t5\t6\t7\t8\t9\t10\t11\r<br>字符\tm\ta\td\ta\tm\ti\tm\ta\td\ta\tm\r<br> 现在，火星人定义了一个函数LCQ(x, y)，表示：该字符串中第x个字符开始的字串，与该字符串中第y个字符开始的字串，两个字串的公共前缀的长度。比方说，LCQ(1, 7) = 5, LCQ(2, 10) = 1, LCQ(4, 7) = 0\r<br>  在研究LCQ函数的过程中，火星人发现了这样的一个关联：如果把该字符串的所有后缀排好序，就可以很快地求出LCQ函数的值；同样，如果求出了LCQ函数的值，也可以很快地将该字符串的后缀排好序。\r<br>  尽管火星人聪明地找到了求取LCQ函数的快速算法，但不甘心认输的地球人又给火星人出了个难题：在求取LCQ函数的同时，还可以改变字符串本身。具体地说，可以更改字符串中某一个字符的值，也可以在字符串中的某一个位置插入一个字符。地球人想考验一下，在如此复杂的问题中，火星人是否还能够做到很快地求取LCQ函数的值。\r<br>\r<br></p> \n\n \n # 输入格式 \n<p>\n第一行给出初始的字符串。\r<br>第二行是一个非负整数M，表示操作的个数。\r<br>接下来的M行，每行描述一个操作。操作有3种，如下所示：\r<br>1、\t询问。\r<br>语法：Q x y，x, y均为正整数。\r<br>功能：计算LCQ(x, y)\r<br>限制：1 <= x, y <= 当前字符串长度。\r<br>2、\t修改。\r<br>语法：R x d，x是正整数，d是字符。\r<br>功能：将字符串中第x个数修改为字符d。\r<br>限制：x不超过当前字符串长度。\r<br>3、\t插入：\r<br>语法：I x d，x是非负整数，d是字符。\r<br>功能：在字符串第x个字符之后插入字符d，如果x = 0，则在字符串开头插入。\r<br>限制：x不超过当前字符串长度。\r<br>\r<br></p> \n\n \n # 输出格式 \n<p>\n对于输入文件中每一个询问操作，你都应该输出对应的答案。一个答案一行。\r<br>\r<br></p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>7\r\nQ 1 7\r\nQ 4 8\r\nQ 10 11\r\nR 3 a\r\nQ 1 7\r\nI 10 a\r\nQ 2 11\r\n\r\n</td><td>\n5\r\n1\r\n0\r\n2\r\n1\r\n\r\n数据规模：\r\n对于100%的数据，满足：\r\n1、\t所有字符串自始至终都只有小写字母构成。\r\n2、\tM <= 150,000\r\n3、\t字符串长度L自始至终都满足L <= 100,000\r\n4、\t询问操作的个数不超过10,000个。\r\n\r\n对于第1，2个数据，字符串长度自始至终都不超过1,000\r\n对于第3，4，5个数据，没有插入操作。\r\n</td></tr></table>\n\n"}]}