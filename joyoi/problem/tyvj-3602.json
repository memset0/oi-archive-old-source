{"title":"拼图Jigsaw","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3602","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n5 岁的小P 对剪纸很感兴趣，他总是喜欢把一个矩形的纸片剪成一个又一个\r<br>的凸多边形。但是，每一次剪完后，他总是怀疑自己弄丢了一些纸片。聪明的他\r<br>想到了一个方法来检测纸片是否弄丢：他将这些凸多边形拼起来，如果能够拼成\r<br>一个矩形，他就认为纸片没有弄丢。由于纸片的数量不是很多，这个工作并不难。\r<br>但是，久而久之，他对这项工作不感兴趣了，所以，他找到了你，希望你能够告\r<br>诉他，这些凸多边形纸片能不能够拼成矩形。</p> \n\n \n # 输入格式 \n<p>\n第一行只有一个正整数n（1≤n≤8），表示凸多边形的个数。\r<br>以下n 行每一行描述一个凸多边形，格式如下：\r<br>第i+1 行的第一个数mi（3≤mi≤8）表示凸多边形的点数，接下来有mi\r<br>对实数，一对实数给出了一个点的坐标，这mi 个顶点按照从任意一个顶点出\r<br>发的逆时针顺序给出。且所有实数都在(-1000,1000)的范围内，小数点后不超\r<br>过8 位。</p> \n\n \n # 输出格式 \n<p>\n如果不能拼成矩形，输出只有一行“No”。\r<br>如果能拼成矩形，输出的第一行为“Yes”。\r<br>接下来的n 行描述拼法。\r<br>如果能够拼成一个X*Y 的矩形，那么矩形的四个顶点的坐标是(0,0)、\r<br>(0,Y)、(X,Y)、(X,0)。这n 行输出每一个凸多边形的顶点的坐标（拼成矩形后）。\r<br>按照输入的顺序，即第一个输出的凸多边形对应输入的第一个凸多边形。对\r<br>于每一个凸多边形，输出也按照输入的顺序，即一个多边形的第一个顶点对\r<br>应输入的第一个顶点。这样，输出总共有n 行，第i 行有mi 对数。</p> \n\n \n # 提示 \n<p>\n<img border=\"0\" src=\"/source/joyoi/tyvj-3602/img/aHR0cDovL3d3dy5qb3lvaS5jbi9wcm9ibGVtL3R5dmotMzYwMi9wcm9ibGVtc19pbWFnZXMvMjQ1MS8xMTUzLmpwZw==.jpg\">\r<br>由于矩形纸片的两面的颜色不同，所以纸片只能旋转和平移，不能翻转。所\r<br>以，输出的mi 个顶点也应该是逆时针顺序的。</p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>3\r\n4 0 0 4 -1 5 4 0 4\r\n4 0 0 5 -1 8 3 0 3\r\n4 0 0 0 -8 3 -4 4 0</td><td>Yes\r\n0 4 4 3 5 8 0 8\r\n5 8 4 3 8 0 8 8\r\n0 0 8 0 4 3 0 4</td></tr></table>\n\n"}]}