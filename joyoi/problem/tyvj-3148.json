{"title":"简单的积木搭建问题","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3148","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n【背景】\r<br>\r<br>　　有足够多的等大积木用于搭建高度（层数）为h的塔。塔的每层都是排列紧密的一列积木。将一座塔的各层的积木数连续写出组成的序列{Ah}称为塔的表达式。一座塔不会倒塌的条件是：\r<br>\r<br>　　（一）塔的每层至少有一块积木（Ai>0，i=1..n）；\r<br>　　（二）每层的积木块数均与相邻层相差1（Ai-Aj=±1,其中：j=i+1，i=1..n-1）；\r<br>　　（三）塔的底层必须有m块积木（A1=m）。两座塔Am与Bn不同，当且仅当塔的层数不同（m<>n）或对于特定的层i（1 <= i <= min{m，n}），有Ai <> Bi。与此类似的，两座塔Am < Bn不同，当且仅当塔的层数相同（m=n）且对于特定的层i（1<= i <= m），有Ai < Bi，且对于所有的j，1 <= j < i，均有Aj = Bj 。\r<br>\r<br>【任务一】\r<br>\r<br>　　给定m与h，求可能的塔的种类。\r<br>\r<br>【任务二】\r<br>\r<br>　　在任务一的基础上，把所有塔按照表达式大小排序（具体的序列排序定义略，参照等长字符串的大小比较方式），计算第k种塔的表达式。\r<br></p> \n\n \n # 输入格式 \n<p>\n　　从文件Tower.in读入数据，文件的第一行是3个正整数m，h，c。随后的c行每行包括两个正整数Li ，Ci（i=1..c），Li 为Ci 的长度，求第Ci 种塔的表达式。</p> \n\n \n # 输出格式 \n<p>\n　　结果打印到文件Tower.out中，输出文件的第一行是符合条件的塔的数量，以下c行，每个表达式占一行，表达式顺序按照读入命令的顺序，表达式里的数用空格隔开。</p> \n\n \n # 提示 \n<p>\n【提示】\r<br>\r<br>　　1 <= m <= 10000，1 <= h <= 1600，1 <= c <= 100，1 <= Ci <= 10^100，输入数据无需判错。\r<br></p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>　　4 4 5\r\n　　1 8\r\n　　1 6\r\n　　1 1\r\n　　1 2\r\n　　1 4\r\n</td><td>　　8\r\n　　4 5 6 7\r\n　　4 5 4 5\r\n　　4 3 2 1\r\n　　4 3 2 3\r\n　　4 3 4 5\r</td></tr></table>\n\n"}]}