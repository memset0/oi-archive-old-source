{"title":"数字合并","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-2859","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n设有一排整数，共ｎ（ｎ＜＝１００）个，任意2个相邻的数可以进行相乘归并，归并的代价为该两个数的和,经过不断的归并,最后归为一堆,而全部归并代价称为总代价,给出一种归并算法,使总代价为最大。</p> \n\n \n # 输入格式 \n<p>\n第一行为数N；\r<br>第二行为N个整数,每两个数之间用一个空格分隔。（整数的绝对值小于等于１００，且不等于０）\r<br></p> \n\n \n # 输出格式 \n<p>\n输出这ｎ个数归并后的最大代价。</p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td></td><td></td></tr></table>\n\n"}]}