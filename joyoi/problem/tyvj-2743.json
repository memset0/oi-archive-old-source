{"title":"subset问题","time_limit":1000,"memory_limit":602,"url":"http://www.joyoi.cn/problem/tyvj-2743","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n对于从1到N (1 <= N <= 39) 的连续整数集合，能划分成两个子集合，且保证每个集合的数字和是相等的。举个例子，如果N=3，对于{1，2，3}能划分成两个子集合，每个子集合的所有数字和是相等的： \r<br>{3} 和 {1,2}\r<br>这是唯一一种分法（交换集合位置被认为是同一种划分方案，因此不会增加划分方案总数）如果N=7，有四种方法能划分集合{1，2，3，4，5，6，7}，每一种分法的子集合各数字和是相等的: \r<br>{1,6,7} 和 {2,3,4,5} {注 1+6+7=2+3+4+5}\r<br>{2,5,7} 和 {1,3,4,6}\r<br>{3,4,7} 和 {1,2,5,6}\r<br>{1,2,4,7} 和 {3,5,6}\r<br>给出N，你的程序应该输出划分方案总数，如果不存在这样的划分方案，则输出0。程序不能预存结果直接输出（不能打表）。\r<br></p> \n\n \n # 输入格式 \n<p>\n输入文件只有一行，且只有一个整数N </p> \n\n \n # 输出格式 \n<p>\n输出划分方案总数，如果不存在则输出0。 </p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>7</td><td>4</td></tr></table>\n\n"}]}