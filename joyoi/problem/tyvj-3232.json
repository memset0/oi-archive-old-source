{"title":"king(国王）","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3232","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n国王（king.pas/c/cpp)\r<br>\r<br>【问题描述】\r<br>\r<br>从前，在一个王国里有一个皇后，皇后期待有一个婴儿。皇后祈祷：“要是我的孩子是个儿子并且他一个健全的国王就好了。”九个月后孩子出生了，事实上，她生下了一个漂亮的儿子。\r<br>不幸的是，就像过去发生在王室家庭的情况一样，她的儿子有点弱智。经过多年的学习，他仅仅能够加减整数，并比较结果是否大于或小于一个给定的整数。此外，数字必须写在一个序列里，且他仅仅能够计算序列中连续子序列的和。\r<br>老国王对他儿子很不高兴。但是，他准备做好一切使他的儿子在他死后能治理王国。知道他儿子的技能后，他决定每一个国王必须决定的问题必须是一个有限整数序列的形式，且问题通过计算某一上限或下限开始的序列和得以解决。这样至少有一些希望，他的儿子将能够做出一些决定。\r<br> 老国王去世后，年轻的国王开始统治。但很快，很多人对他的决定非常不满，并决定将他废黜。他们试图证明他的决定是错误的。\r<br> 因此一些阴谋家呈现给年轻国王一堆问题。这些问题的形式是在序列S = {a1, a2, ..., an}中的一些子序列Si = {aSi, aSi+1, ..., aSi+ni}。国王想了一会儿，然后决定，他的给每个子序列Si一个整数限制，并宣布这些限制由他的决定。\r<br>过了一会儿，他意识到，他的一些决定是错误的。他不能撤销这些整数限制，但他试图拯救自己，所以他决定改动给定他的序列。他下令他的顾问，找一个序列S，将满足aSi + aSi+1 + ... + aSi+ni < ki或者aSi + aSi+1 + ... + aSi+ni > ki。帮助国王的顾问，编写一个程序，决定这样的序列存在与否。\r<br></p> \n\n \n # 输入格式 \n<p>\n输入包括多块。\r<br>除了最后一块，每块第一行包括两个整数n，m，其中0 < n <= 100，表示序列S的长度；0 < m <= 100，表示Si的数量。接下来m行包括四个整数si, ni, oi, ki，其中oi代表运算符>(用gt表示)或<(用lt表示)。\r<br>最后的一块包括一个整数0。</p> \n\n \n # 输出格式 \n<p>\n除了最后一块，每块输出一行，若序列存在，则输出lamentable kingdom；若序列不存在，则输出successful conspiracy。\r<br></p> \n\n \n # 提示 \n<p>\n本题数据不完整，请在本系统测试通过后到 http://poj.org/problem?id=1364 提交完整测试！</p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>4 2\r\n1 2 gt 0\r\n2 2 lt 2\r\n1 2\r\n1 0 gt 0\r\n1 0 lt 0\r\n0\r\n\r\n</td><td>lamentable kingdom\r\nsuccessful conspiracy\r</td></tr></table>\n\n"}]}