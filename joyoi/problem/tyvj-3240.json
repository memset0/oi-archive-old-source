{"title":"Closest Common Ancestors（最近公共祖先）","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3240","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n最近公共祖先（cca.pas/c/cpp）\r<br>\r<br>【问题描述】\r<br>\r<br>　 　 输入一棵有根树和一系列顶点。对每对顶点(u，v)，算出它们的最近公共祖先。一个结点可以是它自己的祖先。(如例1中2的祖先是2和5)\r<br>\r<br></p> \n\n \n # 输入格式 \n<p>\n每组数据输入格式： \r<br>\r<br>第一行是一个整数n，表示顶点数，其中 n <= 900 ，接下来n行格式如下：\r<br>vertex：(nr_of_successors) successor1 successor2 ...\r<br>vertices是一个1到n的整数，表示顶点，nr_of_successors表示该顶点的儿子数，successor i( 1<=i<= nr_of_successors )表示该顶点的各儿子\r<br>然后是一个整数nr_of_pairs，表示要求的顶点对数\r<br>(u v) (x y) ...\r<br>\r<br>输入包含至少一组数据\r<br>包含一些无用的空格，空行等\r<br></p> \n\n \n # 输出格式 \n<p>\n对每个公共祖先程序输出这个祖先和以它为祖先的顶点对数。\r<br>格式为： ancestor：times ，其中ancestor表示祖先，times表示以它为祖先的顶点对数。\r<br><br><center><img src=\"/source/joyoi/tyvj-3240/img/aHR0cDovL3d3dy5qb3lvaS5jbi9wcm9ibGVtL3R5dmotMzI0MC9wcm9ibGVtc19pbWFnZXMvMTc3NS9wMS5naWY=.gif\"></img></center></p> \n\n \n # 提示 \n<p>\nHuge input, scanf is recommended.注意输入，如果使用c语言的请用scanf\r<br>\r<br>本题数据不完整，请在本系统测试通过后到http://poj.org/problem?id=1470 提交完整测试！</p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>5\r\n5:(3) 1 4 2\r\n1:(0)\r\n4:(0)\r\n2:(1) 3\r\n3:(0)\r\n6\r\n(1 5) (1 4) (4 2)\r\n      (2 3)\r\n(1 3) (4 3)\r\n</td><td>2:1\r\n5:5\r</td></tr></table>\n\n"}]}