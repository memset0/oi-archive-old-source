{"title":"Register","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-2282","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n在编译器理论中，一个表达式是使用一棵树来表示的，其实根为运算符，子节点为分解出的子表达式。在实际编译时，一个运算符只有当它所有子节点代表的表达式都求出以后，它才能够做相应的运算。\r<br>编译的时候，内存里有一种特殊的储存器“Register”，如果将得出的表达式储存到Register中，可以加快存取速度，但是由于Register数量有限，不能存入的表达式就只好用主Memory来存储，这样的话就会造成时间上的浪费。所以决定如何使用Register可以提高编译的效率。\r<br>具体的编译过程如下：\r<br>\r<br>1．\t对于一个非叶子节点，选任意一个子节点，进行运算（递归）\r<br>2．\t计算完以后，对于计算出的数值，可以选择存入Register或者存入主Memory。\r<br>a)\t 若存入Register，那么存取时间不计，但是在计算其他子节点表达式时，这个Register是不可用的。\r<br>b)\t若存入主Memory，存入需要Cs的时间，以后如果要调用这个值，还需要Cl的时间来调用。\r<br>3．重新返回1，直到所有的子节点表达式都处理完毕。\r<br>4．这个时候，将所有存入主Memory的数值从主Memory中读入到Register中，一个数值占用一个Register。\r<br>5．将所有Register中的数值按照根节点代表的运算符进行运算，得出结果。\r<br>6．然后将所有使用到的Register清空。\r<br>\r<br>所有的叶子节点代表的是数值，且必须从主Memory中读入，每种运算符计算时使用的时间各有不同。现要你决定编译的顺序和Register的使用，使得总运算时间最少。\r<br>\r<br>\r<br></p> \n\n \n # 输入格式 \n<p>\nN（Register个数）\r<br>Cl,Cs\r<br>一个数Kx，表示根节点的子节点个数。\r<br>如果Kx>0，那么x就是一个非叶子节点，代表一个运算符，接下来一个数Cx代表这个运算符要使用的时间。\r<br>然后接下来就使用相同的格式来描述x的Kx个子节点。\r<br>\r<br></p> \n\n \n # 输出格式 \n<p>\n总计算时间\r<br></p> \n\n \n # 提示 \n<p>\n<img border=\"0\" src=\"/source/joyoi/tyvj-2282/img/aHR0cDovL3d3dy5qb3lvaS5jbi9wcm9ibGVtL3R5dmotMjI4Mi9wcm9ibGVtc19pbWFnZXMvMjY1My8xMzc0XzEuanBn.jpg\"></p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>2\r\n3 2\r\n2\r\n10\r\n2\r\n15\r\n0\r\n0\r\n2\r\n5\r\n0\r\n0\r\n\r\n</td><td>47</td></tr></table>\n\n"}]}