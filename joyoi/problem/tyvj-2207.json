{"title":"上学路线route","time_limit":1000,"memory_limit":161,"url":"http://www.joyoi.cn/problem/tyvj-2207","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n可可和卡卡家住合肥市的东郊，每天上学他们都要转车多次才能到达市区西端的学校。直到有一天他们两人参加了学校的信息学奥林匹克竞赛小组才发现每天上学的乘车路线不一定是最优的。\r<br>可可：“很可能我们在上学的路途上浪费了大量的时间，让我们写一个程序来计算上学需要的最少时间吧！”\r<br>合肥市一共设有N个公交车站，不妨将它们编号为1…N的自然数，并认为可可和卡卡家住在1号汽车站附近，而他们学校在N号汽车站。市内有M条直达汽车路线，执行第i条路线的公交车往返于站点pi和qi之间，从起点到终点需要花费的时间为ti。(1<=i<=M, 1<=pi, qi<=N)\r<br>两个人坐在电脑前，根据上面的信息很快就编程算出了最优的乘车方案。然而可可忽然有了一个鬼点子，他想趁卡卡不备，在卡卡的输入数据中删去一些路线，从而让卡卡的程序得出的答案大于实际的最短时间。而对于每一条路线i事实上都有一个代价ci：删去路线的ci越大卡卡就越容易发现这个玩笑，可可想知道什么样的删除方案可以达到他的目的而让被删除的公交车路线ci之和最小。\r<br>[任务]\r<br>编写一个程序：\r<br>&#61548;\t从输入文件中读取合肥市公交路线的信息；\r<br>&#61548;\t计算出实际上可可和卡卡上学需要花费的最少时间；\r<br>&#61548;\t帮助可可设计一个方案，删除输入信息中的一些公交路线，使得删除后从家到学校需要的最少时间变大，而被删除路线的ci和最小；向输出文件输出答案。\r<br></p> \n\n \n # 输入格式 \n<p>\n输入文件中第一行有两个正整数N和M，分别表示合肥市公交车站和公交汽车路线的个数。以下M行，每行（第i行，总第(i+1)行）用四个正整数描述第i条路线：pi, qi, ti, ci；具体含义见上文描述。\r<br></p> \n\n \n # 输出格式 \n<p>\n输出文件最多有两行。\r<br>第一行中仅有一个整数，表示从可可和卡卡家到学校需要的最短时间。\r<br>第二行输出一个整数C,表示Ci之和</p> \n\n \n # 提示 \n<p>\n2<=N<=500, 1<=M<=124 750, 1<=ti, ci<=10 000\r<br>合肥市的公交网络十分发达，你可以认为任意两个车站间都可以通过直达或转车互相到达，当然如果在你提供的删除方案中，家和学校无法互相到达，那么则认为上学需要的最短为正无穷大：这显然是一个合法的方案。\r<br></p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>6 7\r\n1 2 1 3\r\n2 6 1 5\r\n1 3 1 1\r\n3 4 1 1\r\n4 6 1 1\r\n5 6 1 2\r\n1 5 1 4\r\n</td><td>\n2 \r\n5\r\n\r\n</td></tr></table>\n\n"}]}