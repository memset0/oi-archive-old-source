{"title":"黑白棋子的移动","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3073","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n　　有2n个棋子（n≥4）排成一行，开始为位置白子全部在左边，黑子全部在右边，如下图为n=5的情况：\r<br>　　　　○○○○○●●●●●\r<br>　　移动棋子的规则是：每次必须同时移动相邻的两个棋子，颜色不限，可以左移也可以右移到空位上去，但不能调换两个棋子的左右位置。每次移动必须跳过若干个棋子（不能平移），要求最后能移成黑白相间的一行棋子。如n=5时，成为：\r<br>　　　　○●○●○●○●○●\r<br>　　任务：编程打印出最少移动步数。\r<br></p> \n\n \n # 输入格式 \n<p>\n7</p> \n\n \n # 输出格式 \n<p>\nstep 0：ooooooo*******--\r<br>step 1：oooooo--******o*\r<br>step 2：oooooo--******o*\r<br>step 3：ooooo--*****o*o*\r<br>step 4：ooooo*****--o*o*\r<br>step 5：oooo--****o*o*o*\r<br>step 6：oooo****--o*o*o*\r<br>step 7：ooo--***o*o*o*o*\r<br>step 8：ooo*o**--*o*o*o*\r<br>step 9：o--*o**oo*o*o*o*\r<br>step 10：o*o*o*--o*o*o*o*\r<br>step 11：--o*o*o*o*o*o*o*\r<br>（注：不要输出具体过程，只输出最少移动步数）\r<br></p> \n\n \n # 提示 \n<p>\n　　我们先从n=4开始试试看，初始时：\r<br>　　　　　　○○○○●●●●\r<br>　　第1步：○○○——●●●○●（—表示空位）\r<br>　　第2步：○○○●○●●——●\r<br>　　第3步：○——●○●●○○●\r<br>　　第4步：○●○●○●——○●\r<br>　　第5步：——○●○●○●○●\r<br>　　如果n=5呢？我们继续尝试，希望看出一些规律，初始时：\r<br>　　　　　○○○○○●●●●●\r<br>　　第1步：○○○○——●●●●○●\r<br>　　第2步：○○○○●●●●——○●\r<br>　　这样，n=5的问题又分解成了n=4的情况，下面只要再做一下n=4的5个步骤就行了。同理，n=6的情况又可以分解成n=5的情况，……，所以，对于一个规模为n的问题，我们很容易地就把它分治成了规模为n-1的相同类型子问题。\r<br>　　数据结构如下：数组c[1..max]用来作为棋子移动的场所，初始时，c[1]~c[n]存放白子（用字符o表示），c[n+1]~c[2n]存放黑子（用字符*表示），c[2n+1]，c[2n+2]为空位置（用字符—表示）。最后结果在c[3]~c[2n+2]中。\r<br></p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>7</td><td>11</td></tr></table>\n\n"}]}