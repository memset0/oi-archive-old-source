{"title":"罚款","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3356","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n罚款（Penalty.pas\\c\\cpp） \r<br>\r<br>【题目描述】\r<br>　　Symbol最近非常倒霉，开车魂不守舍，不是闯红灯就是超速，结果在某一天同时收到M张罚单，每张罚单交罚款都需要一定的天数才能完成，而且一定要处理完一张罚单后，才能处理下一张，罚金取决于完成交罚款的时间，假设罚单j在你收到罚单那天开始的第d天完成，那么罚金为ajd2+bjd+cj，而且罚金随着d的增大而增大。\r<br>　　你的任务制作一张安排表，使得最多的罚金最小。\r<br>　　如假设有3张罚单，罚单1需要3天来完成，罚金为3d+2；罚单2需要4天来完成，罚金为d+7;罚单3需要5天来完成，罚金为2d-4。\r<br>　　这样，最好的方案是按照1，3，2的顺序来处理，最多的罚金时19\r<br></p> \n\n \n # 输入格式 \n<p>\n　　输入文件Penalty.in第一行是一个整数M,表示罚单的数量。接下来M行，每行包括4个整数，第i+1行描述了第i张罚单的情况，第一个数di表示需要di才能完成，接下来三个整数ai,bi,ci表示罚金表达式的三个参数。</p> \n\n \n # 输出格式 \n<p>\n　　输出文件Penalty.out输出最大罚金的最小值。</p> \n\n \n # 提示 \n<p>\n【数据说明】\r<br>　　100%的数据1<=M<=500000\r<br>　　50%的数据 1<=M<=5000\r<br>　　保证结果在int64范围内。\r<br></p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>3\r\n3 0 3 2\r\n4 0 1 7\r\n5 0 2 -4\r\n</td><td>19</td></tr></table>\n\n"}]}