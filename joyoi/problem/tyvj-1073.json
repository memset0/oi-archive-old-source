{"title":"加分二叉树","time_limit":1000,"memory_limit":128,"url":"http://www.joyoi.cn/problem/tyvj-1073","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目背景 \n<p>NOIP2003&nbsp;提高组&nbsp;第三道</p> \n\n \n # 题目描述 \n<p>设一个n个节点的二叉树tree的中序遍历为（l,2,3,&hellip;,n），其中数字1,2,3,&hellip;,n为节点编号。每个节点都有一个分数（均为正整数），记第j个节点的分数为di，tree及它的每个子树都有一个加分，任一棵子树subtree（也包含tree本身）的加分计算方法如下：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;subtree的左子树的加分&times;&nbsp;subtree的右子树的加分＋subtree的根的分数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;若某个子树为主，规定其加分为1，叶子的加分就是叶节点本身的分数。不考虑它的空<br />\r\n子树。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;试求一棵符合中序遍历为（1,2,3,&hellip;,n）且加分最高的二叉树tree。要求输出；<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;（1）tree的最高加分<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;（2）tree的前序遍历</p> \n\n \n # 输入格式 \n<p>&nbsp;&nbsp;&nbsp;&nbsp;第1行：一个整数n（n＜30），为节点个数。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第2行：n个用空格隔开的整数，为每个节点的分数（分数＜100）。</p> \n\n \n # 输出格式 \n<p>&nbsp;&nbsp;&nbsp;&nbsp;第1行：一个整数，为最高加分（结果不会超过4,000,000,000）。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;第2行：n个用空格隔开的整数，为该树的前序遍历。</p> "},{"title":"# 样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>5\r\n5 7 1 2 10\r\n</td><td>145\r\n3 1 2 4 5\r\n</td></tr></table>\n\n"}]}