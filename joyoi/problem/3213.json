{"title":"GCD","time_limit":1000,"memory_limit":128,"url":"http://www.joyoi.cn/problem/3213","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n输入A和B，输出A和B的最大公因数\n贪吃蛇代码：\n#include <windows.h>\n#include <stdlib.h>\n#include <conio.h>\n#include <time.h>\n#include <cstring>\n#include <cstdio>\n#include <iostream>\n#define  N 20 \nusing namespace std;\nint gameover;\nint x1, y1;\nint x,y;\nlong long start;\nclass snake_position\n{\n\tpublic:\n\t    int x,y;      \n    \tsnake_position(){};\n   \t\tvoid initialize(int &);\n};\nsnake_position position[(N-2)*(N-2)+1]; \nvoid snake_position::initialize(int &j)\n{ \n    x = 1;\n\ty = j;\n}\nclass snake_map\n{\n\tprivate:\n    \tchar s[N][N];\n    \tint grade, length;\n    \tint gamespeed; \n    \tchar direction; \n    \tint head,tail;\n    \tint score;\n    \tbool gameauto;\n\tpublic:\n    \tsnake_map(int h=4,int t=1,int l=4,char d=77,int s=0):length(l),direction(d),head(h),tail(t),score(s){}\n    \tvoid initialize();  \n    \tvoid show_game();\n    \tint updata_game();\n    \tvoid setpoint();\n    \tvoid getgrade();\n    \tvoid display();\n};\nvoid snake_map::initialize()\n{\n    int i,j;\n    for(i=1;i<=3;i++)\n        s[1][i] = '$';\n    s[1][4] = '+';\n    for(i=1;i<=N-2;i++)\n        for(j=1;j<=N-2;j++)\n            s[i][j]=' '; \n    for(i=0;i<=N-1;i++)\n        s[0][i] = s[N-1][i] = '-'; \n    for(i=1;i<=N-2;i++)\n        s[i][0] = s[i][N-1] = '|'; \n}\nvoid snake_map::show_game()\n{\n    system(\"cls\"); \n    int i,j;\n    cout << endl;\n    for(i=0;i<N;i++)\n    {\n        cout << '\\t';\n        for(j=0;j<N;j++)\n            cout<<s[i][j]<<' '; \n        if(i==2) cout << \"\\t等级：\"<<grade;\n        if(i==6) cout <<\"\\t速度：\"<<gamespeed/1000.0<<\"s/格\";\n        if(i==10) cout << \"\\t得分：\"<<score<<\"分\";\n        if(i==14) cout << \"\\t暂停：按一下空格键\" ;\n        if(i==18) cout << \"\\t继续：按两下空格键\" ;\n        cout<<endl;\n    }\n}\nvoid snake_map::getgrade()\n{\n    cin>>grade;\n    while( grade>7 || grade<1 )\n    {\n        cout << \"请输入数字1-7选择等级，输入其他数字无效\" << endl;\n        cin >> grade;\n    }\n    switch(grade)\n    {\n        case 1: gamespeed = 800;gameauto = 0;break;\n        case 2: gamespeed = 500;gameauto = 0;break;\n        case 3: gamespeed = 400;gameauto = 0;break;\n        case 4: gamespeed = 300;gameauto = 0;break;\n        case 5: gamespeed = 200;gameauto = 0;break;\n        case 6: gamespeed = 100;gameauto = 0;break;\n        case 7: grade = 1;gamespeed = 800;gameauto = 1;break;\n    }\n}\nvoid snake_map::display()\n{\n    cout << \"\\n\\t\\t\\t\\t等级：\" << grade;\n    cout << \"\\n\\n\\n\\t\\t\\t\\t速度：\" << gamespeed/1000.0<<\"s/格\";\n    cout << \"\\n\\n\\n\\t\\t\\t\\t得分：\" << score << \"分\" ;\n}\nvoid snake_map::setpoint()\n{\n    srand(time(0));\n    do\n    {\n        x1 = rand() % (N-2) + 1;\n        y1 = rand() % (N-2) + 1;\n    }while(s[x1][y1]!=' ');\n    s[x1][y1]='*';\n}\nchar key;\nint snake_map::updata_game()\n{\n    gameover = 1;\n    key = direction;\n    start = clock();\n    while((gameover=(clock()-start<=gamespeed))&&!kbhit());\n        if(gameover)\n        {\n            getch();\n            key = getch();\n        }\n        if(key == ' ')\n        {\n            while(getch()!=' '){};\n        }\n        else\n            direction = key;\n        switch(direction)\n        {\n            case 72: x= position[head].x-1; y= position[head].y;break; \n            case 80: x= position[head].x+1; y= position[head].y;break;\n            case 75: x= position[head].x; y= position[head].y-1;break;\n            case 77: x= position[head].x; y= position[head].y+1;\n        }\n        if(!(direction==72||direction==80||direction==75 ||direction==77))\n            gameover = 0;\n        else if(x==0 || x==N-1 ||y==0 || y==N-1)\n            gameover = 0;\n        else if(s[x][y]!=' '&&!(x==x1&&y==y1))\n            gameover = 0;\n        else if(x==x1 && y==y1)\n        {\n            length ++;\n            if(length>=8 && gameauto)\n            {\n\n                length -= 8;\n                grade ++;\n                if(gamespeed==8000)\n                    gamespeed -= 300;else\n                if(gamespeed==500)\n                    gamespeed -= 100;else\n                if(gamespeed==400)\n                    gamespeed -= 100;else\n                if(gamespeed==300)\n                    gamespeed -= 100;else\n                gamespeed=100;\n        \t}\n            s[x][y]= '+';\n            s[position[head].x][position[head].y] = '$';\n            head = (head+1) % ( (N-2)*(N-2) );\n            position[head].x = x;\n            position[head].y = y;\n            show_game();\n            gameover = 1;\n            score += grade*20; \n            setpoint();\n        }\n        else\n        { \n            s[position[tail].x][position[tail].y]=' ';\n            tail= (tail+1) % ( (N-2) * (N-2) );\n            s[position[head].x][position[head].y]='$';\n            head= (head+1) % ( (N-2) * (N-2) );\n            position[head].x = x;\n            position[head].y = y;\n            s[position[head].x][position[head].y]='@';\n            gameover = 1;\n        }\n    return gameover;\n}\nint main()\n{\n\tsystem(\"color 9f\"); \n    char ctn = 'y';\n    int nodead;\n    cout<<\"\\n\\n\\n\\n\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t 欢迎进入贪吃蛇游戏!\"<<endl;\n    cout<<\"\\n\\n\\n\\t\\t\\t\\t\\t\\t 按任意键马上开始。。。\"<<endl;\n    getch();\n    while( ctn=='y' )\n    {\n        system(\"cls\");\n        snake_map snake;\n        snake.initialize();\n        cout << \"\\n\\n\\t\\t\\t\\t\\t\\t请输入数字选择游戏等级：\" << endl;\n        cout << \"\\n\\n\\n\\t\\t\\t\\t\\t\\t1.等级一：速度 0.8s/格 \\n\\n\\t\\t\\t\\t\\t\\t2.等级二：速度 0.5s/格 \\n\\n\\t\\t\\t\\t\\t\\t3.等级三：速度 0.4s/格 \";\n        cout << \"\\n\\n\\t\\t\\t\\t\\t\\t4.等级四：速度 0.3s/格 \\n\\n\\t\\t\\t\\t\\t\\t5.等级五：速度 0.2s/格 \\n\\n\\t\\t\\t\\t\\t\\t6.等级六：速度 0.1s/格 \\n\\n\\t\\t\\t\\t\\t\\t   7.自动升级模式\" << endl;\n        snake.getgrade();\n        for(int i=1;i<=4;i++)\n        {\n            position[i].initialize(i);\n        }\n        snake.setpoint();\n        do\n        {\n            snake.show_game();\n            nodead = snake.updata_game();\n        }while(nodead);\n        system(\"cls\");\n        cout << \"\\n\\n\\n\\t\\t\\t\\tGameover！\\n\\n\"<<endl;\n        snake.display();\n        cout << \"\\n\\n\\n\\t\\t    是否选择继续游戏？输入 y 继续，n 退出\" << endl;\n        cin >> ctn;\n    }\n\tSleep(100);cout<<\"G\";Sleep(100);cout<<\"o\";Sleep(100);cout<<\"o\";\n\tSleep(100);cout<<\"d\";Sleep(100);cout<<\"b\";Sleep(100);cout<<\"y\";\n\tSleep(100);cout<<\"e\";Sleep(100);cout<<\"!\";Sleep(100);cout<<\"\\n\";\n\tcout<<\"欢迎常来玩贪吃蛇！再见！\\n\";\n    while(1); \n}# 样例数据\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>4 6\n</td><td>2</td></tr></table>\n\n"}]}