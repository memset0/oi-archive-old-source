{"title":"数字梯形问题","time_limit":1000,"memory_limit":125,"url":"http://www.joyoi.cn/problem/tyvj-3212","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n数字梯形问题（digit.cpp/c/pas）\r<br>\r<br>【问题描述】\r<br>\r<br>　　给定一个由n 行数字组成的数字梯形如下图所示。梯形的第一行有m 个数字。从梯形的顶部的m 个数字开始，在每个数字处可以沿左下或右下方向移动，形成一条从梯形的顶至底的路径。\r<br>　　规则1：从梯形的顶至底的m条路径互不相交。\r<br>　　规则2：从梯形的顶至底的m条路径仅在数字结点处相交。\r<br>　　规则3：从梯形的顶至底的m条路径允许在数字结点相交或边相交。\r<br>　　　　　　　　　　　　　　　　　2　3\r<br>　　　　　　　　　　　　　　　　3　4　5\r<br>　　　　　　　　　　　　　　　9　10　9　1\r<br>　　　　　　　　　　　　　　1　1　10　1　1\r<br>　　　　　　　　　　　　　1　1　10　12　1　1\r<br>\r<br>【编程任务】\r<br>\r<br>　　对于给定的数字梯形，分别按照规则1，规则2，和规则3 计算出从梯形的顶至底的m条路径，使这m条路径经过的数字总和最大。</p> \n\n \n # 输入格式 \n<p>\n由文件digit.in提供输入数据。\r<br>　　文件的第1 行中有2个正整数m和n（m,n<=20），分别表示数字梯形的第一行有m个数字，共有n 行。接下来的n 行是数字梯形中各行的数字。第1 行有m个数字，第2 行有m+1 个数字，…。</p> \n\n \n # 输出格式 \n<p>\n程序运行结束时，将按照规则1，规则2，和规则3 计算出的最大数字总和输出到文件digit.out中。\r<br>　　每行一个最大总和。</p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>2 5\r\n2 3\r\n3 4 5\r\n9 10 9 1\r\n1 1 10 1 1\r\n1 1 10 12 1 1</td><td>66\r\n75\r\n77</td></tr></table>\n\n"}]}