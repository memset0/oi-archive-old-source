{"title":"智捅马蜂窝","time_limit":1000,"memory_limit":64,"url":"http://www.joyoi.cn/problem/tyvj-3430","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n智捅马蜂窝（clever.pas\\c\\cpp）\r<br>\r<br>【题目背景】\r<br>　　为了统计小球的方案数，平平已经累坏了。于是，他摘掉了他那800度的眼镜，躺在树下休息。\r<br>　　后来，平平发现树上有一个特别不一样的水果，又累又饿的平平打算去把它摘下来。\r<br>\r<br>【题目描述】\r<br>　　现在，将大树以一个N个节点的无向图的形式给出，每个节点用坐标（Xi，Yi）来表示表示，平平要从第一个点爬到第N个点，除了从一个节点爬向另一个相邻的节点以外，他还有一种移动方法，就是从一个节点跳下，到达正下方的某个节点（之间可隔着若干个点和边），即当Xj=Xi and Yi < Yj 时，平平就可以从j节点下落到i节点，他下落所用时间满足自由落体公式，t=sqrt( ( Yj-Yi ) *2 / g) （注意：g取10）。如果出现两线相交的情况，我们不认为它们是相通的。\r<br></p> \n\n \n # 输入格式 \n<p>\n　　输入文件clever.in包含两个整数N,V，N表示节点个数，V表示平平爬树的速度。\r<br>　　接下来N行，每行包含3个整数X,Y,F，X,Y是这个点的坐标，F是他的父节点（F一定小于这个点的标号，第一行的F为0）。\r<br>　　注意：两节点间距离按欧几里德距离计算 dis = sqrt( ( x1 – x2 )^2+ ( y1 – y2 )^2 )\r<br></p> \n\n \n # 输出格式 \n<p>\n　　输出文件clever.out输出仅包括一行，从1到N所用的最少所需时间T，保留两位小数。</p> \n\n \n # 提示 \n<p>\n【数据规模】\r<br>　　对于100%数据,1 <=N <= 100,1 <= V <= 10,0 <= X,Y <= 100.\r<br>　　建议使用extended(pas)或double（c and c++）计算，我们对于精度造成的误差将不予重测。\r<br>\r<br></p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>9 1\r\n5 0 0\r\n5 5 1\r\n6 5 2\r\n7 6 2\r\n6 9 2\r\n3 6 2\r\n4 5 2\r\n3 2 7\r\n7 2 3\r\n</td><td>8.13</td></tr></table>\n\n"}]}