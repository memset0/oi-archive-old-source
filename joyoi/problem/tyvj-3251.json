{"title":"灾后重建（floyd算法）","time_limit":1000,"memory_limit":259,"url":"http://www.joyoi.cn/problem/tyvj-3251","statement":[{"title":"","format":"markdown","require":["katex"],"content":"\n# \n\n \n # 题目描述 \n<p>\n灾后重建(rebuild)\r<br>\r<br>【题目描述】\r<br>　　B地区在地震过后，所有村庄都造成了一定的损毁，而这场地震却没对公路造成什么影响。但是在村庄重建好之前，所有与未重建完成的村庄的公路均无法通车。换句话说，只有连接着两个重建完成的村庄的公路才能通车，只能到达重建完成的村庄。\r<br>　　给出B地区的村庄数N，村庄编号从0到N-1，和所有M条公路的长度，公路是双向的。并给出第i个村庄重建完成的时间t[i]，你可以认为是同时开始重建并在第t[i]天重建完成，并且在当天即可通车。若t[i]为0则说明地震未对此地区造成损坏，一开始就可以通车。之后有Q个询问(x, y, t)，对于每个询问你要回答在第t天，从村庄x到村庄y的最短路径长度为多少。如果无法找到从x村庄到y村庄的路径，经过若干个已重建完成的村庄，或者村庄x或村庄y在第t天仍未重建完成 ，则需要返回-1。\r<br></p> \n\n \n # 输入格式 \n<p>\n　　输入文件rebuild.in的第一行包含两个正整数N，M，表示了村庄的数目与公路的长度。\r<br>　　第二行包含N个非负整数t[0], t[1], …, t[N – 1]，表示了每个村庄重建完成的时间，数据保证了t[0] ≤ t[1] ≤ … ≤ t[N – 1]。\r<br>　　接下来M行，每行3个非负整数i, j, w，w为不超过10000的正整数，表示了有一条连接村庄i与村庄j的道路，长度为w，保证i≠j，且对于任意一对村庄只会存在一条道路。\r<br>　　接下来一行也就是M+3行包含一个正整数Q，表示Q个询问。\r<br>　　接下来Q行，每行3个非负整数x, y, t，询问在第t天，从村庄x到村庄y的最短路径长度为多少，数据保证了t是不下降的。\r<br>\r<br></p> \n\n \n # 输出格式 \n<p>\n　　输出文件rebuild.out包含Q行，对每一个询问(x, y, t)输出对应的答案，即在第t天，从村庄x到村庄y的最短路径长度为多少。如果在第t天无法找到从x村庄到y村庄的路径，经过若干个已重建完成的村庄，或者村庄x或村庄y在第t天仍未修复完成，则输出-1。\r<br>\r<br></p> \n\n \n # 提示 \n<p>\n【数据规模】\r<br>　　对于30%的数据，有N≤50；\r<br>　　对于30%的数据，有t[i] = 0，其中有20%的数据有t[i] = 0且N＞50；\r<br>　　对于50%的数据，有Q≤100；\r<br>　　对于100%的数据，有N≤200，M≤N*(N-1)/2，Q≤50000，所有输入数据涉及整数均不超过100000。\r<br>\r<br></p> "},{"title":"样例数据","format":"markdown","require":["katex"],"content":"<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>输入样例</td>\n\t\t<td>输出样例</td>\n\t</tr>\n<tr><td>4 5\r\n1 2 3 4\r\n0 2 1\r\n2 3 1\r\n3 1 2\r\n2 1 4\r\n0 3 5\r\n4\r\n2 0 2\r\n0 1 2\r\n0 1 3\r\n0 1 4\r\n\r\n\r\n</td><td>-1\r\n-1\r\n5\r\n4\r\n\r</td></tr></table>\n\n"}]}