{"title":"【清华集训2016】工厂","time_limit":0,"memory_limit":0,"url":"http://uoj.ac/problem/270","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n<p><strong>这是一道提交答案题</strong></p>\n<p>跳蚤国作为一个发展中国家，生产力始终比发达国家跳晚国差一大截，因此发展生产力一直是跳蚤国第一重要的事。</p>\n<p>近日，跳蚤国王在视察跳蚤国首都的X工厂时，发现这里的机器效率低下，而且污染严重，以至于跳蚤国首都几乎每天都是漫天雾霾……</p>\n<p>X工厂是用来检验各地运来的产品的质量的。在X工厂的每个车间中，有若干个节点。每个节点有一台机器，这台机器对产品进行一些处理后，将其送给下一个节点。</p>\n<p>跳蚤国王回忆起几个月前造计算机的经历，想到了一个绝佳的主意：使用高效、清洁的生物资源！于是在每个节点上，机器被换成了跳蚤。</p>\n<p>具体来说：</p>\n<ul><li>对于X工厂的每个车间，我们可以将所有节点从 $1$ 开始编号。</li>\n<li>对于每个产品，都有一个只由<strong>可见字符</strong>（即ASCII码在[32,126]区间内的字符）构成的字符串，作为其<strong>标识串</strong>。\n在一开始的时候，产品被送到了第 $1$ 个节点上，然后这些节点需要检查该产品的标识串，最终<strong>接受</strong>(Accept)或<strong>拒绝</strong>(Reject)该产品。</li>\n<li><p>对于不同的车间，需要接受的产品的标识串集合是不同的。</p>\n</li>\n<li><p>对于某个节点上的跳蚤，有<code>trans</code>和<code>next</code>两个属性。其中<code>trans</code>为一个大小为$128$的整数数组，<code>next</code>为一个整数。\n当一个产品被送到这个节点上时，该产品的标识串的<strong>第一个字符</strong>将被移除，设其ASCII码为$x$，\n则该产品在下一秒会被送到编号为<code>trans[x]</code>的节点上。\n如果该产品的标识串已经是空串，则该产品下一秒会被送到编号为<code>next</code>的节点上。</p>\n</li>\n</ul><p>蛐蛐国王对此表示十分支持，他派来了一些蛐蛐，来增加X工厂的处理能力。也就是说，一个节点上的跳蚤可以被替换成蛐蛐。</p>\n<ul><li>每只蛐蛐有<code>x</code>和<code>next</code>两个整数属性。其中<code>x</code>的范围是[0,127]。</li>\n<li>当一个产品被送到这个蛐蛐节点上时，该产品的标识串的<strong>最后</strong>会被添加一个ASCII码为<code>x</code>的字符，然后该产品下一秒会被送到编号为<code>next</code>的节点上。</li>\n</ul><p>另外，对于任意一只跳蚤的<code>trans</code>或<code>next</code>，以及对于任意一只蛐蛐的<code>next</code>，其值可以等于0或者-1，其中0表示下一秒接受该产品，-1表示下一秒拒绝该产品。</p>\n<p>由于跳蚤国资源的限制，一个车间最多能有300个节点。在处理一个产品的时候，最多只能花费 $10^6$ 秒的时间。</p>\n<p>跳蚤国王发现自己没有足够的能力来管理这么多跳蚤和蛐蛐，于是找到了参加清华集训的你。请你对X工厂的每个车间，确定需要使用的节点数 $n$，以及每个节点使用的跳蚤或蛐蛐的属性。每个车间作为一个任务，要求如下：</p>\n"},{"title":"# 任务1（5分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>以1结尾的01串</strong>作为标识串的产品。\n如&#34;111&#34;是以1结尾的01串，而&#34;110&#34;和&#34;233&#34;都不是。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 100$。</p>\n"},{"title":"# 任务2（13分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>包含子串</strong></p>\n<pre><code>aaaaaaaaaaaabaaaaaabaaaaaaaaaaaaaabaaabaaabaaaaaaaaaabaaaaaaaaabaabaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaorz</code></pre>\n<p><strong>的串</strong>作为标识串的产品。\n这个子串在该试题目录下的<code>task2_string.txt</code>中也存有一份。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 500000$。</p>\n"},{"title":"# 任务3（9分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>匹配的括号串</strong>作为标识串的产品。\n匹配的括号串可以这么定义：\n- 空串是匹配的括号串\n- 如果S是匹配的括号串，则(S)是匹配的括号串\n- 如果X和Y都是匹配的括号串，则XY是匹配的括号串</p>\n<p>如&#34;(())()&#34;是匹配的括号串，而&#34;(()&#34;不是。\n一个等价的上下文无关文法为：</p>\n<pre><code>S -&gt; SS | (S) | ε</code></pre>\n<p>保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 100$。</p>\n"},{"title":"# 任务4（12分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>匹配的括号串</strong>作为标识串的产品。\n匹配的括号串的定义同任务3。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 900000$。</p>\n"},{"title":"# 任务5（6分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>从左到右看作为二进制数为3的倍数的01串</strong>作为标识串的产品。\n如 $(10010)_2 = (18)_{10}$，所以一个标识串为&#34;10010&#34;的产品是可以接受的。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 100$。</p>\n"},{"title":"# 任务6（15分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>fib串</strong>作为标识串的产品。\nfib串可以这么定义：\n- 我们记<code>f[1] = &#34;a&#34;</code>，<code>f[2] = &#34;b&#34;</code>\n- 对于$i &gt; 2$，我们定义<code>f[i] = f[i - 1] + f[i - 2]</code>，其中<code>+</code>表示字符串的连接\n- 如<code>f[3] = &#34;ba&#34;</code>，<code>f[4] = &#34;bab&#34;</code>\n- 那么，一个串 $s$ 是fib串，当且仅当存在一个正整数 $i$ ，使得 $s$ 等于<code>f[i]</code></p>\n<p>如&#34;bab&#34;是一个fib串，而&#34;baa&#34;不是。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 400$。</p>\n"},{"title":"# 任务7（8分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>fib串</strong>作为标识串的产品。\nfib串的定义同任务6。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 200000$。</p>\n"},{"title":"# 任务8（14分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>表达式</strong>作为标识串的产品。\n表达式可以这么定义：\n- 先引入另外一个定义：<strong>项</strong>\n- 任何一个项都是一个表达式\n- &#34;0&#34;和&#34;1&#34;是项\n- 如果X是一个表达式，则(X)是一个项\n- 如果X和Y都是项，则X*Y是项\n- 如果X和Y都是表达式，则X+Y是表达式</p>\n<p>如&#34;(1+0)*1+0+(1)&#34;是一个表达式，而&#34;(1+1&#34;不是。\n一个等价的上下文无关文法为：</p>\n<pre><code>S -&gt; S + T | T\nT -&gt; T * F | F\nF -&gt; 0 | 1 | (S)</code></pre>\n<p>保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 1000$。</p>\n"},{"title":"# 任务9（7分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>表达式</strong>作为标识串的产品。\n表达式的定义同任务8。\n保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 100000$。</p>\n"},{"title":"# 任务10（11分）","format":"html","require":["katex"],"content":"\n\n<p>接受所有<strong>跳蚤语言的串</strong>作为标识串的产品。\n- 跳蚤语言为一种只有语句和控制结构的语言。\n- 为方便起见，跳蚤语言只由三种字符构成：&#39;i&#39;、&#39;e&#39;和&#39;a&#39;。\n- 其中&#39;a&#39;表示语句，&#39;i&#39;表示if，&#39;e&#39;表示else。\n- 一个跳蚤语言的串，可以是一个语句，或一个控制结构。\n- 语句即为&#34;a&#34;，控制结构为&#34;iAeB&#34;，或者是&#34;iA&#34;，其中A可以是语句或控制结构，B也可以是语句或控制结构。\n- 对于一个&#39;e&#39;，它总是会跟最近的一个&#39;i&#39;进行匹配。</p>\n<p>如&#34;iiaea&#34;是一个跳蚤语言的串，因为它的后缀&#34;iaea&#34;作为一个控制结构整体，跟第一个&#34;i&#34;构成了一个&#34;iA&#34;型的控制结构。\n如&#34;iaeaea&#34;就不是一个跳蚤语言的串，因为它最后一个&#34;ea&#34;找不到跟它匹配的&#34;i&#34;了。\n如&#34;iiaeaea&#34;是一个跳蚤语言的串，并且第一个&#34;ea&#34;跟第二个&#34;i&#34;相匹配，第二个&#34;ea&#34;跟第一个&#34;i&#34;相匹配。</p>\n<p>一个等价的上下文无关文法为：</p>\n<pre><code>S -&gt; iSeS | iS | a\n其中e跟最近的i相匹配，即iSeS的优先级比iS要高。</code></pre>\n<p>保证每个产品中，标识串的长度 $L$ 满足 $1 \\le L \\le 100$。</p>\n"},{"title":"# 输入格式","format":"html","require":["katex"],"content":"\n\n<p>所有输入数据 factory1.in ~ factory10.in 分别对应10个任务。\n每组输入数据仅包含一个整数，表示需要解决的任务编号。</p>\n"},{"title":"# 输出格式","format":"html","require":["katex"],"content":"\n\n<p>输出文件为 1.out ~ 10.out，分别对应相应的输入文件。\n对于每组输入数据，你需要输出你使用的各个节点。\n具体来说，第一行输出一个整数$n$，表示你使用了编号为$1 \\sim n$的节点。\n接下来$n$行，按编号从小到大的顺序每行描述一个节点。\n首先输出一个整数表示该节点的类型，其中跳蚤为1，蛐蛐为2。\n对于跳蚤节点，先输出128个整数表示<code>trans[0]</code> ~ <code>trans[127]</code>，再输出一个整数<code>next</code>。\n对于蛐蛐节点，输出两个整数<code>x</code>和<code>next</code>。\n要求<code>trans[i]</code>和<code>next</code>都在[-1,$n$]范围内，其中-1和0的意义见题目描述。\n要求<code>x</code>在[0,127]范围内。\n同一行中相邻两个整数用一个空格隔开。</p>\n<p><strong>在输出文件的最后，你可以添加任意内容，这不会影响你的得分。</strong>\n我们建议你在此处写一些有意义的内容（如该任务的构造方法），以便于我们在考后进行统计分析。</p>\n"},{"title":"# 评分方式","format":"html","require":["katex"],"content":"\n\n<p><strong>这道题没有部分分</strong>。</p>\n<p>我们提供了10个评分文件factory1.ans ~ factory10.ans，分别对应每个任务。</p>\n<p>在每个评分文件中，第一行是一个整数$m$，表示有$m$组测试数据。接下来$2m$行，每两行表示一组测试数据，其中第一行为一个字符串，表示该测试数据的标识串，第二行一个字符串，为<code>&#34;Accept&#34;</code>（接受）或<code>&#34;Reject&#34;</code>（拒绝），表示该测试数据的答案。</p>\n<p>本题中，我们对每个任务单独评分，每个任务的分值见题目描述。</p>\n<p>如果你的输出格式不合法或者参数不符合题目约定，则得0分。</p>\n<p>否则，按照以下规则来评分：\n- 首先测评器会从相应的评分文件中读取该任务的测试数据，并将每组数据代入你的输出。\n- 如果在代入某一组数据时，你处理该产品的时间超过了$10^6$秒，则得0分。\n- 如果在代入某一组数据时，你的输出与相应的答案不一样，则得0分。\n- 否则该任务得满分。</p>\n"},{"title":"# 如何测试你的输出","format":"html","require":["katex"],"content":"\n\n<p>在终端中先切换到该试题的目录下：（windows用户请使用cmd）</p>\n<pre><code>cd factory</code></pre>\n<p>我们提供checker这个工具来测试你的输出文件是否是可接受的。使用这个工具的方法是，先编译<code>checker.cpp</code>，假设编译后的文件名为<code>checker</code>，则在终端中运行</p>\n<pre><code>./checker &lt;task_id&gt;</code></pre>\n<p>其中<code>task_id</code>为任务的编号，例如</p>\n<pre><code>./checker 3</code></pre>\n<p>将测试3.out是否可以接受。（windows用户请使用<code>checker 3</code>）\n在你调用这个程序之后，checker会根据你给出的输出文件给出测试结果。\n另外，你可以直接不加参数运行checker，来测试这道题的所有输出文件。</p>\n<p>我们还提供了一些其他的小工具，如用来运行/调试你的输出文件的工具，详细说明见该试题目录下的readme.txt。</p>\n<p><strong>注意：最终评测时，使用的评分文件factory1.ans ~ factory10.ans可能跟下发的不同。使用下发的评分文件测试的得分仅供参考。</strong></p>\n"},{"title":"# 下载","format":"html","require":["katex"],"content":"\n\n<p><a href=\"/download.php?type=problem&amp;id=270\">相关文件下载</a></p>\n\n"}]}