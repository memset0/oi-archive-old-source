{"title":"【NOI2013】树的计数","time_limit":1000,"memory_limit":256,"url":"http://uoj.ac/problem/122","statement":[{"title":"# 题目描述","format":"html","require":["katex"],"content":"\n<p>我们知道一棵有根树可以进行深度优先遍历（DFS）以及广度优先遍历（BFS）来生成这棵树的 DFS 序以及 BFS 序。两棵不同的树的 DFS 序有可能相同，并且它们的 BFS 序也有可能相同，例如下面两棵树的 DFS 序都是 1 2 4 5 3，BFS 序都是 1 2 3 4 5。</p>\n<p><img src=\"//img.uoj.ac/problem/122/1.png\" alt=\"两棵树\" class=\"img-responsive center-block\"/></p>\n<p>现给定一个 DFS 序和 BFS 序，我们想要知道，符合条件的有根树中，树的高度的平均值。即，假如共有 $K$ 棵不同的有根树具有这组 DFS 序和 BFS 序，且他们的高度分别是 $h_1,h_2, \\dots ,h_K$，那么请你输出：</p>\n<p>\\begin{equation}\n\\frac{h_1 + h_2 + \\dots + h_K}{K}\n\\end{equation}</p>\n"},{"title":"# 输入格式","format":"html","require":["katex"],"content":"\n\n<p>第一行包含 $1$ 个正整数 $n$，表示树的节点个数。 </p>\n<p>第二行包含 $n$ 个正整数，是一个 $1 \\sim n$ 的排列，表示树的 DFS 序。</p>\n<p>第三行包含 $n$ 个正整数，是一个 $1 \\sim n$ 的排列，表示树的 BFS 序。 </p>\n<p>输入保证至少存在一棵树符合给定的两个序列。</p>\n"},{"title":"# 输出格式","format":"html","require":["katex"],"content":"\n\n<p>仅包含 $1$ 个实数，四舍五入保留恰好三位小数，表示树高的平均值。</p>\n"},{"title":"# 样例一","format":"html","require":["katex"],"content":"\n\n<h4>input</h4>\n<pre>5 \n1 2 4 5 3 \n1 2 3 4 5\n\n</pre>\n\n<h4>output</h4>\n<pre>3.500\n\n</pre>\n\n"},{"title":"# 限制与约定","format":"html","require":["katex"],"content":"\n\n<p>如果输出文件的答案与标准输出的差不超过 $10^{-3}$，则将获得该测试点上的分数，否则不得分。</p>\n<p>20% 的测试数据，满足：$n \\leq 10$；</p>\n<p>40% 的测试数据，满足：$n \\leq 100$；</p>\n<p>85% 的测试数据，满足：$n \\leq 2000$；</p>\n<p>100% 的测试数据，满足：$2 \\leq n \\leq 200000$。</p>\n<p><strong>时间限制：</strong>$1\\texttt{s}$</p>\n<p><strong>空间限制：</strong>$256\\texttt{MB}$</p>\n"},{"title":"# 说明","format":"html","require":["katex"],"content":"\n\n<p>树的高度：一棵有根树如果只包含一个根节点，那么它的高度为 $1$。否则，它的高度为根节点的所有子树的高度的最大值加 $1$。</p>\n<p>对于树中任意的三个节点 $a, b, c$，如果 $a, b$ 都是 $c$ 的儿子，则 $a, b$ 在 BFS 序中和 DFS 序中的相对前后位置是一致的，即要么 $a$ 都在 $b$ 的前方，要么 $a$ 都在 $b$ 的后方。</p>\n"},{"title":"# 下载","format":"html","require":["katex"],"content":"\n\n<p><a href=\"/download.php?type=problem&amp;id=122\">样例数据下载</a></p>\n\n"}]}