{"title":"qh与复读机III","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/qhyu-fu-du-ji-iii/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nqh今天想杀一批复读机。\n\nqh把最近几天的聊天记录扒了出来，用一种神奇的编码方式将聊天记录转换成了由小写字母组成的字符串。\n\nqh从记忆中挑选了一条经常被复读的语录，如orzqhqh，他想知道这条语录被哪些复读机复读了。\n\nqh不想知道精确的复读位置，所以你只需要输出这条语录在聊天记录中的所有出现位置，而不用担心不同的出现位置相互重叠。如orzqhqhqh中出现了两次qhqh，位置分别为4和6。\n\n检查聊天记录非常耗时，于是qh把这件事丢给了后缀复读机。\n\n后缀复读机有一万个ddl要赶，没时间看聊天记录。\n\n你能帮后缀复读机解决检查聊天记录的问题吗？\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\n第一行有一个仅由小写字母组成的字符串$S$，代表聊天记录。\n\n第二行有一条仅由小写字母组成的语录$T$。\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\n输出$T$在$S$中的所有出现位置。\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>aaabcaabcaabaabcaabaabcaab\naabcaabaabcaa</td><td>6 13 </td></tr></table>\n\n"},{"title":"Constraints","format":"markdown","require":["katex"],"content":"\n$1\\leq |S|,|T| \\leq 10^6$\n"}]}