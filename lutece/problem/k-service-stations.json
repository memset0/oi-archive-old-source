{"title":"K Service Stations","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/k-service-stations/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nThere is a rectangular city with $N$ rows and $M$ columns, and every grid has some people living there. Now Alibaba wants to choose some grids to build $K$ service stations. The best way to build service stations is to make the largest distance among all distances between a grid and its nearest service station as short as possible. The distance between two grids $(x\\_1, y\\_1)$ and $(x\\_2, y\\_2)$ is $\\max(|x\\_1-x\\_2|, |y\\_1-y\\_2|)$, where $|x|$ is the absolute value of $x$. Now itâ€™s you work to build service stations optimally.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of input contains an integer $T$ ($T\\leq 1000$), which is the number of data sets that follow.\n\nEvery test case consists of three integers $N$, $M$, $K$, which are specified before.\n$1\\leq N, M, K\\leq 1000000000$.\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor every test case, you should output `Case #k: ` first, where $k$ indicates the case number and starts at $1$. Then output the largest distance among all distances between a grid and its nearest police station while you build police stations optimally.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>3\n1 1 1\n2 2 1\n3 3 1</td><td>Case #1: 0\nCase #2: 1\nCase #3: 1</td></tr></table>\n\n"}]}