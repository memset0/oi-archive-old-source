{"title":"Hash Perfectly","time_limit":1500,"memory_limit":256,"url":"https://acm.uestc.edu.cn/problem/hash-perfectly/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nIn computing, a hash table is a data structure used to implement an associative array, a structure that can map keys to values.\n\nA hash table uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. A common hash function is $index=key\\ \\%\\ array\\\\_size$ ($\\%$ is modulo operator), but it may cause some collisions.\n\nFor example, if keys are $1,2,6,10$, and we choose $array\\\\_size=4$, the indexes will be $1,2,2,2$, where some collisions happen.\n\nTo solve the collision, we can use the method known as separate chaining with linked lists.\n\nSeeing the example again, when we try to insert $6$, because its index $2$ is used, we build a linked list in index $2$, and there would be $2\\rightarrow 6$ in index $2$. Insert $10$ next, there would be a linked list $2\\rightarrow 6\\rightarrow 10$ in index 2.\n\n<center>![title](/source/lutece/hash-perfectly/img/aHR0cHM6Ly9hY20udWVzdGMuZWR1LmNuL21lZGlhL2ltYWdlL3Byb2JsZW0vMTMxNC8yMDE2MDQwMjEwNTI0NDI4OTcuUE5H.PNG)</center>\n\nTo calculate the efficiency of the hash function, we define a value called $ASL$ (Average search length):\n$$ASL=\\frac{1}{n}\\sum_{i=1}^{n}c_i$$\n$c_i$ is the number of times to compare when we search the $i^{th}$ key.\n\nUsing the example above again, $c_1=1,c_2=1,c_3=2,c_4=3$, so $ASL=\\frac{1}{4}(1+1+2+3)=1.75$.\n\nIt's obvious that $ASL$ can minimize when we choose a sufficiently large $array\\\\_size$, but in fact due to the limitation of memory, $array\\\\_size$ must be no more than $limit$, i.e., $1\\leq array\\\\_size\\leq limit$.\n\nNow you are given n keys, try to choose a proper $array\\\\_size$ to minimize $ASL$. If there are multiple answers, choose the smallest one.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line contains two integers $n$ and $limit$.\n\nThe second line contains $n$ integers, where $i^{th}$ integer indicates the $i^{th}$ key.\n\n$1\\leq n, limit, key\\leq 2*10^5$\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nPrint the smallest $array\\\\_size$ which can minimize $ASL$.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>4 4\n1 2 6 10</td><td>3</td></tr></table>\n\n"},{"title":"# Note","format":"markdown","require":["katex"],"content":"\nIn sample,\n\nif $array\\\\_size=4$, the indexes will be $1,2,2,2$, so $ASL=\\frac{1}{4}(1+1+2+3)=1.75$;\n\nif $array\\\\_size=3$, the indexes will be $1,2,0,1$, so $ASL=\\frac{1}{4}(1+1+1+2)=1.25$;\n\nif $array\\\\_size=2$, the indexes will be $1,0,0,0$, so $ASL=\\frac{1}{4}(1+1+2+3)=1.75$;\n\nif $array\\\\_size=1$, the indexes will be $0,0,0,0$, so $ASL=\\frac{1}{4}(1+2+3+4)=2.50$;\n\nSo the answer is $3$.\n"}]}