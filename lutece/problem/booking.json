{"title":"Booking","time_limit":5000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/booking/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nPierre is in great trouble today! He is responsible for managing the bookings for the ACM (Accomodation with Moderate Costs) hotel and has just realized that the booking software has a severe \nbug. It has created overlapping and wrong room assignments. Pierre is now worried that the hotel\nmight be overbooked. Since the software manufacturer is neither very responsive nor competent, he\nmust check this himself, so that he can timely take countermeasures if necessary.\n\nFortunately, Pierre was able to export all original bookings (including reservation codes plus correct\nand valid dates of arrival and departure). The only information that got lost is the time of the booking\nplacements, so that Pierre cannot retrieve any booking priorities (e.g., first-come-first-serve). Using\nthe available information, could you please help Pierre out and tell him a room assignment with the\nminimum number of rooms that satisfies all bookings? Please be aware that a room must always be\ncleaned before reuse. Since Pierre does not want to take any risks, he tells you to only consider the\nmaximum cleaning time.\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\nThe input consists of several lines. The first line contains $1\\leq T\\leq 100$, the number of test cases.\nEach test case starts with a line containing two integers $1\\leq B\\leq 5000$, the number of bookings, and \n$0\\leq C\\leq 360$, the cleaning time (in minutes) for one room.\nThen follow $B$ lines, each containing the reservation code (a random alphanumeric string of up $20$\ncharacters) and the dates of arrival and departure of one booking. Dates are given as strings in the\nformat `YYYY-MM-DD HH:MM` (see example test case), where reservations are only for the years\n$2013$ until $2016$.\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\nFor each test case, print the minimum number of needed rooms on a single line without any additional\nblanks. Be aware of leap years but ignore daylight saving time.\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>4\n2 120\n1 2013-07-01 15:59 2013-07-08 16:30\n2 2013-07-08 17:30 2013-07-15 12:00\n3 60\n65 2013-07-08 14:30 2013-07-08 16:00\n32 2013-07-01 16:00 2013-07-15 12:00\n91 2013-07-01 16:00 2013-07-08 15:00\n2 360\na7 2016-02-21 14:00 2016-02-28 21:00\nxx 2016-03-01 01:00 2016-03-02 12:57\n2 60\na9 2016-02-21 14:00 2016-02-28 11:00\na8 2016-02-28 12:00 2016-03-11 21:00</td><td>2\n3\n1\n1</td></tr></table>\n\n"}]}