{"title":"Ferris Wheel String","time_limit":1000,"memory_limit":42,"url":"https://acm.uestc.edu.cn/problem/ferris-wheel-string/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\n![title](/source/lutece/ferris-wheel-string/img/aHR0cHM6Ly9hY20udWVzdGMuZWR1LmNuL21lZGlhL2ltYWdlL3Byb2JsZW0vMTA2Mi8yMDE1MDQwOTE4MjAzMDQzODguanBn.jpg)\n\nHave you ever been to London? \n\nOur Master Qiu will tell you how amazing in London and how funny a Ferris Wheel String is.\n\nOne day, while our Master Qiu was recovering Great Britain, he was thinking about an interesting problem about string. In front of him, a London Ferris Wheel was revolving. There were some seats on the large Ferris Wheel. However, in Master Qiu's mind, each seat was a lower-case letter so that the Ferris Wheel was a beautiful string that was revolving all the time. Let's call it `Ferris Wheel String`.\n\n#####In the revolving operation, you can put several front letters to the last of the string. Of course, you can also put all the letters to the last, so you will get the string itself. For example, you can change string `abcd` into 4 strings, such as `bcda`, `cdab`, `dabc`, `abcd`. Obviously, in the revolving operation, a string of length $n$ can be changed into $n$ strings.\n\nMaster Qiu found out an interesting phenomenon that the Ferris Wheel String spent exactly one second revolving one letter. For example, at the beginning（0 second），the Ferris Wheel String was abcd，after one second，it became bcda ... and after four seconds, it became abcd.\n\n#####Master Qiu is a Romantic guy. He thought after exactly $K$ second(s), the Ferris Wheel String became extremely beautiful.\n\nNow, he would like to ask you a question: \n\n#####After exactly $K$ second(s), among the $n$ strings obtained by revolving a string of length $n$, how many `distinct` strings are lexicographically smaller than the beautiful string, how many `distinct` strings are lexicographically equal to the beautiful string and how many `distinct` strings are lexicographically bigger than the beautiful string ?\n\n（If you really can not understand Master Qiu's mind, see examples and Hint）\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line contains a string of length $n（1 \\leq n \\leq 2 \\cdot 10^5）$ and the second line contains an integer $k（1 \\leq k \\leq n）$. \n\nThe string only contains lower-case letters.\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nOutput three integers separated by two spaces that are your answer to Master Qiu. Do not output anything after the last integer.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>abcabc\n1</td><td>1 1 1</td></tr><tr><td>aaaaaaa\n3</td><td>0 1 0</td></tr><tr><td>himverihimverihimveri\n18</td><td>0 1 6</td></tr><tr><td>lvhqsjtdgckrznjsbargcojiyuf\n19</td><td>7 1 19</td></tr><tr><td>abbabaabbaababbabaababbaabbaba\n29</td><td>3 1 26</td></tr></table>\n\n"},{"title":"# Note","format":"markdown","require":["katex"],"content":"\n#####Let's define that `<` means lexicographically smaller，`>` means lexicographically bigger and `=` means lexicographically equal.\n\n#####Also, `ans1` means the number of strings < bcabca，`ans2` means the number of strings = bcabca and `ans3` means the number of strings > bacabca.\n\n#####Explain for lexicography :\n>#####Let's only consider lexicographical order between two strings when $|S|=|T|$.\n>##### If $S<T$, there exits a position $p\\ (0 \\leq p < |S|)$ satisfying that $S_i=T_i$ when $0 \\leq i < p$ but $S_p<T_p$.\n>##### If $S>T$, there exits a position $p\\ (0 \\leq p < |S|)$ satisfying that $S_i=T_i$ when $0 \\leq i < p$ but $S_p>T_p$.\n>##### If $S=T$, then $S_i=T_i$ for all $i\\ (0 \\leq i <|S|)$\n>##### And we all know that $a<b<c<$ $\\cdots$ $<x<y<z$.\n\n\n#####Explain for the first example :\n>#####The Ferris Wheel String is abcabc and $K=1$ , so that the beautiful string is bcabca\n>#####After 1 second, it becomes cabcab, cabcab>bcabca；ans3+=1；\n>#####After 2 seconds, it becomes abcabc, abcabc<bcabca；ans1+=1；\n>#####After 3 seconds, it becomes bcabca, bcabca=bcabca；ans2+=1;\n>#####After 4 seconds, it becomes cabcab. But it has appeared. So, do not count it.\n>#####After 5 seconds, it becomes abcabc. But it has appeared. So, do not count it.\n>#####After 6 seconds, it becomes bcabca. But it has appeared. So, do not count it.\n>#####Therefore, ans1=1, ans2=1 and ans3=1.\n\n`Use double hash rather than single hash if you wanna hash.`\n"}]}