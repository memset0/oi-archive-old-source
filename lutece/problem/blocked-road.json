{"title":"Blocked Road","time_limit":3000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/blocked-road/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nThere are $N$ seaside villages on X island, numbered from $1$ to $N$. $N$ roads are built to connect all of them, which are also numbered from $1$ to $N$, and the road with number $i$ connects the village $i$ and $i$ % $N + 1$. Sometimes, for some reasons, some roads are blocked, so some villages are not connected anymore. Now, you are assigned to write a program to offer dynamic information about the connectivity.\n\nAt first, all roads are not blocked. The input will tell you the road with number $i$ are blocked or unblocked, or ask you if village $i$ and $j$ are connected. Here two villages are connected means we can reach another village from one via some unblocked road. BTW, all the roads are bidirectional.\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of the input contains one integer $T$, which indicate the number of test cases. The very first line of each case contains two integers, $N$ and $M$. $N$ (where $2\\leq N\\leq 100000$) is the total number of the villages, $M$ (where $1\\leq M\\leq 100000$) is the number of queries. The next $M$ lines each describe one query. For each line, the first integer ($0$ or $1$) indicates the type of the query. If the first integer is $0$, there will be another integer $i$ followed, if the road $i$ is blocked at present, it will be unblocked, and vice versa. If the query type is $1$, there will be two more integers $i$ and $j$ followed, if the village $i$ and $j$ are connected at present, the answer is $1$, otherwise it shall be $0$.\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\nFor each query of type $1$, output its answer in a single line\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>1\n5 10\n1 2 5\n0 4\n1 4 5\n0 2\n1 3 4\n1 1 3\n0 1\n0 2\n1 2 4\n1 2 5</td><td>1\n1\n1\n0\n1\n0</td></tr></table>\n\n"}]}