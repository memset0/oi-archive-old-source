{"title":"Just a simple problem again","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/just-a-simple-problem-again/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nSuffix number i of a string $S$ is the suffix that starts with the character $S\\_i$. For example, for $S=$`abcde` suffix $0$ is `abcde` and suffix $3$ is `de`. \n\nThe suffix array of a string $S$ is defined as the permutation of suffix numbers that corresponds to their lexicographic order. For example, suppose that $S=$`abca`. If we order all suffixes of $S$ lexicographically, we get the following: `a` < `abca` < `bca` < `ca`. The corresponding suffix numbers are $3$, $0$, $1$, and $2$, in this order. Thus, for this string S the suffix array would be ${3, 0, 1, 2}$. Note that the length of a suffix array is the same as the length of the original string. \n\nNow Alice is given an array $A$: the suffix array of an unknown string. She is wondering how many possible strings satisfying this array if the size of charset is $m$. \n\nAs is known to everyone of you, Bob loves Alice very much. Could you tell Bob the answer to help Bob leave a good impression on Alice.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line contains $2$ integers $n$ and $m$, indicating the length of the suffix array and the size of charset.\n\nThe next line contains $n$ integers $A\\_i$, indicating the element in the suffix array.\n\nIt is guaranteed that the suffix array is a permutation of $[0, n - 1]$, and $1 \\leq n, m \\leq 2000000$\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nPrint the answer module 1000000007 in one line.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>3 2\n0 2 1</td><td>1</td></tr></table>\n\n"}]}