{"title":"God Only Knows!","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/god-only-knows/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nZplinti1 is given a big and long string $S$, together with a list of strings that are viruses. He wants to find the number of substrings of $S$, so that it does not contain any viruses. **Same substrings with different starting positions are regarded as different!**\n\nZplinti1 finds this problem difficult enough, he thinks `Only God Can Solve This Problem`, but you donâ€™t think so, right?\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of input contains a number $T$, indicating the number of cases. ($T\\leq 30$)\nFor each case, the first line is a string $S$, with length no more than $1,000,000$. The second line is a number $n$, which is the number of virus strings. Then $n$ lines comes, each with a string. \n\nAll the strings contains lowercase letters from `a` to `z` only. The total length of all virus strings in one case will be no more than $100,000$.\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\nFor each case, output `Case #i: ` first. ($i$ is the number of the test case, from $1$ to $T$). Then output the number of substrings of $S$ that do not contain any virus.\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>3\naabc\n0\naabbaa\n1\na\nabcdefg\n2\nbcd\nef</td><td>Case #1: 10\nCase #2: 3\nCase #3: 14</td></tr></table>\n\n"},{"title":"Note","format":"markdown","require":["katex"],"content":"\nA substring of a string $S$ is a continuous string taken from $S$. For example if we take out the letters from the $L_{th}$ to the $R_{th}$ of the string, then the substring will be ($S_L, S_{L+1}\\cdots S_R$). \n\nThe original string is a substring of itself.\n\nWhen we say string $A$ `contains` string $B$, it means that $B$ is a substring of $A$.\n"}]}