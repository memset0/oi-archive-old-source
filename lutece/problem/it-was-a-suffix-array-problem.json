{"title":"It was a Suffix-Array problem!","time_limit":10000,"memory_limit":256,"url":"https://acm.uestc.edu.cn/problem/it-was-a-suffix-array-problem/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nPeter has ever thought about a difficult string problem and he actually did consider nobody can solve it. Could you?\n\nGiven a string $S$ and two type of questions. \n1. Given another string $subS$, decide whether or not $subS$ is a sub-string of $S$, if so, tell me the lexicographic rank of $subS$ among all the distinct sub-strings of $S$.\n2. There are $M$ sub-questions following. In each sub-question, given an integer $k$, tell me a sub-string of $S$ whose lexicographic rank is exactly $k$.  You are allowed to just tell me the starting position of that sub-string and the length of it. If more than two sub-strings rank $k$, output the one who has the smallest starting position.\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\nThere are $T$ cases $(1=<T<=5)$ on each test. The first line contains an integer $T$.\n\nIn each case, obey the following rules.\n\nThe first line contains a string $S$ and the second line contains a string $subS$. Both of their length are in the range $[1,2 \\times 10^5]$. \n\nNext line contains an integer $M$ $(M\\in [0,2 \\times 10^5])$, representing the number sub-questions of in question 2.\n\nEach of the following M lines contains one integer $k$, meaning the lexicographic rank of the destination substring of $S$.\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\nIn each case, obey the following rules.\n\nThe first line should contain an integer $k$, representing the lexicographic rank of $subS$ among all the distinct sub-strings of $S$ if $subS$ is a sub-string of $S$, otherwise, output -1.\n\nOutput M lines. Each of line should contain two integer $P$ and $L$, meaning the starting position of the destination sub-string and the length of it. It is guaranteed that you can always find out the sub-string.  If more than two sub-strings are found, output the one who has the smallest starting position.\n\nDo not output anything between two cases or after the last case.\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>1\nabcabc\nbc\n5\n1\n2\n3\n4\n5</td><td>8\n0 1\n0 2\n0 3\n0 4\n0 5</td></tr><tr><td>1\nababababab\naba\n5\n1\n2\n3\n4\n5</td><td>3\n0 1\n0 2\n0 3\n0 4\n0 5</td></tr><tr><td>3\nlfancltrcm\nlfa\n5\n14\n4\n21\n20\n14\nwftvgaipre\nwftvgaipre\n5\n41\n1\n50\n25\n36\nabjsdeaaxe\ngod\n5\n21\n37\n24\n18\n6</td><td>27\n4 6\n2 4\n1 6\n1 5\n4 6\n55\n3 3\n5 1\n0 5\n6 4\n2 6\n-1\n1 6\n2 2\n1 9\n1 3\n0 3</td></tr></table>\n\n"},{"title":"Note","format":"markdown","require":["katex"],"content":"\nLet us consider the first sample.\n\nWe can make a lexicographic order graph of all the distinct sub-strings of \"abcabc\".\n\n1. a\n2. ab\n3. abc\n4. abca\n5. abcab\n6. abcabc\n7. b\n8. bc\n9. bca\n10. bcab\n11. bcabc\n12. c\n13. ca\n14. cab\n15. cabc\n\nTherefore, the lexicographic rank of string \"bc\" is 8.\n\nString \"a\" ranks 1, but there are two \"a\" in \"abcabc\". The smallest starting position is 0.\n"}]}