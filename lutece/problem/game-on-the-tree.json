{"title":"Game On the Tree","time_limit":3000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/game-on-the-tree/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nGiven a tree, a connected graph that contains $N$ vertices and $N-1$ edges, you should control a virtual miner to get maximum values by walking from a vertex A and stopping at a vertex B.\n\nOn a tree, as we know, there is only one road between every two vertices. Here, you are allowed to choose a vertex A (the value of A can not be 0) and a vertex B by yourself. Walking from A and stopping at B, you must collect all the values on the road. Each vertex has a value. Try to get values as large as you can. Remember that the miner you controlled, can never go back to any vertex he has passed.\n\nHowever, there is a special way to calculate total values. Letâ€™s assume that the miner has passed $M$ vertices from A to B. During the travel, the miner has successively collected $M$ values worths $Wi$ $(0 \\leq i < M)$. Vertex A has a value worth $Wi$ $(i = M - 1)$. The next vertex on the road has a value worth $Wi$ $(i = M - 2)$ ...... At last, vertex B has a value worth $Wi$ $(i = 0)$. The special rule gives you an integer $P$. The total value you collect is calculated by the formula $MAX = \\sum_{i = 0}^{m-1}(W_i \\times P^i)$.\n\nIt is guaranteed that $Wi$ $(0 \\leq i < M)$ are less than $P$. The vertex A and B you choose can be same. But the value of A can not be 0. Output $MAX$ module $(10^9 + 7)$. Note that you need to make sure $MAX$ as large as possible but $NOT$ make sure the remainder as large as possible. And then, output value of each vertex (stating from vertex A) on the road in the best case.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line contains an integer $T (1 \\leq T \\leq 200)$, indicating the number of test cases.\n\nFor each case, The first and second line contain two integers $N$ $( 1 \\leq N \\leq 10^4 )$ and $P$ $( 2 \\leq P \\leq 10^9)$, indicating the number of vertices and the integer $P$.\n\nEach of the following $N-1$ lines contains two integers $a$ and $b$ $(1 \\leq a, b \\leq N, a \\neq b)$, indicating that there is an edge connecting vertex $a$ and vertex $b$.\n\nThe following line contains $N$ integers $Wi$ $( 0 \\leq Wi < P, \\sum Wi > 0)$, the value of each vertex. It is guaranteed that at least one of $Wi$ not equal 0.\n\nYou can assume that sum of $N$ does not exceed $1.3 \\times 10^6$.\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor each case, the first line outputs \"Case #$T$: $MAX$\"(without quotes). Here, $T$ is the index of test case (starting from 1) and $MAX$ is the maximum value the miner can collect module $(10^9 + 7)$.\n\nThe second line outputs the value of each vertex from vertex A to vertex B.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>2\n\n8\n2\n1 2\n2 3\n3 4\n4 5\n2 6\n6 7\n7 8\n1 0 0 0 0 0 0 0\n\n9\n1000000000\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n1 8\n8 9\n1 2 0 2 0 2 0 2 0</td><td>Case #1: 16\n1 0 0 0 0\nCase #2: 999999356\n2 1 2 0</td></tr></table>\n\n"}]}