{"title":"Infected Land","time_limit":3000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/infected-land-1/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nThe earth is under an attack of a deadly virus. Luckily, prompt actions of the Ministry of Health against this emergency successfully confined the spread of the infection within a square grid of areas. Recently, public health specialists found an interesting pattern with regard to the transition of infected areas. At each step in time, every area in the grid changes its infection state according to infection states of its directly (horizontally, vertically, and diagonally) adjacent areas.\n\n  * An infected area continues to be infected if it has two or three adjacent infected areas.\n  * An uninfected area becomes infected if it has exactly three adjacent infected areas.\n  * An area becomes free of the virus, otherwise.\n\nYour mission is to fight against the virus and disinfect all the areas. The Ministry of Health lets an anti-virus vehicle prototype under your command. The functionality of the vehicle is summarized as follows.\n\nAt the beginning of each time step, you move the vehicle to one of the eight adjacent areas. The vehicle is not allowed to move to an infected area (to protect its operators from the virus). It is not allowed to stay in the same area.\n\nFollowing vehicle motion, all the areas, except for the area where the vehicle is in, change their infection states according to the transition rules described above.\n\nSpecial functionality of the vehicle protects its area from virus infection even if the area is adjacent to exactly three infected areas. Unfortunately, this virus-protection capability of the vehicle does not last. Once the vehicle leaves the area, depending on the infection states of the adjacent areas, the area can be infected.\n\nThe area where the vehicle is in, which is uninfected, has the same effect to its adjacent areas as an infected area as far as the transition rules are concerned.\nThe following series of figures illustrate a sample scenario that successfully achieves the goal.\n\nInitially, your vehicle denoted by `@` is found at $(1, 5)$ in a $5 × 5$-grid of areas, and you see some infected areas which are denoted by `#`'s.\n\n![Figure](/source/lutece/infected-land-1/img/aHR0cHM6Ly9hY20udWVzdGMuZWR1LmNuL21lZGlhL2ltYWdlL3Byb2JsZW0vMTA4OS8yMDE1MDQyNDIwMTQ1MjU2ODM3LmdpZg==.gif)\n\nFirstly, at the beginning of time step 1, you move your vehicle diagonally to the southwest, that is, to the area $(2, 4)$. Note that this vehicle motion was possible because this area was not infected at the start of time step 1.\n\nFollowing this vehicle motion, infection state of each area changes according to the transition rules. The column \"1-end\" of the figure illustrates the result of such changes at the end of time step 1. Note that the area $(3, 3)$ becomes infected because there were two adjacent infected areas and the vehicle was also in an adjacent area, three areas in total.\n\nIn time step 2, you move your vehicle to the west and position it at $(2, 3)$.\n\nThen infection states of other areas change. Note that even if your vehicle had exactly three infected adjacent areas (west, southwest, and south), the area that is being visited by the vehicle is not infected. The result of such changes at the end of time step 2 is as depicted in \"2-end\".\n\nFinally, in time step 3, you move your vehicle to the east. After the change of the infection states, you see that all the areas have become virus free! This completely disinfected situation is the goal. In the scenario we have seen, you have successfully disinfected all the areas in three time steps by commanding the vehicle to move (1) southwest, (2) west, and (3) east.\n\nYour mission is to find the length of the shortest sequence(s) of vehicle motion commands that can successfully disinfect all the areas.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe input is a sequence of datasets. The end of the input is indicated by a line containing a single zero. Each dataset is formatted as sample input.\n\nHere, $n$ is the size of the grid. That means that the grid is comprised of $n × n$ areas. You may assume $1 ≤ n ≤ 5$. The rest of the dataset consists of $n$ lines of n letters. Each letter aij specifies the state of the area at the beginning: `#` for infection, `.` for free of virus, and `@` for the initial location of the vehicle. The only character that can appear in a line is `#`, `.`, or `@`. Among `n × n` areas, there exists exactly\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor each dataset, output the minimum number of time steps that is required to disinfect all the areas. If there exists no motion command sequence that leads to complete disinfection, output$-1$. The output should not contain any other extra character.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>3\n...\n.@.\n...\n3\n.##\n.#.\n@##\n3\n##.\n#..\n@..\n5\n....@\n##...\n#....\n...#.\n##.##\n5\n#...#\n...#.\n#....\n...##\n..@..\n5\n#....\n.....\n.....\n.....\n..@..\n5\n#..#.\n#.#.#\n.#.#.\n....#\n.#@##\n5\n..##.\n..#..\n#....\n#....\n.#@..\n0</td><td>0\n10\n-1\n3\n2\n1\n6\n4</td></tr></table>\n\n"}]}