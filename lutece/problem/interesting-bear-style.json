{"title":"Interesting Bear-Style","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/interesting-bear-style/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nBearchild finishes his buildings! (You can see Problem C for more details, but believe me, it has no much help for solving this problem!) \n\nWatching from far away, bearchild finds his n buildings are built in a row. To his surprise,those n buildings all have different heights, from $1$ to $n$. Bearchild is very happy about that, and starts to think more. He wants to find some `Bear-Style` buildings.\n\nA building is `Bear-Style` when it has neighboring buildings at left and right, and is higher or lower than both of the neighbors.\nFor example, if there are $5$ buildings with heights `1 5 2 3 4`, then the second and the third buildings are `Bear-Style`, but the fourth building is not.\n\nBearchild is just a big silly bear, so he can only count out the number of `Bear-Style` buildings. But `Silly Bears Have Nice Ideas`, he thinks out a new question: if he can change those buildings’ positions arbitrarily for infinite times, how many of the results, including the original one, will have exactly $K$ `Bear-Style` buildings?\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of input contains a number $T$, indicating the number of test cases. ($T\\leq 10000$)\n\nFor each case, there are two integers $n$ and $K$, ($1\\leq n\\leq 1000$, and $K\\geq 0$)\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor each case, output `Case #i: ` first. ($i$ is the number of the test case, from $1$ to $T$). Then output the answer for bearchild’s question, mod $1000000007$\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>3\n3 1\n4 2\n5 4</td><td>Case #1: 4\nCase #2: 10\nCase #3: 0</td></tr></table>\n\n"}]}