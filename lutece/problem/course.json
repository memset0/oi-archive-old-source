{"title":"Course","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/course/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nThere is such a policy in Sichuan University that if you \nare not satisfied with the score of your course, you can\nstudy this course again to get a better score. If you do \nthis and get a higher score(than the highest score he got\nbefore), it can cover the original one. And we can say \nthis time you update the score of this course successfully.\n\nHere is one schoolmate's all the courses he has studied \nand scores he got (sorted by chronological order). So \ncould you tell me how many time he successfully update his\nscores of courses?\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first of input is an integer $T$ which stands for the \nnumber of test cases. For each test case the first line\nis an integer $N$ ($1\\leq N\\leq 100$) which stands for the number\nof courses he has studied.Then following $N$ lines, each line\ncontains a string (only contains letters and the length is\nno more than $30$, which stands for the course name) and an integer $S$\n($0\\leq S\\leq 100$, which stands for the score of the course),\nseparated by a space.\n\n**Remember: the best way is getting the best score in one time.\nStudy one course many times is not a recommended choice!**\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor each test case output the number of times he update successfully.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>2\n6\nCProgramming 70\nDataStructrue 80\nCProgramming 80\nCProgramming 60\nCProgramming 90\nDataStructrue 70\n2\nCompilerTheory 95\nNetwork 90</td><td>2\n0</td></tr></table>\n\n"}]}