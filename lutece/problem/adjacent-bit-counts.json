{"title":"Adjacent Bit Counts","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/adjacent-bit-counts/description","statement":[{"title":"Content","format":"markdown","require":["katex"],"content":"\nFor a string of n bits $x\\_1, x\\_2, x\\_3, \\cdots , x\\_n$, the adjacent bit count of the string $\\rm AdjBC(x)$ is given by\n\n$$x\\_1\\times x\\_2 + x\\_2\\times x\\_3 + x\\_3\\times x\\_4 + \\cdots + x\\_{n-1}\\times x\\_n$$\n\nwhich counts the number of times a $1$ bit is adjacent to another $1$ bit. For example:\n1. $\\rm AdjBC(011101101) = 3$\n2. $\\rm AdjBC(111101101) = 4$\n3. $\\rm AdjBC(010101010) = 0$\n\nWrite a program which takes as input integers $n$ and $k$ and returns the number of bit strings $x$ of $n$ bits (out of $2n$) that satisfy $\\rm AdjBC(x) = k$. For example, for $5$ bit strings, there are $6$ ways of getting $\\rm AdjBC(x) = 2$: `11100`, `01110`, `00111`, `10111`, `11101`, `11011`\n"},{"title":"Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of input contains a single integer $P$, ($1\\leq P\\leq 1000$), which is the number of data sets that follow. Each data set is a single line that contains the data set number, followed by a space, followed by a decimal integer giving the number ($n$) of bits in the bit strings, followed by a single space, followed by a decimal integer ($k$) giving the desired adjacent bit count. The number of bits ($n$) will not be greater than $100$ and the parameters $n$ and $k$ will be chosen so that the result will fit in a signed $32$-bit integer.\n"},{"title":"Standard Output","format":"markdown","require":["katex"],"content":"\nFor each data set there is one line of output. It contains the data set number followed by a single space, followed by the number of $n$-bit strings with adjacent bit count equal to $k$.\n"},{"title":"Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>10\n1 5 2\n2 20 8\n3 30 17\n4 40 24\n5 50 37\n6 60 52\n7 70 59\n8 80 73\n9 90 84\n10 100 90</td><td>1 6\n2 63426\n3 1861225\n4 168212501\n5 44874764\n6 160916\n7 22937308\n8 99167\n9 15476\n10 23076518</td></tr></table>\n\n"}]}