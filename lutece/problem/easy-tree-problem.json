{"title":"Easy Tree Problem","time_limit":5000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/easy-tree-problem/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nA tree structure is very special structure, there is exactly one path connecting each pair of nodes.\n\nNow, given a tree structure, which has $N$ nodes(conveniently labeled from $1$ to $N$). And the root of the tree is always labeled with $1$. You are to write a program to figure out that, for every node $V$ in the tree, how many nodes there are in the sub-tree rooted by $V$ and it’s label number is larger than the label number of $V$.\n\n![title](/source/lutece/easy-tree-problem/img/aHR0cHM6Ly9hY20udWVzdGMuZWR1LmNuL21lZGlhL2ltYWdlL3Byb2JsZW0vNDU1LzIwMTQwODE4MjI1MTUwOTM0MTcuanBn.jpg)\n\nFor the example above:\n* $Ans\\_1 = 6, Ans\\_2 = 1, Ans\\_3 = 2, Ans\\_4 = 0, Ans\\_5 = 0, Ans\\_6 = 0, Ans\\_7 = 0$\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThere are multiple cases.The first line is an integer $T$ representing the number of test cases.The following lines every tow lines representing a test case. For each case there are exactly two lines:The first line with a single integer $N$($1 \\leq N \\leq 200000$), representing the size of tree.The second line with $N – 1$ numbers: $P\\_2, P\\_3, \\cdots P\\_n$. ($1 \\leq P\\_i \\leq N$),Which mean the father node of node $i$ is $P\\_i$.It is guaranteed that the input data is a tree structure and has $1$ as root.\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nFor each test case, output a line of $N$ numbers in the following format:\n* `Case #C: Ans[1] Ans[2] Ans[3] ... Ans[N]`\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>2\n7\n1 1 3 2 1 3\n4\n1 2 3</td><td>Case #1: 6 1 2 0 0 0 0\nCase #2: 3 2 1 0</td></tr></table>\n\n"}]}