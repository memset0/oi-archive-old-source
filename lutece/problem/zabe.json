{"title":"Å½ABE","time_limit":1000,"memory_limit":64,"url":"https://acm.uestc.edu.cn/problem/zabe/description","statement":[{"title":"# Content","format":"markdown","require":["katex"],"content":"\nThe Frog Regent has arranged his $N$ frog servants in a circle, with each frog facing the back of the next \none. Each frog is assigned a unique integer identifier (ID) from the set of $1$ to $N$. The frog arrangement \nis specified as a sequence of IDs. The sequence **always starts** with the frog with the **ID** $1$. It is \nfollowed by the ID of the frog in front of it, then the ID of the next one, and so on until the ID of the \nlast frog - the one *behind* the frog with ID $1$. \n\nA frog is considered to have made a single leap if it has jumped over the frog in front of it, swapping \nplaces with it in the process. For example, if the frogs are sequenced as `1 5 4 3 2 6` and the frog with \nID 2 makes two leaps, the resulting sequence will be `1 2 5 4 3 6` (the frog has shifted two places \nforward). When the Frog Regent proclaims the number $B$, the frog with ID $B$ makes $B$ leaps. \n\nThe Frog Regent wishes, using some number of proclamations, to rearrange the frogs from the starting \nsequence to his favourite resulting sequence. Given the starting and resulting frog sequences, write a\nprogram that will compute a sequence of proclamations needed for the Regent to rearrange the frogs \ninto the resulting sequence. Naturally, the starting and resulting sequences will not be equal.\n"},{"title":"# Standard Input","format":"markdown","require":["katex"],"content":"\nThe first line of input contains a positive integer $N$, the number of frogs ($3 \\leq N \\leq 100$). \n\nThe second line of input contains a permutation of the first $N$ positive integers, the starting frog \nsequence. \n\nThe third line of input contains another permutation of the first $N$ positive integers, the resulting frog \nsequence.\n"},{"title":"# Standard Output","format":"markdown","require":["katex"],"content":"\nOutput any sequence of integers (one integer per line) that the Frog Regent can proclaim in order to \nrearrange the frogs into the resulting sequence. \n\nThe number of proclamations must not exceed $100 000$. \n\n**Note**: The test data will ensure that a solution will always exist.\n"},{"title":"# Samples","format":"markdown","require":["katex"],"content":"\n<style>\n        table,table tr th, table tr td { border:1px solid #0094ff; }\n        table { width: 200px; min-height: 25px; line-height: 25px; text-align: center; border-collapse: collapse;}   \n    </style>\n<table>\n\t<tr>\n\t\t<td>Input</td>\n\t\t<td>Output</td>\n\t</tr>\n<tr><td>6 \n1 5 4 3 2 6 \n1 2 5 4 3 6</td><td>2</td></tr><tr><td>5 \n1 5 3 2 4 \n1 5 4 2 3</td><td>5 \n3 \n5 \n2</td></tr></table>\n\n"},{"title":"# Note","format":"markdown","require":["katex"],"content":"\nTest cases worth $40\\%$ of total points have $N$ not greater than $8$.\n"}]}