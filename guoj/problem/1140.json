{"title":"「GuOJ Round #0」修理路灯                              ","time_limit":1000,"memory_limit":512,"url":"https://guoj.icu/problem/1140","statement":[{"title":"# 题目描述","format":"markdown","require":["katex"],"content":"\n**这是一道交互题。**\r\n\r\nwjyyy 作为一个著名的电灯泡，被电力公司请去当路灯修理工。\r\n\t\t\t\r\n今天你和 wjyyy 同时被安排到了有 $n$ 盏灯的一条街上，你想要知道每盏灯的亮度。但是 wjyyy 今天并没有戴眼镜，他只能分辨出区间内哪盏灯最亮。\r\n\t\t\t\r\n好在你知道这 $n$ 盏灯的亮度是一个长为 $n$ 的排列。\n"},{"title":"# 输入格式","format":"markdown","require":["katex"],"content":"\n程序开始时，会从标准输入中读入一个正整数 $n$，表示灯的个数。\r\n\t\t\r\n当交互器读入你的询问后，会向标准输入中输出一行两个数 $p$ 和 $ans$，$p\\in[1,n],ans\\in\\{0,1\\}$。$p$ 表示 $[l,r]$ 中最亮的灯所在的位置；若 $ans=0$ 则说明它的亮度小于等于 $x$，若 $ans=1$ 则说明它的亮度大于 $x$。\r\n\t\t\t\r\n当交互器读入你的回答后，则不会再向标准输入中输出任何数据。交互器会直接将你在该测试点的成绩返回给评测机。\n"},{"title":"# 输出格式","format":"markdown","require":["katex"],"content":"\n你的询问方式如下。\r\n\t\t\t\r\n询问时，向标准输出中输出一行 `? l r x`，表示向 wjyyy 询问在区间 $[l,r]$ 的灯中最亮的灯的**位置**，以及它的亮度是否大于 $x$。\r\n\t\t\t\r\n然后刷新缓存，读取交互器的输出，见**输入格式**。\r\n\t\t\t\r\n你的回答方式如下。\r\n\t\t\t\r\n当你的所有询问进行完毕并获得答案后，向标准输出中输出一行。首先输出一个 `!`，空一格后在同一行依次输出 $n$ 个用空格隔开的正整数 $a_i$，表示位置 $i$ 的路灯的亮度。\r\n\r\n然后刷新缓存，退出程序。\r\n\r\n对于 `C++` 选手，你可以使用\r\n\r\n`fflush(stdout)` 或 `std::cout.flush()` 或 `std::cout<<std::endl` 或 `std::cout<<std::flush` 来刷新缓存。\r\n\r\n其他语言详见[交互题注意事项](http://hboj.icu/article/3)。\n"},{"title":"# 样例","format":"markdown","require":["katex"],"content":"\n#### 样例 1 输入\r\n```plain\r\n4\r\n2 0\r\n1 0\r\n4 1\r\n```\r\n#### 样例 1 输出\r\n```plain\r\n? 1 4 2\r\n? 1 1 2\r\n? 3 4 2\r\n! 1 4 2 3\r\n```\n"},{"title":"# 数据范围与提示","format":"markdown","require":["katex"],"content":"\n对于 $100\\%$ 的数据，$n\\le 1000$。\r\n\r\n你的询问不能超过 $n^2$ 次。\r\n\t\t\t\r\n交互器不会占用超过 $200\\mathrm{ms}$ 的时间和 $100\\mathrm{MB}$ 的空间。\r\n\r\n#### 提示\r\n当你的程序询问超过 $n^2$ 次时，交互器会停止回答你的询问，这会导致程序运行时间超限。\r\n\r\n如果你没有刷新缓存，会导致程序运行时间超限。\r\n\t\t\t\r\n对于其他错误，评测机会返回 Wrong Answer。\n\n\n"}]}