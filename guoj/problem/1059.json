{"title":"「NOI2017」分身术                              ","time_limit":3000,"memory_limit":768,"url":"https://guoj.icu/problem/1059","statement":[{"title":"# 题目描述","format":"markdown","require":["katex"],"content":"\n\"分！身！术！\" ——小 $P$ \r\n\r\n平面上有 $n$ 个小 $P$ 的分身。定义一组分身占领的区域为覆盖这组分身的最小凸多边形。小 $P$ 能力有限，每一时刻都会有若干分身消失。但在下一时刻之前，小 $P$ 会使用\r\n\r\n\"分！身！术！\"\r\n\r\n使得这些消失的分身重新出现在原来的位置。小 $P$ 想知道，每一时刻分身消失后，剩下的分身占领的区域面积是多少？\n"},{"title":"# 输入格式","format":"markdown","require":["katex"],"content":"\n输入第一行包含两个正整数 $n$  $m$ ，描述初始时分身的个数，和总时刻数。  \r\n接下来 $n$ 行，第 $i$ 行有两个整数 $x_i$ , $y_i$ ,描述第 $i$ 个分身的位置。  \r\n接下来 $m$ 行，每行的第一个整数 $k$ 表示这一时刻有 $k$ 个分身消失。接下来有 $k$ 个非负整数 $c_1$ ,  $c_2$ ,... $c_k$ ，用于生成消失的分身的编号。  \r\n生成方式如下：  \r\n设上一个时刻中，分身占领面积的两倍为 $S$ 。则该时刻消失的分身 $p_1$ , $p_2$ ,... $p_k$ 的编号为 ：\r\n\r\n$$\r\np_i = [(S + c_i)\\mod n] + 1\r\n$$\r\n\r\n特别的，在第一个时刻，我们认为上一个时刻中，$S = -1$ ,即：第一个时刻消失的分身 $p_1$ , $p_2$ ,... $p_k$ 的编号为：\r\n\r\n$$\r\np_i = [(-1 + c_i)\\mod n] + 1\r\n$$\r\n\n"},{"title":"# 输出格式","format":"markdown","require":["katex"],"content":"\n按给出时刻的顺序依次输出 $m$ 行，每行一个整数，表示该时刻剩余分身所占领区域面积的两倍。\n"},{"title":"# 样例","format":"markdown","require":["katex"],"content":"\n#### 样例输入1\r\n```plain\r\n6 2\r\n-1 0\r\n-1 -1\r\n0 -1\r\n1 0\r\n0 1\r\n0 0\r\n3 1 3 6\r\n2 0 1\r\n```\r\n\r\n#### 样例输出1\r\n```plain\r\n3\r\n2\r\n```\r\n#### 样例1解释\r\n如下图所示：左图表示输入的 $6$ 个分身的位置及它们占领的区域；中图表示第一个时刻的情形，消失的分身编号分别为 $1,3,6,$ 剩余 $3$ 个点占领图中实线内部区域，占据面积的两倍为 $3$ ；右图表示第二个时刻的情形，消失的分身编号分别为:\r\n$$\r\n[(0 + 3)\\mod 6] + 1 = 4\r\n$$\r\n\r\n$$\r\n[(1 + 3)\\mod 6] + 1= 5\r\n$$\r\n\r\n剩余的 $4$ 个点占领图中实线内部区域。\r\n![TIM图片20170721203208.png](/source/guoj/1059/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTcvMDcvMjEvNTk3MWY0ODlkY2ZiOS5wbmc=.png)\n"},{"title":"# 数据范围与提示","format":"markdown","require":["katex"],"content":"\n对于所有数据，保证：\r\n\r\n- $|x_i| ,|y_i| \\leq 10^8$ \r\n- 没有两个分身的坐标是完全相同的；\r\n- $k\\leq 100$ ；\r\n- 所有时刻的 $k$ 之和不超过 $2\\times 10^6$ ；\r\n- $0\\leq c_i \\leq 2^{31} - 1$ \r\n- 初始时，所有的 $n$ 个分身占据区域面积大于 $0$ ；\r\n- 定义所有 $n$ 个分身所占据区域的 **顶点集合** 为 $S$ , $S\\geq 3$ 。在任意时刻中， $S$ 中至少存在两个未消失的分身。\r\n\r\n由于 64 位操作系统的指针大小为 8 字节，在 GuOJ 上将空间限制扩大为 $768\\mathrm{MB}$。\n\n\n"}]}