{"title":"「CSP-S 2019」 E. 划分                              ","time_limit":2000,"memory_limit":1024,"url":"https://guoj.icu/problem/1338","statement":[{"title":"# 题目描述","format":"markdown","require":["katex"],"content":"\n2048 年，第三十届 CSP 认证的考场上，作为选手的小明打开了第一题。这个题的样例有 $n$ 组数据，数据从 $1 \\sim n$ 编号，$i$ 号数据的规模为 $a_i$。\r\n\r\n小明对该题设计出了一个暴力程序，对于一组规模为 $u$ 的数据，该程序的**运行时间**为 $u^2$。然而这个程序运行完一组规模为 $u$ 的数据之后，它将在任何一组规模**小于** $u$ 的数据上运行错误。样例中的 $a_i$ 不一定递增，但小明又想在不修改程序的情况下正确运行样例，于是小明决定使用一种非常原始的解决方案：将所有数据划分成若干个数据段，段内数据编号**连续**，接着将同一段内的数据合并成新数据，其规模等于段内原数据的**规模之和**，小明将让新数据的规模能够递增。\r\n\r\n也就是说，小明需要找到一些分界点 $1 \\leq k_1 \\lt k_2 \\lt \\cdots \\lt k_p \\lt n$，使得\r\n\r\n$$ \\sum_{i=1}^{k_1} a_i \\leq \\sum_{i=k_1+1}^{k_2} a_i \\leq \\cdots \\leq \\sum_{i=k_p+1}^{n} a_i $$\r\n\r\n注意 $p$ 可以为 $0$ 且此时 $k_0 = 0$，也就是小明可以将所有数据合并在一起运行。\r\n\r\n小明希望他的程序在正确运行样例情况下，运行时间也能尽量小，也就是**最小化**\r\n\r\n$$ (\\sum_{i=1}^{k_1} a_i)^2 + (\\sum_{i=k_1+1}^{k_2} a_i)^2 + \\cdots + (\\sum_{i=k_p+1}^{n} a_i)^2 $$\r\n\r\n小明觉得这个问题非常有趣，并向你请教：给定 $n$ 和 $a_i$，请你求出最优划分方案下，小明的程序的最小运行时间。\n"},{"title":"# 输入格式","format":"markdown","require":["katex"],"content":"\n**由于本题的数据范围较大，部分测试点的 $a_i$ 将在程序内生成。**\r\n\r\n第一行两个整数 $n, type$。$n$ 的意义见题目描述，$type$ 表示输入方式。\r\n1. 若 $type = 0$，则该测试点的 $a_i$ **直接给出**。输入文件接下来：第二行 $n$ 个以空格分隔的整数 $a_i$，表示每组数据的规模。\r\n2. 若 $type = 1$，则该测试点的 $a_i$ 将**特殊生成**，生成方式见后文。输入文件接下来：第二行六个以空格分隔的整数 $x, y, z, b_1, b_2, m$。接下来 $m$ 行中，第 $i (1 \\leq i \\leq m)$ 行包含三个以空格分隔的正整数 $p_i, l_i, r_i$。\r\n\r\n对于 $type = 1$ 的 23~25 号测试点，$a_i$ 的生成方式如下：\r\n\r\n给定整数 $x, y, z, b_1, b_2, m$，以及 $m$ 个三元组 $(p_i, l_i, r_i)$。\r\n\r\n保证 $n \\geq 2$。若 $n \\gt 2$，则 $\\forall 3 \\leq i \\leq n, b_i = (x \\times b_{i−1} + y \\times b_{i−2} + z) \\mod 2^{30}$。\r\n\r\n保证 $1 \\leq p_i \\leq n, p_m = n$。令 $p_0 = 0$，则 $p_i$ 还满足 $\\forall 0 \\leq i \\lt m$ 有 $p_i \\lt p_{i+1}$。\r\n\r\n对于所有 $1 \\leq j \\leq m$，若下标值 $i (1 \\leq i \\leq n)$满足 $p_{j−1} \\lt i \\leq p_j$，则有\r\n\r\n$$a_i = \\left(b_i \\mod \\left( r_j − l_j + 1 \\right) \\right) + l_j$$\r\n\r\n**上述数据生成方式仅是为了减少输入量大小，标准算法不依赖于该生成方式。**\n"},{"title":"# 输出格式","format":"markdown","require":["katex"],"content":"\n输出一行一个整数，表示答案。\n"},{"title":"# 样例","format":"markdown","require":["katex"],"content":"\n#### 样例输入 1\r\n```plain\r\n5 0\r\n5 1 7 9 9\r\n```\r\n#### 样例输出 1\r\n```plain\r\n247\r\n```\r\n#### 样例解释 1\r\n\r\n最优的划分方案为 $\\{5,1\\}, \\{7\\}, \\{9\\}, \\{9\\}$。由 $5 + 1 \\leq 7 \\leq 9 \\leq 9$ 知该方案合法。\r\n\r\n答案为 $(5 + 1)^2 + 7^2 + 9^2 + 9^2 = 247$。\r\n\r\n虽然划分方案 $\\{5\\}, \\{1\\}, \\{7\\}, \\{9\\}, \\{9\\}$ 对应的运行时间比 $247$ 小，但它不是一组合法方案，因为 $5 \\gt 1$。\r\n\r\n虽然划分方案 $\\{5\\}, \\{1,7\\}, \\{9\\}, \\{9\\}$ 合法，但该方案对应的运行时间为 $251$，比 $247$ 大。\r\n#### 样例输入 2\r\n```plain\r\n10 0\r\n5 6 7 7 4 6 2 13 19 9\r\n```\r\n#### 样例输出 2\r\n```plain\r\n1256\r\n```\r\n\r\n#### 样例解释 2\r\n\r\n最优的划分方案为 $\\{5\\}, \\{6\\}, \\{7\\}, \\{7\\}, \\{4,6,2\\}, \\{13\\}, \\{19,9\\}$。\r\n#### 样例输入 3\r\n```plain\r\n10000000 1\r\n123 456 789 12345 6789 3\r\n2000000 123456789 987654321\r\n7000000 234567891 876543219\r\n10000000 456789123 567891234\r\n```\r\n#### 样例输出 3\r\n```plain\r\n4972194419293431240859891640\r\n```\r\n\n"},{"title":"# 数据范围与提示","format":"markdown","require":["katex"],"content":"\n| 测试点编号   | $n \\leq$        | $a_i \\leq$ | $type =$ |\r\n| :----------- | :-------------- | :--------- | :------- |\r\n| $1 \\sim 3$   | $10$            | $10 $       | $0$      |\r\n| $4 \\sim 6$   | $50$            | $10^3$     | $0$      |\r\n| $7 \\sim 9$   | $400$           | $10^4$     | $0$      |\r\n| $10 \\sim 16$ | $5000$          | $10^5$     | $0$      |\r\n| $17 \\sim 22$ | $5 \\times 10^5$ | $10^6$     | $0$      |\r\n| $23 \\sim 25$ | $4 \\times 10^7$ | $10^9$     | $1$      |\r\n\r\n对于$type=0$的所有测试点,保证最后输出的答案$\\leq 4 \\times 10^{18}$\r\n\r\n所有测试点满足：$type \\in \\{0,1\\}$，$2 \\leq n \\leq 4 \\times 10^7$，$1 \\leq a_i \\leq 10^9$，$1 \\leq m \\leq 10^5$，$1 \\leq l_i \\leq r_i \\leq 10^9$，$0 \\leq x,y,z,b_1,b_2 \\lt 2^{30}$。\n\n\n"}]}