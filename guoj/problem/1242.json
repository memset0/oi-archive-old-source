{"title":"「NOI2005」维护数列                              ","time_limit":2000,"memory_limit":128,"url":"https://guoj.icu/problem/1242","statement":[{"title":"# 题目描述","format":"markdown","require":["katex"],"content":"\n请写一个程序，要求维护一个数列，支持以下 $6$ 种操作：（请注意，格式栏中的下划线‘`_`’表示实际输入文件中的空格）\r\n\r\n|操作编号|输入文件中的格式|说明|\r\n|:-:|:-:|:-:|\r\n|$1.$ 插入|`INSERT_posi_tot_c1_c2_..._ctot`|在当前数列的第 $posi$ 个数字后插入 $tot$ 个数字：$c_1, c_2, \\ldots, c_{tot}$；若在数列首插入，则 $posi$ 为 $0$|\r\n|$2.$ 删除|`DELETE_posi_tot`|从当前数列的第 $posi$ 个数字开始连续删除 $tot$ 个数字|\r\n|$3.$ 修改|`MAKE-SAME_posi_tot_c`|将当前数列的第 $posi$ 个数字开始的连续 $tot$ 个数字统一修改为 $c$|\r\n|$4.$ 翻转|`REVERSE_posi_tot`|取出从当前数列的第 $posi$ 个数字开始的 $tot$ 个数字，翻转后放入原来的位置|\r\n|$5.$ 求和|`GET-SUM_posi_tot`|计算从当前数列开始的第 $posi$ 个数字开始的 $tot$ 个数字的和并输出|\r\n|$6.$ 求和最大的子列|`MAX-SUM`|求出当前数列中和最大的一段子列，并输出最大和|\n"},{"title":"# 输入格式","format":"markdown","require":["katex"],"content":"\n输入的第 $1$ 行包含两个数 $N$ 和 $M$，$N$ 表示初始时数列中数的个数，$M$ 表示要进行的操作数目。\r\n\r\n第 $2$ 行包含 $N$ 个数字，描述初始时的数列。\r\n\r\n以下 $M$ 行，每行一条命令，格式参见问题描述中的表格。\n"},{"title":"# 输出格式","format":"markdown","require":["katex"],"content":"\n对于输入数据中的 `GET-SUM` 和 `MAX-SUM` 操作，向输出文件依次打印结果，每个答案（数字）占一行。\n"},{"title":"# 样例","format":"markdown","require":["katex"],"content":"\n#### 样例输入\r\n```plain\r\n9 8\r\n2 -6 3 5 1 -5 -3 6 3\r\nGET-SUM 5 4\r\nMAX-SUM\r\nINSERT 8 3 -5 7 2\r\nDELETE 12 1\r\nMAKE-SAME 3 3 2\r\nREVERSE 3 6\r\nGET-SUM 5 4\r\nMAX-SUM\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n-1\r\n10\r\n1\r\n10\r\n```\r\n\r\n#### 样例说明\r\n\r\n\r\n初始时，我们拥有数列\r\n<!--$$\r\n2\\quad -6\\qquad 3\\qquad 5\\qquad 1\\quad -5\\quad -3\\qquad 6\\qquad 3\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MTQ3ZmVkYzMzMTg5LnBuZw==.png)\r\n\r\n执行操作 `GET-SUM 5 4`，表示求出数列中从第 $5$ 个数开始连续 $4$ 个数字之和，如下图中的灰色部分 $1+(-5)+(-3)+6=-1$：\r\n<!--$$\r\n2\\quad -6\\qquad 3\\qquad 5\\qquad \\colorbox{lightgray}{$1\\quad -5\\quad -3\\qquad 6$}\\qquad 3\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MTM5MjQ2Yzk4NDQxLnBuZw==.png)\r\n\r\n执行操作 `MAX-SUM`，表示要求求出当前数列中最大的一段和，即如下图所示，应为 $3+5+1+(-5)+(-3)+6+3=10$：\r\n<!--$$\r\n2\\quad -6\\qquad \\colorbox{lightgray}{$3\\qquad 5\\qquad 1\\quad -5\\quad -3\\qquad 6\\qquad 3$}\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MjE5YWQ4OTUwMzI5LnBuZw==.png)\r\n\r\n执行操作 `INSERT 8 3 -5 7 2`，即在数列中第 $8$ 个数字后插入 $-5\\quad 7\\quad 2$，如下所示的灰色部分：\r\n<!--$$\r\n2\\quad -6\\qquad 3\\qquad 5\\qquad 1\\quad -5\\quad -3\\qquad 6\\quad\\colorbox{lightgray}{$-5\\qquad7\\qquad2$}\\qquad 3\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MjJhOWU4ZjQ4OTI4LnBuZw==.png)\r\n\r\n执行操作 `DELETE 12 1`，表示删除第 $12$ 个数字，即最后一个：\r\n<!--$$\r\n2\\quad -6\\qquad 3\\qquad 5\\qquad 1\\quad -5\\quad -3\\qquad 6\\quad-5\\qquad7\\qquad2\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MjQ3OTkwZjEyOTM1LnBuZw==.png)\r\n\r\n执行操作 `MAKE-SAME 3 3 2`，表示从第 $3$ 个数开始的 $3$ 个数字，即下图中的灰色部分，统一修改为 $2$：\r\n<!--$$\r\n2\\quad -6\\qquad \\colorbox{lightgray}{$3\\qquad 5\\qquad 1$}\\quad -5\\quad -3\\qquad 6\\quad-5\\qquad7\\qquad2\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MjVkZGMyNDIzMDAzLnBuZw==.png)\r\n\r\n改为\r\n<!--$$\r\n2\\quad -6\\qquad \\colorbox{lightgray}{$2\\qquad 2\\qquad 2$}\\quad -5\\quad -3\\qquad 6\\quad-5\\qquad7\\qquad2\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5Mjc1MTgwNTEwNTg5LnBuZw==.png)\r\n\r\n执行操作 `REVERSE 3 6`，表示取出数列中从第 $3$ 个数开始的连续 $6$ 个数： \r\n<!--$$\r\n2\\quad -6\\qquad \\colorbox{lightgray}{$2\\qquad 2\\qquad 2\\quad -5\\quad -3\\qquad 6$}\\quad-5\\qquad7\\qquad2\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5Mjg5ZjYzOTMxNDg2LnBuZw==.png)\r\n\r\n如上所示的灰色部分 $2\\quad\\ 2\\quad\\ 2\\ -5\\ -3\\quad\\ 6$，翻转后得到 $6\\ -3\\ -5\\quad\\ 2\\quad\\ 2\\quad\\ 2$，并放回原来位置： \r\n<!--$$\r\n2\\quad -6\\quad \\colorbox{lightgray}{$-6\\quad -3\\quad -5\\qquad 2\\qquad 2\\qquad 2$}\\quad-5\\qquad7\\qquad2\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MmI0ZGFjNjk5MzI5LnBuZw==.png)\r\n\r\n最后执行 `GET-SUM 5 4` 和 `MAX-SUM`，不难得到答案 $1$ 和 $10$。 \r\n<!--$$\r\n2\\quad -6\\quad -6\\quad -3\\quad \\rlap{\\overbrace{\\phantom{-5\\qquad 2\\qquad 2\\qquad 2}}^{\\texttt{GET-SUM 5 4}}}-5\\qquad \\underbrace{2\\qquad 2\\qquad 2\\quad-5\\qquad7\\qquad2}_{\\texttt{MAX-SUM}}\r\n$$-->\r\n![](/source/guoj/1242/img/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDYvMjIvNWQwZGU5MmQ1NTEzNTE0MTEwLnBuZw==.png)\n"},{"title":"# 数据范围与提示","format":"markdown","require":["katex"],"content":"\n#### 评分方法\r\n本题设有部分分，对于每一个测试点：\r\n\r\n- 如果你的程序能在输出文件正确的位置上打印 `GET-SUM` 操作的答案，你可以得到该测试点 $60\\%$ 的分数；\r\n- 如果你的程序能在输出文件正确的位置上打印 `MAX-SUM` 操作的答案，你可以得到该测试点 $40\\%$ 的分数；\r\n- 以上两条的分数可以叠加，即如果你的程序正确输出所有 `GET-SUM` 和 `MAX-SUM` 操作的答案，你可以得到该测试点 $100\\%$ 的分数。\r\n\r\n**请注意：如果你的程序只能正确处理某一种操作，请确定在输出文件正确的位置上打印结果，即必须为另一种操作留下对应的行，这样的行内也必须有内容，否则我们不保证可以正确评分。**\r\n\r\n#### 数据规模和约定\r\n\r\n你可以认为在任何时刻，数列中至少有 $1$ 个数。\r\n\r\n输入数据一定是正确的，即指定位置的数在数列中一定存在。\r\n\r\n$50\\%$ 的数据中，任何时刻数列中最多含有 $30 000$ 个数；\r\n\r\n$100\\%$ 的数据中，任何时刻数列中最多含有 $500 000$ 个数。\r\n\r\n$100\\%$ 的数据中，任何时刻数列中任何一个数字均在 $[-1 000, 1 000]$ 内。\r\n\r\n$100\\%$ 的数据中，$M\\le 20 000$，插入的数字总数不超过 $4 000 000$ 个，输入文件大小不超过 $20\\text{MBytes}$。\n\n\n"}]}