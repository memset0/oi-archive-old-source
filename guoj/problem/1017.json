{"title":"「WC2017」挑战                              ","time_limit":5500,"memory_limit":2048,"url":"https://guoj.icu/problem/1017","statement":[{"title":"题目描述","format":"markdown","require":["katex"],"content":"\n你和同学们找了三道题目用来练习。  \r\n这次练习的目标是写出能在时间限制里通过尽量大规模数据的代码。  \r\n同学们纷纷写出了优秀的代码。现在，他们向你发起了挑战，他们对每个问题都设置了若干个测试数据，这是他们能通过的最大规模的测试数据。现在，他们想看一看你写的代码究竟能超过多少同学的代码，通过多大规模的测试数据。  \r\n本题分为 $3$ 个任务，每个任务对应一道题和相应的若干个测试点，你需要对于每个任务，设计一个能通过尽量多测试点的程序。\r\n\r\n### 任务一\r\n给定 $n$ 个 $32$ 位无符号整数，将它们从小到大排序。\r\n\r\n### 任务二\r\n有 $2n$ 个人在玩 「石头剪刀布」 游戏。他们排成两排，每排 $n$ 个人。每个人在每一局游戏都使用固定策略，即对于第 $i (i \\in 1, 2)$ 排的第 $j (0 \\leq j < n)$ 个人，用一个整数 $a_{ij}$ 表示他的策略，其中 $0$ 表示只出石头，$1$ 表示只出剪刀，$2$ 表示只出布。  \r\n\r\n现在有 $q$ 个询问，每个询问给定三个整数 $x, y, l (0 \\leq x, y < n, 1 \\leq l \\leq n − \\max(x, y))$， 问将第一排的第 $x ∼ x + l − 1$ 个人和第二排的第 $y ∼ y + l − 1$ 个人比赛之后，第一排有多少个人会赢。  \r\n\r\n上文中 「比赛」 的意思是，对于所有整数 $i$ 满足 $0≤i<l$,让第一排的第 $x+i$ 个人和 第二排的第 $y+i$ 个人进行 「石头剪刀布」 游戏。\r\n\r\n### 任务三\r\n我们称一个合法的括号串为：只由左括号和右括号构成，两种括号的数量相等， 且任意一个前缀的左括号数量不少于右括号数量的串。现在给定一个由 `(`，`)`\r\n 和 `?` 构成的串，问有多少种不同的方案，使得将每个 `?` 都替换成一个括号之后，该串变成一 个合法的括号串。两种方案不同，当且仅当至少有一个位置的 `?` 被替换成了不同的括号。\n"},{"title":"输入格式","format":"markdown","require":["katex"],"content":"\n此题提供了模板程序。选手可以在此基础上编写自己的程序，模板程序详见下文数据范围与提示。  \r\n第一行一个整数 $\\text{task_id} (1 \\leq \\text{task_id} \\leq 3)$，表示任务编号。接下来是每个具体任务的输入内容。  \r\n在输入的同一行中，相邻的两个整数会被一个空格隔开。\r\n\r\n对于任务一：一行，两个整数 $n, s$。令 $a_0 = \\operatorname{next\\_integer}(s), a_i = \\operatorname{next\\_integer}(a_{i - 1}), 1 \\leq i < n$，则 $a_0, a_1, \\dots, a_{n - 1}$ 即为需要排序的 $n$ 个整数。\r\n\r\n对于任务二：第一行两个整数 $n, q$。第二行一个仅包含 `0`, `1`, `2` 的长度为 $n$ 的字符串，第 $i$ 个字符所代表的整数表示第一排第 $i$ 个人的策略（即 $a_{1i}$）。第三行格式同第二行，表示第二排各个人的策略。\r\n\r\n对于任务三：第一行一个整数 $n$，表示给定的串的长度。第二行一个字符串，即为给定的串。\n"},{"title":"输出格式","format":"markdown","require":["katex"],"content":"\n对于任务1：令 $b$ 为已经排好序的数组，调用 `output_arr(b, n * 4)` 即可。\r\n\r\n对于任务2：将每个询问的答案依次存入 $32$ 位无符号整数数组 $b$ 中（即，存入 $b_0,b_1,⋯,b_{q−1}$ 中），然后调用 `output_arr(b, q * 4)` 即可。\r\n\r\n对于任务3：输出一个整数，表示不同的方案数除以 $2^{32}$ 得到的余数。\n"},{"title":"样例","format":"markdown","require":["katex"],"content":"\n### 任务一\r\n#### 样例输入\r\n``` plain\r\n1\r\n100000 2017012501\r\n```\r\n\r\n#### 样例输出\r\n``` plain\r\n4275990336\r\n```\r\n### 任务二\r\n#### 样例输入\r\n``` plain\r\n2\r\n6 6\r\n200100\r\n200211\r\n5 1 3\r\n2 0 1\r\n2 0 3\r\n2 0 2\r\n2 3 4\r\n0 1 3\r\n```\r\n\r\n#### 样例输出\r\n``` plain\r\n3349208141\r\n```\r\n\r\n### 任务三\r\n#### 样例输入一\r\n``` plain\r\n3\r\n4\r\n(???\r\n```\r\n#### 样例输出一\r\n``` plain\r\n2\r\n```\r\n\r\n#### 样例输入二\r\n``` plain\r\n3\r\n4\r\n)???\r\n```\r\n#### 样例输出二\r\n``` plain\r\n0\r\n```\n"},{"title":"数据范围与提示","format":"markdown","require":["katex"],"content":"\n| 任务编号 | 分值 | 测试点编号 | 数据范围与约定 |\r\n| :-------------: | :-------------: | :-------------: | :-------------: |\r\n| 1 | 5 | 1 | $n = 100000$ |\r\n| 1 | 19 | 2 | $n = 10 ^ 8$ |\r\n| 1 | 11 | 3 | $n = 2 \\times 10 ^ 8$ |\r\n| 2 | 7 | 4 | $n = q = 1000$ |\r\n| 2 | 23 | 5 | $n = q = 300000$ |\r\n| 3 | 9 | 6 | $n = 1000$ |\r\n| 3 | 5 | 7 | $n = 120000$ |\r\n| 3 | 7 | 8 | $n = 225000$ |\r\n| 3 | 14 | 9 | $n = 266666$ |\r\n\r\n### 模板程序\r\n#### C++ 模板\r\n``` cpp\r\n\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <algorithm>\r\n\r\ntypedef unsigned int u32;\r\ntypedef unsigned long long u64;\r\n\r\ninline u32 next_integer(u32 x) {\r\n    x ^= x << 13;\r\n    x ^= x >> 17;\r\n    x ^= x << 5;\r\n    return x;\r\n}\r\n\r\nbool output_arr(void *a, u32 size) {\r\n    if (size % 4) {\r\n        return puts(\"-1\"), 0;\r\n    }\r\n\r\n    u32 blocks = size / 4;\r\n    u32 *A = (u32 *)a;\r\n    u32 ret = size;\r\n    u32 x = 23333333;\r\n    for (u32 i = 0; i < blocks; i++) {\r\n        ret = ret ^ (A[i] + x);\r\n        x ^= x << 13;\r\n        x ^= x >> 17;\r\n        x ^= x << 5;\r\n    }\r\n\r\n    return printf(\"%u\\n\", ret), 1;\r\n}\r\n\r\n// ===== header ======\r\n\r\nnamespace Sorting {\r\nvoid init_data(u32 *a, int n, u32 seed) {\r\n    for (int i = 0; i < n; i++) {\r\n        seed = next_integer(seed);\r\n        a[i] = seed;\r\n    }\r\n}\r\n\r\nvoid main() {\r\n    int n;\r\n    u32 seed;\r\n    scanf(\"%d%u\", &n, &seed);\r\n\r\n    u32 *a = new u32[n];\r\n    init_data(a, n, seed);\r\n\r\n    // sort(a, n);\r\n\r\n    output_arr(a, n * sizeof(u32));\r\n}\r\n}\r\n\r\nnamespace Game {\r\nvoid main() {\r\n    int n, q;\r\n    scanf(\"%d%d\", &n, &q);\r\n\r\n    char *s1 = new char[n + 1];\r\n    char *s2 = new char[n + 1];\r\n    scanf(\"%s%s\", s1, s2);\r\n\r\n    u32 *anss = new u32[q];\r\n    int *q_x = new int[q];\r\n    int *q_y = new int[q];\r\n    int *q_len = new int[q];\r\n\r\n    for (int i = 0; i < q; i++) {\r\n        scanf(\"%d%d%d\", q_x + i, q_y + i, q_len + i);\r\n    }\r\n\r\n    // solve(n, q, s1, s2, q_x, q_y, q_len, anss);\r\n\r\n    output_arr(anss, q * sizeof(u32));\r\n}\r\n}\r\n\r\nnamespace Parentheses {\r\nvoid main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    char *s = new char[n + 1];\r\n    scanf(\"%s\", s);\r\n\r\n    u32 ans;\r\n    // ans = solve(n, s);\r\n\r\n    printf(\"%u\\n\", ans);\r\n}\r\n}\r\n\r\nint main() {\r\n    int task_id;\r\n    scanf(\"%d\", &task_id);\r\n\r\n    switch (task_id) {\r\n        case 1:\r\n            Sorting::main();\r\n            break;\r\n        case 2:\r\n            Game::main();\r\n            break;\r\n        case 3:\r\n            Parentheses::main();\r\n            break;\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n#### C 模板\r\n``` c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n#define bool int\r\n#define true 1\r\n#define false 0\r\n\r\ntypedef unsigned int u32;\r\ntypedef unsigned long long u64;\r\n\r\ninline u32 next_integer(u32 x) {\r\n    x ^= x << 13;\r\n    x ^= x >> 17;\r\n    x ^= x << 5;\r\n    return x;\r\n}\r\n\r\nbool output_arr(void *a, u32 size) {\r\n    if (size % 4) {\r\n        return puts(\"-1\"), 0;\r\n    }\r\n\r\n    u32 blocks = size / 4;\r\n    u32 *A = (u32 *)a;\r\n    u32 ret = size;\r\n    u32 x = 23333333;\r\n    u32 i;\r\n    for (i = 0; i < blocks; i++) {\r\n        ret = ret ^ (A[i] + x);\r\n        x ^= x << 13;\r\n        x ^= x >> 17;\r\n        x ^= x << 5;\r\n    }\r\n\r\n    return printf(\"%u\\n\", ret), 1;\r\n}\r\n\r\n// ===== header ======\r\n\r\nvoid Sorting_main() {\r\n    int n;\r\n    u32 seed;\r\n    scanf(\"%d%u\", &n, &seed);\r\n\r\n    u32 *a = malloc(n * sizeof(u32));\r\n    int i;\r\n    for (i = 0; i < n; i++) {\r\n        seed = next_integer(seed);\r\n        a[i] = seed;\r\n    }\r\n\r\n    // sort(a, n);\r\n\r\n    output_arr(a, n * sizeof(u32));\r\n}\r\n\r\nvoid Game_main() {\r\n    int n, q;\r\n    scanf(\"%d%d\", &n, &q);\r\n\r\n    char *s1 = malloc((n + 1) * sizeof(char));\r\n    char *s2 = malloc((n + 1) * sizeof(char));\r\n    scanf(\"%s%s\", s1, s2);\r\n\r\n    u32 *anss = malloc(q * sizeof(u32));\r\n    int *q_x = malloc(q * sizeof(int));\r\n    int *q_y = malloc(q * sizeof(int));\r\n    int *q_len = malloc(q * sizeof(int));\r\n\r\n    int i;\r\n\r\n    for (i = 0; i < q; i++) {\r\n        scanf(\"%d%d%d\", q_x + i, q_y + i, q_len + i);\r\n    }\r\n\r\n    // solve(n, q, s1, s2, q_x, q_y, q_len, anss);\r\n\r\n    output_arr(anss, q * sizeof(u32));\r\n}\r\n\r\nvoid Parentheses_main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n\r\n    char *s = malloc((n + 1) * sizeof(char));\r\n    scanf(\"%s\", s);\r\n\r\n    u32 ans;\r\n    // ans = solve(n, s);\r\n\r\n    printf(\"%u\\n\", ans);\r\n}\r\n\r\nint main() {\r\n    int task_id;\r\n    scanf(\"%d\", &task_id);\r\n\r\n    switch (task_id) {\r\n        case 1:\r\n            Sorting_main();\r\n            break;\r\n        case 2:\r\n            Game_main();\r\n            break;\r\n        case 3:\r\n            Parentheses_main();\r\n            break;\r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n#### Pascal 模板\r\n``` pascal\r\ntype\r\n    u32 = dword;\r\n    u64 = qword;\r\n    u32_p = ^u32;\r\n    u64_p = ^u64;\r\n    longint_p = ^longint;\r\n\r\nfunction next_integer(x : u32) : u32; inline;\r\nbegin\r\n    x := x xor (x << 13);\r\n    x := x xor (x >> 17);\r\n    x := x xor (x << 5);\r\n    exit(x);\r\nend;\r\n\r\nfunction output_arr(a_in : pointer; size : u32) : boolean;\r\nvar\r\n    blocks : u32;\r\n    a, a_ed : u32_p;\r\n    ret, x : u32;\r\nbegin\r\n    if size mod 4 <> 0 then begin\r\n        writeln(-1);\r\n        exit(false);\r\n    end;\r\n    \r\n    blocks := size div 4;\r\n    ret := size;\r\n    a := a_in;\r\n    a_ed := a + blocks;\r\n    x := 23333333;\r\n    \r\n    while a < a_ed do begin\r\n        ret := ret xor (a[0] + x);\r\n        x := x xor (x << 13);\r\n        x := x xor (x >> 17);\r\n        x := x xor (x << 5);\r\n        inc(a);\r\n    end;\r\n    \r\n    writeln(ret);\r\n    exit(true);\r\nend;\r\n\r\n// ====== header ======\r\n\r\n\r\nprocedure init_data(a : u32_p; n : longint; seed : u32);\r\nvar\r\n    a_ed : u32_p;\r\nbegin\r\n    a_ed := a + n;\r\n    while a < a_ed do begin\r\n        seed := next_integer(seed);\r\n        a[0] := seed;\r\n        inc(a);\r\n    end;\r\nend;\r\n\r\nprocedure Sorting_main();\r\nvar\r\n    n : longint;\r\n    seed : u32;\r\n    a : u32_p;\r\n    i : u32;\r\nbegin\r\n    read(n, seed);\r\n    \r\n    a := Getmem(n * sizeof(u32));\r\n    init_data(a, n, seed);\r\n    \r\n    // sort(a, n);\r\n    \r\n    output_arr(a, n * sizeof(u32));\r\nend;\r\n\r\n\r\nprocedure Game_main();\r\nvar\r\n    n, q : longint;\r\n    s1, s2 : ansistring;\r\n    anss : u32_p;\r\n    q_x, q_y, q_len : longint_p;\r\n    i : longint;\r\nbegin\r\n    readln(n, q);\r\n    readln(s1);\r\n    readln(s2);\r\n    \r\n    anss := Getmem(q * sizeof(u32));\r\n    q_x := Getmem(q * sizeof(longint));\r\n    q_y := Getmem(q * sizeof(longint));\r\n    q_len := Getmem(q * sizeof(longint));\r\n    \r\n    for i := 0 to q - 1 do begin\r\n        read(q_x[i], q_y[i], q_len[i]);\r\n    end;\r\n    \r\n    // solve(n, q, s1, s2, q_x, q_y, q_len, anss);\r\n    \r\n    output_arr(anss, q * sizeof(u32));\r\nend;\r\n\r\n\r\nprocedure Parentheses_main();\r\nvar\r\n    n : longint;\r\n    s : ansistring;\r\n    ans : u32;\r\nbegin\r\n    read(n);\r\n    read(s);\r\n    \r\n    // ans := solve(n, s);\r\n    \r\n    writeln(ans);\r\nend;\r\n\r\n\r\nvar\r\n    task_id : longint;\r\n\r\nbegin\r\n    read(task_id);\r\n    \r\n    if task_id = 1 then begin\r\n        Sorting_main();\r\n    end else if task_id = 2 then begin\r\n        Game_main();\r\n    end else if task_id = 3 then begin\r\n        Parentheses_main();\r\n    end;\r\n    close(input); close(output);\r\nend.\r\n```\n\n\n"}]}