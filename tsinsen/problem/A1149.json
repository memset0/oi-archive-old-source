{"title":"FBI树","time_limit":1000,"memory_limit":256,"url":"http://www.tsinsen.com/A1149","statement":[{"title":"","format":"html","require":["katex"],"content":"\n<div id=\"pcont1\" style=\"margin-top:20px; display:block;\">\n"},{"title":"# 问题描述","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　我们可以把由“0”和“1”组成的字符串分为三类：全“0”串称为B串，全“1”串称为I串，既含“0”又含“1”的串则称为F串。<br/>\n　　FBI树是一种二叉树，它的结点类型也包括F结点，B结点和I结点三种。由一个长度为2<sup>N</sup>的“01”串S可以构造出一棵FBI树T，递归的构造方法如下：<br/>\n　　1)T的根结点为R，其类型与串S的类型相同；<br/>\n　　2)若串S的长度大于1，将串S从中间分开，分为等长的左右子串S1和S2；由左子串S1构造R的左子树T1，由右子串S2构造R的右子树T2。<br/>\n　　现在给定一个长度为2<sup>N</sup>的“01”串，请用上述构造方法构造出一棵FBI树，并输出它的后序遍历序列。</div>"},{"title":"# 输入格式","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　第一行是一个整数N（0  &lt;= N &lt;= 10），第二行是一个长度为2<sup>N</sup>的“01”串。</div>"},{"title":"# 输出格式","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　包括一行，这一行只包含一个字符串，即FBI树的后序遍历序列。</div>"},{"title":"# 样例输入","format":"html","require":["katex"],"content":"\n<div class=\"pddata\">3<br/>\n10001011</div>"},{"title":"# 样例输出","format":"html","require":["katex"],"content":"\n<div class=\"pddata\">IBFBBBFIBFIIIFF</div>"},{"title":"# 数据规模和约定","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　对于40%的数据，N  &lt;= 2；<br/>\n　　对于全部的数据，N  &lt;= 10。<br/>\n　　注：<br/>\n　　[1]   二叉树：二叉树是结点的有限集合，这个集合或为空集，或由一个根结点和两棵不相交的二叉树组成。这两棵不相交的二叉树分别称为这个根结点的左子树和右子树。<br/>\n　　[2]   后序遍历：后序遍历是深度优先遍历二叉树的一种方法，它的递归定义是：先后序遍历左子树，再后序遍历右子树，最后访问根。</div>\n\n</div>\n"}]}