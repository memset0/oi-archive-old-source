{"title":"Crash的文明世界(贾志鹏)","time_limit":12000,"memory_limit":512,"url":"http://www.tsinsen.com/A1233","statement":[{"title":"","format":"html","require":["katex"],"content":"\n<div id=\"pcont1\" style=\"margin-top:20px; display:block;\">\n"},{"title":"# 问题描述","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　Crash小朋友最近迷上了一款游戏——文明5(Civilization V)。在这个游戏中，玩家可以建立和发展自己的国家，通过外交和别的国家交流，或是通过战争征服别的国家。<br/>\n　　现在Crash已经拥有了一个N个城市的国家，这些城市之间通过道路相连。由于建设道路是有花费的，因此Crash只修建了N-1条道路连接这些城市，不过可以保证任意两个城市都有路径相通。<br/>\n　　在游戏中，Crash需要选择一个城市作为他的国家的首都，选择首都需要考虑很多指标，有一个指标是这样的：<br/>\n<img width=\"160\" height=\"64\" src=\"source/tsinsen/A1233/img/aHR0cDovL3d3dy50c2luc2VuLmNvbS9SZXF1aXJlRmlsZS5kbz9maWQ9dEo3Mkc3RUY=.do\"/><br/>\n　　其中S(i)表示第i个城市的指标值，dist(i, j)表示第i个城市到第j个城市需要经过的道路条数的最小值，k为一个常数且为正整数。<br/>\n　　因此Crash交给你一个简单的任务：给出城市之间的道路，对于每个城市，输出这个城市的指标值，由于指标值可能会很大，所以你只需要输出这个数mod10007的值。</div>"},{"title":"# 输入格式","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　输入的第一行包括两个正整数N和k。<br/>\n　　下面有N-1行，每行两个正整数u、v(1 ≤u, v≤N)，表示第u个城市和第v个城市之间有道路相连。这些道路保证能符合题目的要求。</div>"},{"title":"# 输出格式","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　输出共N行，每行一个正整数，第i行的正整数表示第i个城市的指标值mod10007的值。</div>"},{"title":"# 样例输入","format":"html","require":["katex"],"content":"\n<div class=\"pddata\">5 2<br/>\n1 2<br/>\n1 3<br/>\n2 4<br/>\n2 5</div>"},{"title":"# 样例输出","format":"html","require":["katex"],"content":"\n<div class=\"pddata\">10<br/>\n7<br/>\n23<br/>\n18<br/>\n18</div>"},{"title":"# 数据规模和约定","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　20%的数据满足N≤ 5000、k≤ 30。<br/>\n　　50%的数据满足N≤ 50000、k≤30。<br/>\n　　100%的数据满足N≤ 50000、k≤ 150。</div>"},{"title":"# 特别说明","format":"html","require":["katex"],"content":"\n<div class=\"pdcont\">　　由于数据大小限制为5MB，我只好对测试时的输入文件进行压缩处理。下面的函数可以将压缩的输入文件转化为原始输入文件。（函数从infile中读入压缩的输入文件，将解压缩后的输入文件输出到outfile中）<br/>\n　　C/C++版本：<br/>\n　　void Uncompress(FILE *infile, FILE *outfile)<br/>\n　　{<br/>\n　　int N, k, L, i, now, A, B, Q, tmp;<br/>\n　　fscanf(infile, &#34;%d%d%d&#34;, &amp;N, &amp;k, &amp;L);<br/>\n　　fscanf(infile, &#34;%d%d%d%d&#34;, &amp;now, &amp;A, &amp;B, &amp;Q);<br/>\n　　fprintf(outfile, &#34;%d %d\\n&#34;, N, k);<br/>\n　　for (i = 1; i &lt; N; i ++)<br/>\n　　{<br/>\n　　now = (now * A + B) % Q;<br/>\n　　tmp = (i &lt; L) ? i : L;<br/>\n　　fprintf(outfile, &#34;%d %d\\n&#34;, i - now % tmp, i + 1);<br/>\n　　}<br/>\n　　}<br/>\n<br/>\n　　Pascal版本：<br/>\n　　procedure Uncompress(varinfile, outfile : text);<br/>\n　　var<br/>\n　　N, k, L, i, now, A, B, Q, tmp : longint;<br/>\n　　begin<br/>\n　　read(infile, N, k, L, now, A, B, Q);<br/>\n　　writeln(outfile, N, &#39; &#39;, k);<br/>\n　　for i := 1 to N - 1 do<br/>\n　　begin<br/>\n　　now := (now * A + B) mod Q;<br/>\n　　if i &lt; L then tmp := i else tmp := L;<br/>\n　　writeln(outfile, i - now mod tmp, &#39; &#39;, i + 1);<br/>\n　　end;<br/>\n　　end;<br/>\n<br/>\n　　下面给出一个具体的例子。civiliazation_compressed.in表示压缩的输入文件，civilization.in表示解压缩后的输入文件。<br/>\n　　civilization_compressed.in<br/>\n　　7 26 4<br/>\n　　29643 2347 5431 54209<br/>\n<br/>\n　　civilization.in<br/>\n　　7 26<br/>\n　　1 2<br/>\n　　2 3<br/>\n　　2 4<br/>\n　　3 5<br/>\n　　4 6<br/>\n　　5 7</div>\n\n</div>\n"}]}